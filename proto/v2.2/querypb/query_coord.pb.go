// Code generated by protoc-gen-go. DO NOT EDIT.
// source: query_coord.proto

package querypb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	commonpb "github.com/milvus-io/birdwatcher/proto/v2.2/commonpb"
	datapb "github.com/milvus-io/birdwatcher/proto/v2.2/datapb"
	indexpb "github.com/milvus-io/birdwatcher/proto/v2.2/indexpb"
	internalpb "github.com/milvus-io/birdwatcher/proto/v2.2/internalpb"
	milvuspb "github.com/milvus-io/birdwatcher/proto/v2.2/milvuspb"
	msgpb "github.com/milvus-io/birdwatcher/proto/v2.2/msgpb"
	rgpb "github.com/milvus-io/birdwatcher/proto/v2.2/rgpb"
	schemapb "github.com/milvus-io/birdwatcher/proto/v2.2/schemapb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoadScope int32

const (
	LoadScope_Full  LoadScope = 0
	LoadScope_Delta LoadScope = 1
	LoadScope_Index LoadScope = 2
)

var LoadScope_name = map[int32]string{
	0: "Full",
	1: "Delta",
	2: "Index",
}

var LoadScope_value = map[string]int32{
	"Full":  0,
	"Delta": 1,
	"Index": 2,
}

func (x LoadScope) String() string {
	return proto.EnumName(LoadScope_name, int32(x))
}

func (LoadScope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{0}
}

type DataScope int32

const (
	DataScope_UnKnown    DataScope = 0
	DataScope_All        DataScope = 1
	DataScope_Streaming  DataScope = 2
	DataScope_Historical DataScope = 3
)

var DataScope_name = map[int32]string{
	0: "UnKnown",
	1: "All",
	2: "Streaming",
	3: "Historical",
}

var DataScope_value = map[string]int32{
	"UnKnown":    0,
	"All":        1,
	"Streaming":  2,
	"Historical": 3,
}

func (x DataScope) String() string {
	return proto.EnumName(DataScope_name, int32(x))
}

func (DataScope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{1}
}

type PartitionState int32

const (
	PartitionState_NotExist        PartitionState = 0
	PartitionState_NotPresent      PartitionState = 1
	PartitionState_OnDisk          PartitionState = 2
	PartitionState_PartialInMemory PartitionState = 3
	PartitionState_InMemory        PartitionState = 4
	PartitionState_PartialInGPU    PartitionState = 5
	PartitionState_InGPU           PartitionState = 6
)

var PartitionState_name = map[int32]string{
	0: "NotExist",
	1: "NotPresent",
	2: "OnDisk",
	3: "PartialInMemory",
	4: "InMemory",
	5: "PartialInGPU",
	6: "InGPU",
}

var PartitionState_value = map[string]int32{
	"NotExist":        0,
	"NotPresent":      1,
	"OnDisk":          2,
	"PartialInMemory": 3,
	"InMemory":        4,
	"PartialInGPU":    5,
	"InGPU":           6,
}

func (x PartitionState) String() string {
	return proto.EnumName(PartitionState_name, int32(x))
}

func (PartitionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{2}
}

type TriggerCondition int32

const (
	TriggerCondition_UnKnowCondition TriggerCondition = 0
	TriggerCondition_Handoff         TriggerCondition = 1
	TriggerCondition_LoadBalance     TriggerCondition = 2
	TriggerCondition_GrpcRequest     TriggerCondition = 3
	TriggerCondition_NodeDown        TriggerCondition = 4
)

var TriggerCondition_name = map[int32]string{
	0: "UnKnowCondition",
	1: "Handoff",
	2: "LoadBalance",
	3: "GrpcRequest",
	4: "NodeDown",
}

var TriggerCondition_value = map[string]int32{
	"UnKnowCondition": 0,
	"Handoff":         1,
	"LoadBalance":     2,
	"GrpcRequest":     3,
	"NodeDown":        4,
}

func (x TriggerCondition) String() string {
	return proto.EnumName(TriggerCondition_name, int32(x))
}

func (TriggerCondition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{3}
}

type LoadType int32

const (
	LoadType_UnKnownType    LoadType = 0
	LoadType_LoadPartition  LoadType = 1
	LoadType_LoadCollection LoadType = 2
)

var LoadType_name = map[int32]string{
	0: "UnKnownType",
	1: "LoadPartition",
	2: "LoadCollection",
}

var LoadType_value = map[string]int32{
	"UnKnownType":    0,
	"LoadPartition":  1,
	"LoadCollection": 2,
}

func (x LoadType) String() string {
	return proto.EnumName(LoadType_name, int32(x))
}

func (LoadType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{4}
}

type LoadStatus int32

const (
	LoadStatus_Invalid LoadStatus = 0
	LoadStatus_Loading LoadStatus = 1
	LoadStatus_Loaded  LoadStatus = 2
)

var LoadStatus_name = map[int32]string{
	0: "Invalid",
	1: "Loading",
	2: "Loaded",
}

var LoadStatus_value = map[string]int32{
	"Invalid": 0,
	"Loading": 1,
	"Loaded":  2,
}

func (x LoadStatus) String() string {
	return proto.EnumName(LoadStatus_name, int32(x))
}

func (LoadStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{5}
}

type SyncType int32

const (
	SyncType_Remove        SyncType = 0
	SyncType_Set           SyncType = 1
	SyncType_Amend         SyncType = 2
	SyncType_UpdateVersion SyncType = 3
)

var SyncType_name = map[int32]string{
	0: "Remove",
	1: "Set",
	2: "Amend",
	3: "UpdateVersion",
}

var SyncType_value = map[string]int32{
	"Remove":        0,
	"Set":           1,
	"Amend":         2,
	"UpdateVersion": 3,
}

func (x SyncType) String() string {
	return proto.EnumName(SyncType_name, int32(x))
}

func (SyncType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{6}
}

type ShowCollectionsRequest struct {
	Base *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// Not useful for now
	DbID                 int64    `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionIDs        []int64  `protobuf:"varint,3,rep,packed,name=collectionIDs,proto3" json:"collectionIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowCollectionsRequest) Reset()         { *m = ShowCollectionsRequest{} }
func (m *ShowCollectionsRequest) String() string { return proto.CompactTextString(m) }
func (*ShowCollectionsRequest) ProtoMessage()    {}
func (*ShowCollectionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{0}
}

func (m *ShowCollectionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowCollectionsRequest.Unmarshal(m, b)
}
func (m *ShowCollectionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowCollectionsRequest.Marshal(b, m, deterministic)
}
func (m *ShowCollectionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowCollectionsRequest.Merge(m, src)
}
func (m *ShowCollectionsRequest) XXX_Size() int {
	return xxx_messageInfo_ShowCollectionsRequest.Size(m)
}
func (m *ShowCollectionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowCollectionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShowCollectionsRequest proto.InternalMessageInfo

func (m *ShowCollectionsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ShowCollectionsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *ShowCollectionsRequest) GetCollectionIDs() []int64 {
	if m != nil {
		return m.CollectionIDs
	}
	return nil
}

type ShowCollectionsResponse struct {
	Status                *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	CollectionIDs         []int64          `protobuf:"varint,2,rep,packed,name=collectionIDs,proto3" json:"collectionIDs,omitempty"`
	InMemoryPercentages   []int64          `protobuf:"varint,3,rep,packed,name=inMemory_percentages,json=inMemoryPercentages,proto3" json:"inMemory_percentages,omitempty"`
	QueryServiceAvailable []bool           `protobuf:"varint,4,rep,packed,name=query_service_available,json=queryServiceAvailable,proto3" json:"query_service_available,omitempty"`
	RefreshProgress       []int64          `protobuf:"varint,5,rep,packed,name=refresh_progress,json=refreshProgress,proto3" json:"refresh_progress,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}         `json:"-"`
	XXX_unrecognized      []byte           `json:"-"`
	XXX_sizecache         int32            `json:"-"`
}

func (m *ShowCollectionsResponse) Reset()         { *m = ShowCollectionsResponse{} }
func (m *ShowCollectionsResponse) String() string { return proto.CompactTextString(m) }
func (*ShowCollectionsResponse) ProtoMessage()    {}
func (*ShowCollectionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{1}
}

func (m *ShowCollectionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowCollectionsResponse.Unmarshal(m, b)
}
func (m *ShowCollectionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowCollectionsResponse.Marshal(b, m, deterministic)
}
func (m *ShowCollectionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowCollectionsResponse.Merge(m, src)
}
func (m *ShowCollectionsResponse) XXX_Size() int {
	return xxx_messageInfo_ShowCollectionsResponse.Size(m)
}
func (m *ShowCollectionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowCollectionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShowCollectionsResponse proto.InternalMessageInfo

func (m *ShowCollectionsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ShowCollectionsResponse) GetCollectionIDs() []int64 {
	if m != nil {
		return m.CollectionIDs
	}
	return nil
}

func (m *ShowCollectionsResponse) GetInMemoryPercentages() []int64 {
	if m != nil {
		return m.InMemoryPercentages
	}
	return nil
}

func (m *ShowCollectionsResponse) GetQueryServiceAvailable() []bool {
	if m != nil {
		return m.QueryServiceAvailable
	}
	return nil
}

func (m *ShowCollectionsResponse) GetRefreshProgress() []int64 {
	if m != nil {
		return m.RefreshProgress
	}
	return nil
}

type ShowPartitionsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64           `protobuf:"varint,4,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ShowPartitionsRequest) Reset()         { *m = ShowPartitionsRequest{} }
func (m *ShowPartitionsRequest) String() string { return proto.CompactTextString(m) }
func (*ShowPartitionsRequest) ProtoMessage()    {}
func (*ShowPartitionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{2}
}

func (m *ShowPartitionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowPartitionsRequest.Unmarshal(m, b)
}
func (m *ShowPartitionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowPartitionsRequest.Marshal(b, m, deterministic)
}
func (m *ShowPartitionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowPartitionsRequest.Merge(m, src)
}
func (m *ShowPartitionsRequest) XXX_Size() int {
	return xxx_messageInfo_ShowPartitionsRequest.Size(m)
}
func (m *ShowPartitionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowPartitionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShowPartitionsRequest proto.InternalMessageInfo

func (m *ShowPartitionsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ShowPartitionsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *ShowPartitionsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *ShowPartitionsRequest) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

type ShowPartitionsResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	PartitionIDs         []int64          `protobuf:"varint,2,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	InMemoryPercentages  []int64          `protobuf:"varint,3,rep,packed,name=inMemory_percentages,json=inMemoryPercentages,proto3" json:"inMemory_percentages,omitempty"`
	RefreshProgress      []int64          `protobuf:"varint,4,rep,packed,name=refresh_progress,json=refreshProgress,proto3" json:"refresh_progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ShowPartitionsResponse) Reset()         { *m = ShowPartitionsResponse{} }
func (m *ShowPartitionsResponse) String() string { return proto.CompactTextString(m) }
func (*ShowPartitionsResponse) ProtoMessage()    {}
func (*ShowPartitionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{3}
}

func (m *ShowPartitionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowPartitionsResponse.Unmarshal(m, b)
}
func (m *ShowPartitionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowPartitionsResponse.Marshal(b, m, deterministic)
}
func (m *ShowPartitionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowPartitionsResponse.Merge(m, src)
}
func (m *ShowPartitionsResponse) XXX_Size() int {
	return xxx_messageInfo_ShowPartitionsResponse.Size(m)
}
func (m *ShowPartitionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowPartitionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShowPartitionsResponse proto.InternalMessageInfo

func (m *ShowPartitionsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ShowPartitionsResponse) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func (m *ShowPartitionsResponse) GetInMemoryPercentages() []int64 {
	if m != nil {
		return m.InMemoryPercentages
	}
	return nil
}

func (m *ShowPartitionsResponse) GetRefreshProgress() []int64 {
	if m != nil {
		return m.RefreshProgress
	}
	return nil
}

type LoadCollectionRequest struct {
	Base          *commonpb.MsgBase          `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID          int64                      `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID  int64                      `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	Schema        *schemapb.CollectionSchema `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	ReplicaNumber int32                      `protobuf:"varint,5,opt,name=replica_number,json=replicaNumber,proto3" json:"replica_number,omitempty"`
	// fieldID -> indexID
	FieldIndexID map[int64]int64 `protobuf:"bytes,6,rep,name=field_indexID,json=fieldIndexID,proto3" json:"field_indexID,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Refresh      bool            `protobuf:"varint,7,opt,name=refresh,proto3" json:"refresh,omitempty"`
	// resource group names
	ResourceGroups       []string `protobuf:"bytes,8,rep,name=resource_groups,json=resourceGroups,proto3" json:"resource_groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadCollectionRequest) Reset()         { *m = LoadCollectionRequest{} }
func (m *LoadCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*LoadCollectionRequest) ProtoMessage()    {}
func (*LoadCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{4}
}

func (m *LoadCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadCollectionRequest.Unmarshal(m, b)
}
func (m *LoadCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadCollectionRequest.Marshal(b, m, deterministic)
}
func (m *LoadCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadCollectionRequest.Merge(m, src)
}
func (m *LoadCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_LoadCollectionRequest.Size(m)
}
func (m *LoadCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadCollectionRequest proto.InternalMessageInfo

func (m *LoadCollectionRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *LoadCollectionRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *LoadCollectionRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *LoadCollectionRequest) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *LoadCollectionRequest) GetReplicaNumber() int32 {
	if m != nil {
		return m.ReplicaNumber
	}
	return 0
}

func (m *LoadCollectionRequest) GetFieldIndexID() map[int64]int64 {
	if m != nil {
		return m.FieldIndexID
	}
	return nil
}

func (m *LoadCollectionRequest) GetRefresh() bool {
	if m != nil {
		return m.Refresh
	}
	return false
}

func (m *LoadCollectionRequest) GetResourceGroups() []string {
	if m != nil {
		return m.ResourceGroups
	}
	return nil
}

type ReleaseCollectionRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	NodeID               int64             `protobuf:"varint,4,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReleaseCollectionRequest) Reset()         { *m = ReleaseCollectionRequest{} }
func (m *ReleaseCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseCollectionRequest) ProtoMessage()    {}
func (*ReleaseCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{5}
}

func (m *ReleaseCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseCollectionRequest.Unmarshal(m, b)
}
func (m *ReleaseCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseCollectionRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseCollectionRequest.Merge(m, src)
}
func (m *ReleaseCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseCollectionRequest.Size(m)
}
func (m *ReleaseCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseCollectionRequest proto.InternalMessageInfo

func (m *ReleaseCollectionRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ReleaseCollectionRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *ReleaseCollectionRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *ReleaseCollectionRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

type GetStatisticsRequest struct {
	Req                  *internalpb.GetStatisticsRequest `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	DmlChannels          []string                         `protobuf:"bytes,2,rep,name=dml_channels,json=dmlChannels,proto3" json:"dml_channels,omitempty"`
	SegmentIDs           []int64                          `protobuf:"varint,3,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	FromShardLeader      bool                             `protobuf:"varint,4,opt,name=from_shard_leader,json=fromShardLeader,proto3" json:"from_shard_leader,omitempty"`
	Scope                DataScope                        `protobuf:"varint,5,opt,name=scope,proto3,enum=milvus.protov2.query.DataScope" json:"scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *GetStatisticsRequest) Reset()         { *m = GetStatisticsRequest{} }
func (m *GetStatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*GetStatisticsRequest) ProtoMessage()    {}
func (*GetStatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{6}
}

func (m *GetStatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatisticsRequest.Unmarshal(m, b)
}
func (m *GetStatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatisticsRequest.Marshal(b, m, deterministic)
}
func (m *GetStatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatisticsRequest.Merge(m, src)
}
func (m *GetStatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_GetStatisticsRequest.Size(m)
}
func (m *GetStatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatisticsRequest proto.InternalMessageInfo

func (m *GetStatisticsRequest) GetReq() *internalpb.GetStatisticsRequest {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *GetStatisticsRequest) GetDmlChannels() []string {
	if m != nil {
		return m.DmlChannels
	}
	return nil
}

func (m *GetStatisticsRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *GetStatisticsRequest) GetFromShardLeader() bool {
	if m != nil {
		return m.FromShardLeader
	}
	return false
}

func (m *GetStatisticsRequest) GetScope() DataScope {
	if m != nil {
		return m.Scope
	}
	return DataScope_UnKnown
}

type LoadPartitionsRequest struct {
	Base          *commonpb.MsgBase          `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID          int64                      `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID  int64                      `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs  []int64                    `protobuf:"varint,4,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	Schema        *schemapb.CollectionSchema `protobuf:"bytes,5,opt,name=schema,proto3" json:"schema,omitempty"`
	ReplicaNumber int32                      `protobuf:"varint,6,opt,name=replica_number,json=replicaNumber,proto3" json:"replica_number,omitempty"`
	// fieldID -> indexID
	FieldIndexID map[int64]int64 `protobuf:"bytes,7,rep,name=field_indexID,json=fieldIndexID,proto3" json:"field_indexID,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Refresh      bool            `protobuf:"varint,8,opt,name=refresh,proto3" json:"refresh,omitempty"`
	// resource group names
	ResourceGroups       []string             `protobuf:"bytes,9,rep,name=resource_groups,json=resourceGroups,proto3" json:"resource_groups,omitempty"`
	IndexInfoList        []*indexpb.IndexInfo `protobuf:"bytes,10,rep,name=index_info_list,json=indexInfoList,proto3" json:"index_info_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LoadPartitionsRequest) Reset()         { *m = LoadPartitionsRequest{} }
func (m *LoadPartitionsRequest) String() string { return proto.CompactTextString(m) }
func (*LoadPartitionsRequest) ProtoMessage()    {}
func (*LoadPartitionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{7}
}

func (m *LoadPartitionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadPartitionsRequest.Unmarshal(m, b)
}
func (m *LoadPartitionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadPartitionsRequest.Marshal(b, m, deterministic)
}
func (m *LoadPartitionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadPartitionsRequest.Merge(m, src)
}
func (m *LoadPartitionsRequest) XXX_Size() int {
	return xxx_messageInfo_LoadPartitionsRequest.Size(m)
}
func (m *LoadPartitionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadPartitionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadPartitionsRequest proto.InternalMessageInfo

func (m *LoadPartitionsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *LoadPartitionsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *LoadPartitionsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *LoadPartitionsRequest) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func (m *LoadPartitionsRequest) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *LoadPartitionsRequest) GetReplicaNumber() int32 {
	if m != nil {
		return m.ReplicaNumber
	}
	return 0
}

func (m *LoadPartitionsRequest) GetFieldIndexID() map[int64]int64 {
	if m != nil {
		return m.FieldIndexID
	}
	return nil
}

func (m *LoadPartitionsRequest) GetRefresh() bool {
	if m != nil {
		return m.Refresh
	}
	return false
}

func (m *LoadPartitionsRequest) GetResourceGroups() []string {
	if m != nil {
		return m.ResourceGroups
	}
	return nil
}

func (m *LoadPartitionsRequest) GetIndexInfoList() []*indexpb.IndexInfo {
	if m != nil {
		return m.IndexInfoList
	}
	return nil
}

type ReleasePartitionsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64           `protobuf:"varint,4,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	NodeID               int64             `protobuf:"varint,5,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReleasePartitionsRequest) Reset()         { *m = ReleasePartitionsRequest{} }
func (m *ReleasePartitionsRequest) String() string { return proto.CompactTextString(m) }
func (*ReleasePartitionsRequest) ProtoMessage()    {}
func (*ReleasePartitionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{8}
}

func (m *ReleasePartitionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleasePartitionsRequest.Unmarshal(m, b)
}
func (m *ReleasePartitionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleasePartitionsRequest.Marshal(b, m, deterministic)
}
func (m *ReleasePartitionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleasePartitionsRequest.Merge(m, src)
}
func (m *ReleasePartitionsRequest) XXX_Size() int {
	return xxx_messageInfo_ReleasePartitionsRequest.Size(m)
}
func (m *ReleasePartitionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleasePartitionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleasePartitionsRequest proto.InternalMessageInfo

func (m *ReleasePartitionsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ReleasePartitionsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *ReleasePartitionsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *ReleasePartitionsRequest) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func (m *ReleasePartitionsRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

type GetPartitionStatesRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64           `protobuf:"varint,4,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetPartitionStatesRequest) Reset()         { *m = GetPartitionStatesRequest{} }
func (m *GetPartitionStatesRequest) String() string { return proto.CompactTextString(m) }
func (*GetPartitionStatesRequest) ProtoMessage()    {}
func (*GetPartitionStatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{9}
}

func (m *GetPartitionStatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPartitionStatesRequest.Unmarshal(m, b)
}
func (m *GetPartitionStatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPartitionStatesRequest.Marshal(b, m, deterministic)
}
func (m *GetPartitionStatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPartitionStatesRequest.Merge(m, src)
}
func (m *GetPartitionStatesRequest) XXX_Size() int {
	return xxx_messageInfo_GetPartitionStatesRequest.Size(m)
}
func (m *GetPartitionStatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPartitionStatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPartitionStatesRequest proto.InternalMessageInfo

func (m *GetPartitionStatesRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetPartitionStatesRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *GetPartitionStatesRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *GetPartitionStatesRequest) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

type GetPartitionStatesResponse struct {
	Status                *commonpb.Status   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	PartitionDescriptions []*PartitionStates `protobuf:"bytes,2,rep,name=partition_descriptions,json=partitionDescriptions,proto3" json:"partition_descriptions,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}           `json:"-"`
	XXX_unrecognized      []byte             `json:"-"`
	XXX_sizecache         int32              `json:"-"`
}

func (m *GetPartitionStatesResponse) Reset()         { *m = GetPartitionStatesResponse{} }
func (m *GetPartitionStatesResponse) String() string { return proto.CompactTextString(m) }
func (*GetPartitionStatesResponse) ProtoMessage()    {}
func (*GetPartitionStatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{10}
}

func (m *GetPartitionStatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPartitionStatesResponse.Unmarshal(m, b)
}
func (m *GetPartitionStatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPartitionStatesResponse.Marshal(b, m, deterministic)
}
func (m *GetPartitionStatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPartitionStatesResponse.Merge(m, src)
}
func (m *GetPartitionStatesResponse) XXX_Size() int {
	return xxx_messageInfo_GetPartitionStatesResponse.Size(m)
}
func (m *GetPartitionStatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPartitionStatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPartitionStatesResponse proto.InternalMessageInfo

func (m *GetPartitionStatesResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetPartitionStatesResponse) GetPartitionDescriptions() []*PartitionStates {
	if m != nil {
		return m.PartitionDescriptions
	}
	return nil
}

type GetSegmentInfoRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentIDs           []int64           `protobuf:"varint,2,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetSegmentInfoRequest) Reset()         { *m = GetSegmentInfoRequest{} }
func (m *GetSegmentInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetSegmentInfoRequest) ProtoMessage()    {}
func (*GetSegmentInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{11}
}

func (m *GetSegmentInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentInfoRequest.Unmarshal(m, b)
}
func (m *GetSegmentInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetSegmentInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentInfoRequest.Merge(m, src)
}
func (m *GetSegmentInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetSegmentInfoRequest.Size(m)
}
func (m *GetSegmentInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentInfoRequest proto.InternalMessageInfo

func (m *GetSegmentInfoRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetSegmentInfoRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *GetSegmentInfoRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

type GetSegmentInfoResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Infos                []*SegmentInfo   `protobuf:"bytes,2,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetSegmentInfoResponse) Reset()         { *m = GetSegmentInfoResponse{} }
func (m *GetSegmentInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetSegmentInfoResponse) ProtoMessage()    {}
func (*GetSegmentInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{12}
}

func (m *GetSegmentInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentInfoResponse.Unmarshal(m, b)
}
func (m *GetSegmentInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetSegmentInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentInfoResponse.Merge(m, src)
}
func (m *GetSegmentInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetSegmentInfoResponse.Size(m)
}
func (m *GetSegmentInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentInfoResponse proto.InternalMessageInfo

func (m *GetSegmentInfoResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetSegmentInfoResponse) GetInfos() []*SegmentInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

type GetShardLeadersRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CollectionID         int64             `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetShardLeadersRequest) Reset()         { *m = GetShardLeadersRequest{} }
func (m *GetShardLeadersRequest) String() string { return proto.CompactTextString(m) }
func (*GetShardLeadersRequest) ProtoMessage()    {}
func (*GetShardLeadersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{13}
}

func (m *GetShardLeadersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShardLeadersRequest.Unmarshal(m, b)
}
func (m *GetShardLeadersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShardLeadersRequest.Marshal(b, m, deterministic)
}
func (m *GetShardLeadersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShardLeadersRequest.Merge(m, src)
}
func (m *GetShardLeadersRequest) XXX_Size() int {
	return xxx_messageInfo_GetShardLeadersRequest.Size(m)
}
func (m *GetShardLeadersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShardLeadersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetShardLeadersRequest proto.InternalMessageInfo

func (m *GetShardLeadersRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetShardLeadersRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

type GetShardLeadersResponse struct {
	Status               *commonpb.Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Shards               []*ShardLeadersList `protobuf:"bytes,2,rep,name=shards,proto3" json:"shards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetShardLeadersResponse) Reset()         { *m = GetShardLeadersResponse{} }
func (m *GetShardLeadersResponse) String() string { return proto.CompactTextString(m) }
func (*GetShardLeadersResponse) ProtoMessage()    {}
func (*GetShardLeadersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{14}
}

func (m *GetShardLeadersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShardLeadersResponse.Unmarshal(m, b)
}
func (m *GetShardLeadersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShardLeadersResponse.Marshal(b, m, deterministic)
}
func (m *GetShardLeadersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShardLeadersResponse.Merge(m, src)
}
func (m *GetShardLeadersResponse) XXX_Size() int {
	return xxx_messageInfo_GetShardLeadersResponse.Size(m)
}
func (m *GetShardLeadersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShardLeadersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetShardLeadersResponse proto.InternalMessageInfo

func (m *GetShardLeadersResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetShardLeadersResponse) GetShards() []*ShardLeadersList {
	if m != nil {
		return m.Shards
	}
	return nil
}

type UpdateResourceGroupsRequest struct {
	Base                 *commonpb.MsgBase                    `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	ResourceGroups       map[string]*rgpb.ResourceGroupConfig `protobuf:"bytes,2,rep,name=resource_groups,json=resourceGroups,proto3" json:"resource_groups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *UpdateResourceGroupsRequest) Reset()         { *m = UpdateResourceGroupsRequest{} }
func (m *UpdateResourceGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateResourceGroupsRequest) ProtoMessage()    {}
func (*UpdateResourceGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{15}
}

func (m *UpdateResourceGroupsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResourceGroupsRequest.Unmarshal(m, b)
}
func (m *UpdateResourceGroupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResourceGroupsRequest.Marshal(b, m, deterministic)
}
func (m *UpdateResourceGroupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResourceGroupsRequest.Merge(m, src)
}
func (m *UpdateResourceGroupsRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateResourceGroupsRequest.Size(m)
}
func (m *UpdateResourceGroupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResourceGroupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResourceGroupsRequest proto.InternalMessageInfo

func (m *UpdateResourceGroupsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *UpdateResourceGroupsRequest) GetResourceGroups() map[string]*rgpb.ResourceGroupConfig {
	if m != nil {
		return m.ResourceGroups
	}
	return nil
}

type ShardLeadersList struct {
	ChannelName          string   `protobuf:"bytes,1,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	NodeIds              []int64  `protobuf:"varint,2,rep,packed,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	NodeAddrs            []string `protobuf:"bytes,3,rep,name=node_addrs,json=nodeAddrs,proto3" json:"node_addrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardLeadersList) Reset()         { *m = ShardLeadersList{} }
func (m *ShardLeadersList) String() string { return proto.CompactTextString(m) }
func (*ShardLeadersList) ProtoMessage()    {}
func (*ShardLeadersList) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{16}
}

func (m *ShardLeadersList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardLeadersList.Unmarshal(m, b)
}
func (m *ShardLeadersList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardLeadersList.Marshal(b, m, deterministic)
}
func (m *ShardLeadersList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardLeadersList.Merge(m, src)
}
func (m *ShardLeadersList) XXX_Size() int {
	return xxx_messageInfo_ShardLeadersList.Size(m)
}
func (m *ShardLeadersList) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardLeadersList.DiscardUnknown(m)
}

var xxx_messageInfo_ShardLeadersList proto.InternalMessageInfo

func (m *ShardLeadersList) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *ShardLeadersList) GetNodeIds() []int64 {
	if m != nil {
		return m.NodeIds
	}
	return nil
}

func (m *ShardLeadersList) GetNodeAddrs() []string {
	if m != nil {
		return m.NodeAddrs
	}
	return nil
}

type SyncNewCreatedPartitionRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CollectionID         int64             `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID          int64             `protobuf:"varint,3,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SyncNewCreatedPartitionRequest) Reset()         { *m = SyncNewCreatedPartitionRequest{} }
func (m *SyncNewCreatedPartitionRequest) String() string { return proto.CompactTextString(m) }
func (*SyncNewCreatedPartitionRequest) ProtoMessage()    {}
func (*SyncNewCreatedPartitionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{17}
}

func (m *SyncNewCreatedPartitionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncNewCreatedPartitionRequest.Unmarshal(m, b)
}
func (m *SyncNewCreatedPartitionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncNewCreatedPartitionRequest.Marshal(b, m, deterministic)
}
func (m *SyncNewCreatedPartitionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncNewCreatedPartitionRequest.Merge(m, src)
}
func (m *SyncNewCreatedPartitionRequest) XXX_Size() int {
	return xxx_messageInfo_SyncNewCreatedPartitionRequest.Size(m)
}
func (m *SyncNewCreatedPartitionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncNewCreatedPartitionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncNewCreatedPartitionRequest proto.InternalMessageInfo

func (m *SyncNewCreatedPartitionRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SyncNewCreatedPartitionRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SyncNewCreatedPartitionRequest) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

type LoadMetaInfo struct {
	LoadType             LoadType `protobuf:"varint,1,opt,name=load_type,json=loadType,proto3,enum=milvus.protov2.query.LoadType" json:"load_type,omitempty"`
	CollectionID         int64    `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64  `protobuf:"varint,3,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	MetricType           string   `protobuf:"bytes,4,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"` // Deprecated: Do not use.
	DbName               string   `protobuf:"bytes,5,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	ResourceGroup        string   `protobuf:"bytes,6,opt,name=resource_group,json=resourceGroup,proto3" json:"resource_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadMetaInfo) Reset()         { *m = LoadMetaInfo{} }
func (m *LoadMetaInfo) String() string { return proto.CompactTextString(m) }
func (*LoadMetaInfo) ProtoMessage()    {}
func (*LoadMetaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{18}
}

func (m *LoadMetaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadMetaInfo.Unmarshal(m, b)
}
func (m *LoadMetaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadMetaInfo.Marshal(b, m, deterministic)
}
func (m *LoadMetaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadMetaInfo.Merge(m, src)
}
func (m *LoadMetaInfo) XXX_Size() int {
	return xxx_messageInfo_LoadMetaInfo.Size(m)
}
func (m *LoadMetaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadMetaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LoadMetaInfo proto.InternalMessageInfo

func (m *LoadMetaInfo) GetLoadType() LoadType {
	if m != nil {
		return m.LoadType
	}
	return LoadType_UnKnownType
}

func (m *LoadMetaInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *LoadMetaInfo) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

// Deprecated: Do not use.
func (m *LoadMetaInfo) GetMetricType() string {
	if m != nil {
		return m.MetricType
	}
	return ""
}

func (m *LoadMetaInfo) GetDbName() string {
	if m != nil {
		return m.DbName
	}
	return ""
}

func (m *LoadMetaInfo) GetResourceGroup() string {
	if m != nil {
		return m.ResourceGroup
	}
	return ""
}

type WatchDmChannelsRequest struct {
	Base         *commonpb.MsgBase             `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	NodeID       int64                         `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	CollectionID int64                         `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs []int64                       `protobuf:"varint,4,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	Infos        []*datapb.VchannelInfo        `protobuf:"bytes,5,rep,name=infos,proto3" json:"infos,omitempty"`
	Schema       *schemapb.CollectionSchema    `protobuf:"bytes,6,opt,name=schema,proto3" json:"schema,omitempty"`
	ExcludeInfos []*datapb.SegmentInfo         `protobuf:"bytes,7,rep,name=exclude_infos,json=excludeInfos,proto3" json:"exclude_infos,omitempty"`
	LoadMeta     *LoadMetaInfo                 `protobuf:"bytes,8,opt,name=load_meta,json=loadMeta,proto3" json:"load_meta,omitempty"`
	ReplicaID    int64                         `protobuf:"varint,9,opt,name=replicaID,proto3" json:"replicaID,omitempty"`
	SegmentInfos map[int64]*datapb.SegmentInfo `protobuf:"bytes,10,rep,name=segment_infos,json=segmentInfos,proto3" json:"segment_infos,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Deprecated
	// for node down load balance, need to remove offline node in time after every watchDmChannel finish.
	OfflineNodeID        int64                `protobuf:"varint,11,opt,name=offlineNodeID,proto3" json:"offlineNodeID,omitempty"`
	Version              int64                `protobuf:"varint,12,opt,name=version,proto3" json:"version,omitempty"`
	IndexInfoList        []*indexpb.IndexInfo `protobuf:"bytes,13,rep,name=index_info_list,json=indexInfoList,proto3" json:"index_info_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WatchDmChannelsRequest) Reset()         { *m = WatchDmChannelsRequest{} }
func (m *WatchDmChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*WatchDmChannelsRequest) ProtoMessage()    {}
func (*WatchDmChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{19}
}

func (m *WatchDmChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchDmChannelsRequest.Unmarshal(m, b)
}
func (m *WatchDmChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchDmChannelsRequest.Marshal(b, m, deterministic)
}
func (m *WatchDmChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchDmChannelsRequest.Merge(m, src)
}
func (m *WatchDmChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_WatchDmChannelsRequest.Size(m)
}
func (m *WatchDmChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchDmChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchDmChannelsRequest proto.InternalMessageInfo

func (m *WatchDmChannelsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *WatchDmChannelsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *WatchDmChannelsRequest) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetInfos() []*datapb.VchannelInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetExcludeInfos() []*datapb.SegmentInfo {
	if m != nil {
		return m.ExcludeInfos
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetLoadMeta() *LoadMetaInfo {
	if m != nil {
		return m.LoadMeta
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetReplicaID() int64 {
	if m != nil {
		return m.ReplicaID
	}
	return 0
}

func (m *WatchDmChannelsRequest) GetSegmentInfos() map[int64]*datapb.SegmentInfo {
	if m != nil {
		return m.SegmentInfos
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetOfflineNodeID() int64 {
	if m != nil {
		return m.OfflineNodeID
	}
	return 0
}

func (m *WatchDmChannelsRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *WatchDmChannelsRequest) GetIndexInfoList() []*indexpb.IndexInfo {
	if m != nil {
		return m.IndexInfoList
	}
	return nil
}

type UnsubDmChannelRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	NodeID               int64             `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	ChannelName          string            `protobuf:"bytes,4,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UnsubDmChannelRequest) Reset()         { *m = UnsubDmChannelRequest{} }
func (m *UnsubDmChannelRequest) String() string { return proto.CompactTextString(m) }
func (*UnsubDmChannelRequest) ProtoMessage()    {}
func (*UnsubDmChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{20}
}

func (m *UnsubDmChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubDmChannelRequest.Unmarshal(m, b)
}
func (m *UnsubDmChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubDmChannelRequest.Marshal(b, m, deterministic)
}
func (m *UnsubDmChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubDmChannelRequest.Merge(m, src)
}
func (m *UnsubDmChannelRequest) XXX_Size() int {
	return xxx_messageInfo_UnsubDmChannelRequest.Size(m)
}
func (m *UnsubDmChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubDmChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubDmChannelRequest proto.InternalMessageInfo

func (m *UnsubDmChannelRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *UnsubDmChannelRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *UnsubDmChannelRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *UnsubDmChannelRequest) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

type SegmentLoadInfo struct {
	SegmentID            int64                 `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	PartitionID          int64                 `protobuf:"varint,2,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	CollectionID         int64                 `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	DbID                 int64                 `protobuf:"varint,4,opt,name=dbID,proto3" json:"dbID,omitempty"`
	FlushTime            int64                 `protobuf:"varint,5,opt,name=flush_time,json=flushTime,proto3" json:"flush_time,omitempty"`
	BinlogPaths          []*datapb.FieldBinlog `protobuf:"bytes,6,rep,name=binlog_paths,json=binlogPaths,proto3" json:"binlog_paths,omitempty"`
	NumOfRows            int64                 `protobuf:"varint,7,opt,name=num_of_rows,json=numOfRows,proto3" json:"num_of_rows,omitempty"`
	Statslogs            []*datapb.FieldBinlog `protobuf:"bytes,8,rep,name=statslogs,proto3" json:"statslogs,omitempty"`
	Deltalogs            []*datapb.FieldBinlog `protobuf:"bytes,9,rep,name=deltalogs,proto3" json:"deltalogs,omitempty"`
	CompactionFrom       []int64               `protobuf:"varint,10,rep,packed,name=compactionFrom,proto3" json:"compactionFrom,omitempty"`
	IndexInfos           []*FieldIndexInfo     `protobuf:"bytes,11,rep,name=index_infos,json=indexInfos,proto3" json:"index_infos,omitempty"`
	SegmentSize          int64                 `protobuf:"varint,12,opt,name=segment_size,json=segmentSize,proto3" json:"segment_size,omitempty"` // Deprecated: Do not use.
	InsertChannel        string                `protobuf:"bytes,13,opt,name=insert_channel,json=insertChannel,proto3" json:"insert_channel,omitempty"`
	StartPosition        *msgpb.MsgPosition    `protobuf:"bytes,14,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"`
	DeltaPosition        *msgpb.MsgPosition    `protobuf:"bytes,15,opt,name=delta_position,json=deltaPosition,proto3" json:"delta_position,omitempty"`
	ReadableVersion      int64                 `protobuf:"varint,16,opt,name=readableVersion,proto3" json:"readableVersion,omitempty"`
	Level                datapb.SegmentLevel   `protobuf:"varint,17,opt,name=level,proto3,enum=milvus.protov2.data.SegmentLevel" json:"level,omitempty"`
	StorageVersion       int64                 `protobuf:"varint,18,opt,name=storageVersion,proto3" json:"storageVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SegmentLoadInfo) Reset()         { *m = SegmentLoadInfo{} }
func (m *SegmentLoadInfo) String() string { return proto.CompactTextString(m) }
func (*SegmentLoadInfo) ProtoMessage()    {}
func (*SegmentLoadInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{21}
}

func (m *SegmentLoadInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentLoadInfo.Unmarshal(m, b)
}
func (m *SegmentLoadInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentLoadInfo.Marshal(b, m, deterministic)
}
func (m *SegmentLoadInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentLoadInfo.Merge(m, src)
}
func (m *SegmentLoadInfo) XXX_Size() int {
	return xxx_messageInfo_SegmentLoadInfo.Size(m)
}
func (m *SegmentLoadInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentLoadInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentLoadInfo proto.InternalMessageInfo

func (m *SegmentLoadInfo) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SegmentLoadInfo) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *SegmentLoadInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SegmentLoadInfo) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *SegmentLoadInfo) GetFlushTime() int64 {
	if m != nil {
		return m.FlushTime
	}
	return 0
}

func (m *SegmentLoadInfo) GetBinlogPaths() []*datapb.FieldBinlog {
	if m != nil {
		return m.BinlogPaths
	}
	return nil
}

func (m *SegmentLoadInfo) GetNumOfRows() int64 {
	if m != nil {
		return m.NumOfRows
	}
	return 0
}

func (m *SegmentLoadInfo) GetStatslogs() []*datapb.FieldBinlog {
	if m != nil {
		return m.Statslogs
	}
	return nil
}

func (m *SegmentLoadInfo) GetDeltalogs() []*datapb.FieldBinlog {
	if m != nil {
		return m.Deltalogs
	}
	return nil
}

func (m *SegmentLoadInfo) GetCompactionFrom() []int64 {
	if m != nil {
		return m.CompactionFrom
	}
	return nil
}

func (m *SegmentLoadInfo) GetIndexInfos() []*FieldIndexInfo {
	if m != nil {
		return m.IndexInfos
	}
	return nil
}

// Deprecated: Do not use.
func (m *SegmentLoadInfo) GetSegmentSize() int64 {
	if m != nil {
		return m.SegmentSize
	}
	return 0
}

func (m *SegmentLoadInfo) GetInsertChannel() string {
	if m != nil {
		return m.InsertChannel
	}
	return ""
}

func (m *SegmentLoadInfo) GetStartPosition() *msgpb.MsgPosition {
	if m != nil {
		return m.StartPosition
	}
	return nil
}

func (m *SegmentLoadInfo) GetDeltaPosition() *msgpb.MsgPosition {
	if m != nil {
		return m.DeltaPosition
	}
	return nil
}

func (m *SegmentLoadInfo) GetReadableVersion() int64 {
	if m != nil {
		return m.ReadableVersion
	}
	return 0
}

func (m *SegmentLoadInfo) GetLevel() datapb.SegmentLevel {
	if m != nil {
		return m.Level
	}
	return datapb.SegmentLevel_Legacy
}

func (m *SegmentLoadInfo) GetStorageVersion() int64 {
	if m != nil {
		return m.StorageVersion
	}
	return 0
}

type FieldIndexInfo struct {
	FieldID int64 `protobuf:"varint,1,opt,name=fieldID,proto3" json:"fieldID,omitempty"`
	// deprecated
	EnableIndex          bool                     `protobuf:"varint,2,opt,name=enable_index,json=enableIndex,proto3" json:"enable_index,omitempty"`
	IndexName            string                   `protobuf:"bytes,3,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	IndexID              int64                    `protobuf:"varint,4,opt,name=indexID,proto3" json:"indexID,omitempty"`
	BuildID              int64                    `protobuf:"varint,5,opt,name=buildID,proto3" json:"buildID,omitempty"`
	IndexParams          []*commonpb.KeyValuePair `protobuf:"bytes,6,rep,name=index_params,json=indexParams,proto3" json:"index_params,omitempty"`
	IndexFilePaths       []string                 `protobuf:"bytes,7,rep,name=index_file_paths,json=indexFilePaths,proto3" json:"index_file_paths,omitempty"`
	IndexSize            int64                    `protobuf:"varint,8,opt,name=index_size,json=indexSize,proto3" json:"index_size,omitempty"`
	IndexVersion         int64                    `protobuf:"varint,9,opt,name=index_version,json=indexVersion,proto3" json:"index_version,omitempty"`
	NumRows              int64                    `protobuf:"varint,10,opt,name=num_rows,json=numRows,proto3" json:"num_rows,omitempty"`
	CurrentIndexVersion  int32                    `protobuf:"varint,11,opt,name=current_index_version,json=currentIndexVersion,proto3" json:"current_index_version,omitempty"`
	IndexStoreVersion    int64                    `protobuf:"varint,12,opt,name=index_store_version,json=indexStoreVersion,proto3" json:"index_store_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FieldIndexInfo) Reset()         { *m = FieldIndexInfo{} }
func (m *FieldIndexInfo) String() string { return proto.CompactTextString(m) }
func (*FieldIndexInfo) ProtoMessage()    {}
func (*FieldIndexInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{22}
}

func (m *FieldIndexInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldIndexInfo.Unmarshal(m, b)
}
func (m *FieldIndexInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldIndexInfo.Marshal(b, m, deterministic)
}
func (m *FieldIndexInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldIndexInfo.Merge(m, src)
}
func (m *FieldIndexInfo) XXX_Size() int {
	return xxx_messageInfo_FieldIndexInfo.Size(m)
}
func (m *FieldIndexInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldIndexInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FieldIndexInfo proto.InternalMessageInfo

func (m *FieldIndexInfo) GetFieldID() int64 {
	if m != nil {
		return m.FieldID
	}
	return 0
}

func (m *FieldIndexInfo) GetEnableIndex() bool {
	if m != nil {
		return m.EnableIndex
	}
	return false
}

func (m *FieldIndexInfo) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *FieldIndexInfo) GetIndexID() int64 {
	if m != nil {
		return m.IndexID
	}
	return 0
}

func (m *FieldIndexInfo) GetBuildID() int64 {
	if m != nil {
		return m.BuildID
	}
	return 0
}

func (m *FieldIndexInfo) GetIndexParams() []*commonpb.KeyValuePair {
	if m != nil {
		return m.IndexParams
	}
	return nil
}

func (m *FieldIndexInfo) GetIndexFilePaths() []string {
	if m != nil {
		return m.IndexFilePaths
	}
	return nil
}

func (m *FieldIndexInfo) GetIndexSize() int64 {
	if m != nil {
		return m.IndexSize
	}
	return 0
}

func (m *FieldIndexInfo) GetIndexVersion() int64 {
	if m != nil {
		return m.IndexVersion
	}
	return 0
}

func (m *FieldIndexInfo) GetNumRows() int64 {
	if m != nil {
		return m.NumRows
	}
	return 0
}

func (m *FieldIndexInfo) GetCurrentIndexVersion() int32 {
	if m != nil {
		return m.CurrentIndexVersion
	}
	return 0
}

func (m *FieldIndexInfo) GetIndexStoreVersion() int64 {
	if m != nil {
		return m.IndexStoreVersion
	}
	return 0
}

type LoadSegmentsRequest struct {
	Base                 *commonpb.MsgBase          `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DstNodeID            int64                      `protobuf:"varint,2,opt,name=dst_nodeID,json=dstNodeID,proto3" json:"dst_nodeID,omitempty"`
	Infos                []*SegmentLoadInfo         `protobuf:"bytes,3,rep,name=infos,proto3" json:"infos,omitempty"`
	Schema               *schemapb.CollectionSchema `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	SourceNodeID         int64                      `protobuf:"varint,5,opt,name=source_nodeID,json=sourceNodeID,proto3" json:"source_nodeID,omitempty"`
	CollectionID         int64                      `protobuf:"varint,6,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	LoadMeta             *LoadMetaInfo              `protobuf:"bytes,7,opt,name=load_meta,json=loadMeta,proto3" json:"load_meta,omitempty"`
	ReplicaID            int64                      `protobuf:"varint,8,opt,name=replicaID,proto3" json:"replicaID,omitempty"`
	DeltaPositions       []*msgpb.MsgPosition       `protobuf:"bytes,9,rep,name=delta_positions,json=deltaPositions,proto3" json:"delta_positions,omitempty"`
	Version              int64                      `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	NeedTransfer         bool                       `protobuf:"varint,11,opt,name=need_transfer,json=needTransfer,proto3" json:"need_transfer,omitempty"`
	LoadScope            LoadScope                  `protobuf:"varint,12,opt,name=load_scope,json=loadScope,proto3,enum=milvus.protov2.query.LoadScope" json:"load_scope,omitempty"`
	IndexInfoList        []*indexpb.IndexInfo       `protobuf:"bytes,13,rep,name=index_info_list,json=indexInfoList,proto3" json:"index_info_list,omitempty"`
	LazyLoad             bool                       `protobuf:"varint,14,opt,name=lazy_load,json=lazyLoad,proto3" json:"lazy_load,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *LoadSegmentsRequest) Reset()         { *m = LoadSegmentsRequest{} }
func (m *LoadSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*LoadSegmentsRequest) ProtoMessage()    {}
func (*LoadSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{23}
}

func (m *LoadSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadSegmentsRequest.Unmarshal(m, b)
}
func (m *LoadSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *LoadSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadSegmentsRequest.Merge(m, src)
}
func (m *LoadSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_LoadSegmentsRequest.Size(m)
}
func (m *LoadSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadSegmentsRequest proto.InternalMessageInfo

func (m *LoadSegmentsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *LoadSegmentsRequest) GetDstNodeID() int64 {
	if m != nil {
		return m.DstNodeID
	}
	return 0
}

func (m *LoadSegmentsRequest) GetInfos() []*SegmentLoadInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *LoadSegmentsRequest) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *LoadSegmentsRequest) GetSourceNodeID() int64 {
	if m != nil {
		return m.SourceNodeID
	}
	return 0
}

func (m *LoadSegmentsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *LoadSegmentsRequest) GetLoadMeta() *LoadMetaInfo {
	if m != nil {
		return m.LoadMeta
	}
	return nil
}

func (m *LoadSegmentsRequest) GetReplicaID() int64 {
	if m != nil {
		return m.ReplicaID
	}
	return 0
}

func (m *LoadSegmentsRequest) GetDeltaPositions() []*msgpb.MsgPosition {
	if m != nil {
		return m.DeltaPositions
	}
	return nil
}

func (m *LoadSegmentsRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *LoadSegmentsRequest) GetNeedTransfer() bool {
	if m != nil {
		return m.NeedTransfer
	}
	return false
}

func (m *LoadSegmentsRequest) GetLoadScope() LoadScope {
	if m != nil {
		return m.LoadScope
	}
	return LoadScope_Full
}

func (m *LoadSegmentsRequest) GetIndexInfoList() []*indexpb.IndexInfo {
	if m != nil {
		return m.IndexInfoList
	}
	return nil
}

func (m *LoadSegmentsRequest) GetLazyLoad() bool {
	if m != nil {
		return m.LazyLoad
	}
	return false
}

type ReleaseSegmentsRequest struct {
	Base   *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	NodeID int64             `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	// Not useful for now
	DbID                 int64              `protobuf:"varint,3,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64              `protobuf:"varint,4,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64            `protobuf:"varint,5,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	SegmentIDs           []int64            `protobuf:"varint,6,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	Scope                DataScope          `protobuf:"varint,7,opt,name=scope,proto3,enum=milvus.protov2.query.DataScope" json:"scope,omitempty"`
	Shard                string             `protobuf:"bytes,8,opt,name=shard,proto3" json:"shard,omitempty"`
	NeedTransfer         bool               `protobuf:"varint,11,opt,name=need_transfer,json=needTransfer,proto3" json:"need_transfer,omitempty"`
	Checkpoint           *msgpb.MsgPosition `protobuf:"bytes,12,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReleaseSegmentsRequest) Reset()         { *m = ReleaseSegmentsRequest{} }
func (m *ReleaseSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseSegmentsRequest) ProtoMessage()    {}
func (*ReleaseSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{24}
}

func (m *ReleaseSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseSegmentsRequest.Unmarshal(m, b)
}
func (m *ReleaseSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseSegmentsRequest.Merge(m, src)
}
func (m *ReleaseSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseSegmentsRequest.Size(m)
}
func (m *ReleaseSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseSegmentsRequest proto.InternalMessageInfo

func (m *ReleaseSegmentsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ReleaseSegmentsRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *ReleaseSegmentsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *ReleaseSegmentsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *ReleaseSegmentsRequest) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func (m *ReleaseSegmentsRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *ReleaseSegmentsRequest) GetScope() DataScope {
	if m != nil {
		return m.Scope
	}
	return DataScope_UnKnown
}

func (m *ReleaseSegmentsRequest) GetShard() string {
	if m != nil {
		return m.Shard
	}
	return ""
}

func (m *ReleaseSegmentsRequest) GetNeedTransfer() bool {
	if m != nil {
		return m.NeedTransfer
	}
	return false
}

func (m *ReleaseSegmentsRequest) GetCheckpoint() *msgpb.MsgPosition {
	if m != nil {
		return m.Checkpoint
	}
	return nil
}

type SearchRequest struct {
	Req                  *internalpb.SearchRequest `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	DmlChannels          []string                  `protobuf:"bytes,2,rep,name=dml_channels,json=dmlChannels,proto3" json:"dml_channels,omitempty"`
	SegmentIDs           []int64                   `protobuf:"varint,3,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	FromShardLeader      bool                      `protobuf:"varint,4,opt,name=from_shard_leader,json=fromShardLeader,proto3" json:"from_shard_leader,omitempty"`
	Scope                DataScope                 `protobuf:"varint,5,opt,name=scope,proto3,enum=milvus.protov2.query.DataScope" json:"scope,omitempty"`
	TotalChannelNum      int32                     `protobuf:"varint,6,opt,name=total_channel_num,json=totalChannelNum,proto3" json:"total_channel_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{25}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetReq() *internalpb.SearchRequest {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *SearchRequest) GetDmlChannels() []string {
	if m != nil {
		return m.DmlChannels
	}
	return nil
}

func (m *SearchRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *SearchRequest) GetFromShardLeader() bool {
	if m != nil {
		return m.FromShardLeader
	}
	return false
}

func (m *SearchRequest) GetScope() DataScope {
	if m != nil {
		return m.Scope
	}
	return DataScope_UnKnown
}

func (m *SearchRequest) GetTotalChannelNum() int32 {
	if m != nil {
		return m.TotalChannelNum
	}
	return 0
}

type QueryRequest struct {
	Req                  *internalpb.RetrieveRequest `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	DmlChannels          []string                    `protobuf:"bytes,2,rep,name=dml_channels,json=dmlChannels,proto3" json:"dml_channels,omitempty"`
	SegmentIDs           []int64                     `protobuf:"varint,3,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	FromShardLeader      bool                        `protobuf:"varint,4,opt,name=from_shard_leader,json=fromShardLeader,proto3" json:"from_shard_leader,omitempty"`
	Scope                DataScope                   `protobuf:"varint,5,opt,name=scope,proto3,enum=milvus.protov2.query.DataScope" json:"scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{26}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetReq() *internalpb.RetrieveRequest {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *QueryRequest) GetDmlChannels() []string {
	if m != nil {
		return m.DmlChannels
	}
	return nil
}

func (m *QueryRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *QueryRequest) GetFromShardLeader() bool {
	if m != nil {
		return m.FromShardLeader
	}
	return false
}

func (m *QueryRequest) GetScope() DataScope {
	if m != nil {
		return m.Scope
	}
	return DataScope_UnKnown
}

type SyncReplicaSegmentsRequest struct {
	Base                 *commonpb.MsgBase      `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	VchannelName         string                 `protobuf:"bytes,2,opt,name=vchannel_name,json=vchannelName,proto3" json:"vchannel_name,omitempty"`
	ReplicaSegments      []*ReplicaSegmentsInfo `protobuf:"bytes,3,rep,name=replica_segments,json=replicaSegments,proto3" json:"replica_segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SyncReplicaSegmentsRequest) Reset()         { *m = SyncReplicaSegmentsRequest{} }
func (m *SyncReplicaSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*SyncReplicaSegmentsRequest) ProtoMessage()    {}
func (*SyncReplicaSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{27}
}

func (m *SyncReplicaSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncReplicaSegmentsRequest.Unmarshal(m, b)
}
func (m *SyncReplicaSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncReplicaSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *SyncReplicaSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncReplicaSegmentsRequest.Merge(m, src)
}
func (m *SyncReplicaSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_SyncReplicaSegmentsRequest.Size(m)
}
func (m *SyncReplicaSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncReplicaSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncReplicaSegmentsRequest proto.InternalMessageInfo

func (m *SyncReplicaSegmentsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SyncReplicaSegmentsRequest) GetVchannelName() string {
	if m != nil {
		return m.VchannelName
	}
	return ""
}

func (m *SyncReplicaSegmentsRequest) GetReplicaSegments() []*ReplicaSegmentsInfo {
	if m != nil {
		return m.ReplicaSegments
	}
	return nil
}

type ReplicaSegmentsInfo struct {
	NodeId               int64    `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	PartitionId          int64    `protobuf:"varint,2,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	SegmentIds           []int64  `protobuf:"varint,3,rep,packed,name=segment_ids,json=segmentIds,proto3" json:"segment_ids,omitempty"`
	Versions             []int64  `protobuf:"varint,4,rep,packed,name=versions,proto3" json:"versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaSegmentsInfo) Reset()         { *m = ReplicaSegmentsInfo{} }
func (m *ReplicaSegmentsInfo) String() string { return proto.CompactTextString(m) }
func (*ReplicaSegmentsInfo) ProtoMessage()    {}
func (*ReplicaSegmentsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{28}
}

func (m *ReplicaSegmentsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaSegmentsInfo.Unmarshal(m, b)
}
func (m *ReplicaSegmentsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaSegmentsInfo.Marshal(b, m, deterministic)
}
func (m *ReplicaSegmentsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaSegmentsInfo.Merge(m, src)
}
func (m *ReplicaSegmentsInfo) XXX_Size() int {
	return xxx_messageInfo_ReplicaSegmentsInfo.Size(m)
}
func (m *ReplicaSegmentsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaSegmentsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaSegmentsInfo proto.InternalMessageInfo

func (m *ReplicaSegmentsInfo) GetNodeId() int64 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *ReplicaSegmentsInfo) GetPartitionId() int64 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *ReplicaSegmentsInfo) GetSegmentIds() []int64 {
	if m != nil {
		return m.SegmentIds
	}
	return nil
}

func (m *ReplicaSegmentsInfo) GetVersions() []int64 {
	if m != nil {
		return m.Versions
	}
	return nil
}

type GetLoadInfoRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CollectionId         int64             `protobuf:"varint,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetLoadInfoRequest) Reset()         { *m = GetLoadInfoRequest{} }
func (m *GetLoadInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetLoadInfoRequest) ProtoMessage()    {}
func (*GetLoadInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{29}
}

func (m *GetLoadInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLoadInfoRequest.Unmarshal(m, b)
}
func (m *GetLoadInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLoadInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetLoadInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLoadInfoRequest.Merge(m, src)
}
func (m *GetLoadInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetLoadInfoRequest.Size(m)
}
func (m *GetLoadInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLoadInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLoadInfoRequest proto.InternalMessageInfo

func (m *GetLoadInfoRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetLoadInfoRequest) GetCollectionId() int64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

type GetLoadInfoResponse struct {
	Status               *commonpb.Status           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Schema               *schemapb.CollectionSchema `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	LoadType             LoadType                   `protobuf:"varint,3,opt,name=load_type,json=loadType,proto3,enum=milvus.protov2.query.LoadType" json:"load_type,omitempty"`
	Partitions           []int64                    `protobuf:"varint,4,rep,packed,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetLoadInfoResponse) Reset()         { *m = GetLoadInfoResponse{} }
func (m *GetLoadInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetLoadInfoResponse) ProtoMessage()    {}
func (*GetLoadInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{30}
}

func (m *GetLoadInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLoadInfoResponse.Unmarshal(m, b)
}
func (m *GetLoadInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLoadInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetLoadInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLoadInfoResponse.Merge(m, src)
}
func (m *GetLoadInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetLoadInfoResponse.Size(m)
}
func (m *GetLoadInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLoadInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLoadInfoResponse proto.InternalMessageInfo

func (m *GetLoadInfoResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetLoadInfoResponse) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *GetLoadInfoResponse) GetLoadType() LoadType {
	if m != nil {
		return m.LoadType
	}
	return LoadType_UnKnownType
}

func (m *GetLoadInfoResponse) GetPartitions() []int64 {
	if m != nil {
		return m.Partitions
	}
	return nil
}

type HandoffSegmentsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentInfos         []*SegmentInfo    `protobuf:"bytes,2,rep,name=segmentInfos,proto3" json:"segmentInfos,omitempty"`
	ReleasedSegments     []int64           `protobuf:"varint,3,rep,packed,name=released_segments,json=releasedSegments,proto3" json:"released_segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HandoffSegmentsRequest) Reset()         { *m = HandoffSegmentsRequest{} }
func (m *HandoffSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*HandoffSegmentsRequest) ProtoMessage()    {}
func (*HandoffSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{31}
}

func (m *HandoffSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandoffSegmentsRequest.Unmarshal(m, b)
}
func (m *HandoffSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandoffSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *HandoffSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandoffSegmentsRequest.Merge(m, src)
}
func (m *HandoffSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_HandoffSegmentsRequest.Size(m)
}
func (m *HandoffSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandoffSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandoffSegmentsRequest proto.InternalMessageInfo

func (m *HandoffSegmentsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *HandoffSegmentsRequest) GetSegmentInfos() []*SegmentInfo {
	if m != nil {
		return m.SegmentInfos
	}
	return nil
}

func (m *HandoffSegmentsRequest) GetReleasedSegments() []int64 {
	if m != nil {
		return m.ReleasedSegments
	}
	return nil
}

type LoadBalanceRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SourceNodeIDs        []int64           `protobuf:"varint,2,rep,packed,name=source_nodeIDs,json=sourceNodeIDs,proto3" json:"source_nodeIDs,omitempty"`
	BalanceReason        TriggerCondition  `protobuf:"varint,3,opt,name=balance_reason,json=balanceReason,proto3,enum=milvus.protov2.query.TriggerCondition" json:"balance_reason,omitempty"`
	DstNodeIDs           []int64           `protobuf:"varint,4,rep,packed,name=dst_nodeIDs,json=dstNodeIDs,proto3" json:"dst_nodeIDs,omitempty"`
	SealedSegmentIDs     []int64           `protobuf:"varint,5,rep,packed,name=sealed_segmentIDs,json=sealedSegmentIDs,proto3" json:"sealed_segmentIDs,omitempty"`
	CollectionID         int64             `protobuf:"varint,6,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LoadBalanceRequest) Reset()         { *m = LoadBalanceRequest{} }
func (m *LoadBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*LoadBalanceRequest) ProtoMessage()    {}
func (*LoadBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{32}
}

func (m *LoadBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadBalanceRequest.Unmarshal(m, b)
}
func (m *LoadBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadBalanceRequest.Marshal(b, m, deterministic)
}
func (m *LoadBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadBalanceRequest.Merge(m, src)
}
func (m *LoadBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_LoadBalanceRequest.Size(m)
}
func (m *LoadBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadBalanceRequest proto.InternalMessageInfo

func (m *LoadBalanceRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *LoadBalanceRequest) GetSourceNodeIDs() []int64 {
	if m != nil {
		return m.SourceNodeIDs
	}
	return nil
}

func (m *LoadBalanceRequest) GetBalanceReason() TriggerCondition {
	if m != nil {
		return m.BalanceReason
	}
	return TriggerCondition_UnKnowCondition
}

func (m *LoadBalanceRequest) GetDstNodeIDs() []int64 {
	if m != nil {
		return m.DstNodeIDs
	}
	return nil
}

func (m *LoadBalanceRequest) GetSealedSegmentIDs() []int64 {
	if m != nil {
		return m.SealedSegmentIDs
	}
	return nil
}

func (m *LoadBalanceRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

type DmChannelWatchInfo struct {
	CollectionID         int64    `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	DmChannel            string   `protobuf:"bytes,2,opt,name=dmChannel,proto3" json:"dmChannel,omitempty"`
	NodeIDLoaded         int64    `protobuf:"varint,3,opt,name=nodeID_loaded,json=nodeIDLoaded,proto3" json:"nodeID_loaded,omitempty"`
	ReplicaID            int64    `protobuf:"varint,4,opt,name=replicaID,proto3" json:"replicaID,omitempty"`
	NodeIds              []int64  `protobuf:"varint,5,rep,packed,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmChannelWatchInfo) Reset()         { *m = DmChannelWatchInfo{} }
func (m *DmChannelWatchInfo) String() string { return proto.CompactTextString(m) }
func (*DmChannelWatchInfo) ProtoMessage()    {}
func (*DmChannelWatchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{33}
}

func (m *DmChannelWatchInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmChannelWatchInfo.Unmarshal(m, b)
}
func (m *DmChannelWatchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmChannelWatchInfo.Marshal(b, m, deterministic)
}
func (m *DmChannelWatchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmChannelWatchInfo.Merge(m, src)
}
func (m *DmChannelWatchInfo) XXX_Size() int {
	return xxx_messageInfo_DmChannelWatchInfo.Size(m)
}
func (m *DmChannelWatchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DmChannelWatchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DmChannelWatchInfo proto.InternalMessageInfo

func (m *DmChannelWatchInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *DmChannelWatchInfo) GetDmChannel() string {
	if m != nil {
		return m.DmChannel
	}
	return ""
}

func (m *DmChannelWatchInfo) GetNodeIDLoaded() int64 {
	if m != nil {
		return m.NodeIDLoaded
	}
	return 0
}

func (m *DmChannelWatchInfo) GetReplicaID() int64 {
	if m != nil {
		return m.ReplicaID
	}
	return 0
}

func (m *DmChannelWatchInfo) GetNodeIds() []int64 {
	if m != nil {
		return m.NodeIds
	}
	return nil
}

type QueryChannelInfo struct {
	CollectionID         int64              `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	QueryChannel         string             `protobuf:"bytes,2,opt,name=query_channel,json=queryChannel,proto3" json:"query_channel,omitempty"`
	QueryResultChannel   string             `protobuf:"bytes,3,opt,name=query_result_channel,json=queryResultChannel,proto3" json:"query_result_channel,omitempty"`
	GlobalSealedSegments []*SegmentInfo     `protobuf:"bytes,4,rep,name=global_sealed_segments,json=globalSealedSegments,proto3" json:"global_sealed_segments,omitempty"`
	SeekPosition         *msgpb.MsgPosition `protobuf:"bytes,5,opt,name=seek_position,json=seekPosition,proto3" json:"seek_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryChannelInfo) Reset()         { *m = QueryChannelInfo{} }
func (m *QueryChannelInfo) String() string { return proto.CompactTextString(m) }
func (*QueryChannelInfo) ProtoMessage()    {}
func (*QueryChannelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{34}
}

func (m *QueryChannelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryChannelInfo.Unmarshal(m, b)
}
func (m *QueryChannelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryChannelInfo.Marshal(b, m, deterministic)
}
func (m *QueryChannelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryChannelInfo.Merge(m, src)
}
func (m *QueryChannelInfo) XXX_Size() int {
	return xxx_messageInfo_QueryChannelInfo.Size(m)
}
func (m *QueryChannelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryChannelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_QueryChannelInfo proto.InternalMessageInfo

func (m *QueryChannelInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *QueryChannelInfo) GetQueryChannel() string {
	if m != nil {
		return m.QueryChannel
	}
	return ""
}

func (m *QueryChannelInfo) GetQueryResultChannel() string {
	if m != nil {
		return m.QueryResultChannel
	}
	return ""
}

func (m *QueryChannelInfo) GetGlobalSealedSegments() []*SegmentInfo {
	if m != nil {
		return m.GlobalSealedSegments
	}
	return nil
}

func (m *QueryChannelInfo) GetSeekPosition() *msgpb.MsgPosition {
	if m != nil {
		return m.SeekPosition
	}
	return nil
}

type PartitionStates struct {
	PartitionID          int64          `protobuf:"varint,1,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	State                PartitionState `protobuf:"varint,2,opt,name=state,proto3,enum=milvus.protov2.query.PartitionState" json:"state,omitempty"`
	InMemoryPercentage   int64          `protobuf:"varint,3,opt,name=inMemory_percentage,json=inMemoryPercentage,proto3" json:"inMemory_percentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PartitionStates) Reset()         { *m = PartitionStates{} }
func (m *PartitionStates) String() string { return proto.CompactTextString(m) }
func (*PartitionStates) ProtoMessage()    {}
func (*PartitionStates) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{35}
}

func (m *PartitionStates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionStates.Unmarshal(m, b)
}
func (m *PartitionStates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionStates.Marshal(b, m, deterministic)
}
func (m *PartitionStates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionStates.Merge(m, src)
}
func (m *PartitionStates) XXX_Size() int {
	return xxx_messageInfo_PartitionStates.Size(m)
}
func (m *PartitionStates) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionStates.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionStates proto.InternalMessageInfo

func (m *PartitionStates) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *PartitionStates) GetState() PartitionState {
	if m != nil {
		return m.State
	}
	return PartitionState_NotExist
}

func (m *PartitionStates) GetInMemoryPercentage() int64 {
	if m != nil {
		return m.InMemoryPercentage
	}
	return 0
}

type SegmentInfo struct {
	SegmentID    int64 `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	CollectionID int64 `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID  int64 `protobuf:"varint,3,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	// deprecated, check node_ids(NodeIds) field
	NodeID               int64                 `protobuf:"varint,4,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	MemSize              int64                 `protobuf:"varint,5,opt,name=mem_size,json=memSize,proto3" json:"mem_size,omitempty"`
	NumRows              int64                 `protobuf:"varint,6,opt,name=num_rows,json=numRows,proto3" json:"num_rows,omitempty"`
	IndexName            string                `protobuf:"bytes,7,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	IndexID              int64                 `protobuf:"varint,8,opt,name=indexID,proto3" json:"indexID,omitempty"`
	DmChannel            string                `protobuf:"bytes,9,opt,name=dmChannel,proto3" json:"dmChannel,omitempty"`
	CompactionFrom       []int64               `protobuf:"varint,10,rep,packed,name=compactionFrom,proto3" json:"compactionFrom,omitempty"`
	CreatedByCompaction  bool                  `protobuf:"varint,11,opt,name=createdByCompaction,proto3" json:"createdByCompaction,omitempty"`
	SegmentState         commonpb.SegmentState `protobuf:"varint,12,opt,name=segment_state,json=segmentState,proto3,enum=milvus.protov2.common.SegmentState" json:"segment_state,omitempty"`
	IndexInfos           []*FieldIndexInfo     `protobuf:"bytes,13,rep,name=index_infos,json=indexInfos,proto3" json:"index_infos,omitempty"`
	ReplicaIds           []int64               `protobuf:"varint,14,rep,packed,name=replica_ids,json=replicaIds,proto3" json:"replica_ids,omitempty"`
	NodeIds              []int64               `protobuf:"varint,15,rep,packed,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	EnableIndex          bool                  `protobuf:"varint,16,opt,name=enable_index,json=enableIndex,proto3" json:"enable_index,omitempty"`
	IsFake               bool                  `protobuf:"varint,17,opt,name=is_fake,json=isFake,proto3" json:"is_fake,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SegmentInfo) Reset()         { *m = SegmentInfo{} }
func (m *SegmentInfo) String() string { return proto.CompactTextString(m) }
func (*SegmentInfo) ProtoMessage()    {}
func (*SegmentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{36}
}

func (m *SegmentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentInfo.Unmarshal(m, b)
}
func (m *SegmentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentInfo.Marshal(b, m, deterministic)
}
func (m *SegmentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentInfo.Merge(m, src)
}
func (m *SegmentInfo) XXX_Size() int {
	return xxx_messageInfo_SegmentInfo.Size(m)
}
func (m *SegmentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentInfo proto.InternalMessageInfo

func (m *SegmentInfo) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SegmentInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SegmentInfo) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *SegmentInfo) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *SegmentInfo) GetMemSize() int64 {
	if m != nil {
		return m.MemSize
	}
	return 0
}

func (m *SegmentInfo) GetNumRows() int64 {
	if m != nil {
		return m.NumRows
	}
	return 0
}

func (m *SegmentInfo) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *SegmentInfo) GetIndexID() int64 {
	if m != nil {
		return m.IndexID
	}
	return 0
}

func (m *SegmentInfo) GetDmChannel() string {
	if m != nil {
		return m.DmChannel
	}
	return ""
}

func (m *SegmentInfo) GetCompactionFrom() []int64 {
	if m != nil {
		return m.CompactionFrom
	}
	return nil
}

func (m *SegmentInfo) GetCreatedByCompaction() bool {
	if m != nil {
		return m.CreatedByCompaction
	}
	return false
}

func (m *SegmentInfo) GetSegmentState() commonpb.SegmentState {
	if m != nil {
		return m.SegmentState
	}
	return commonpb.SegmentState_SegmentStateNone
}

func (m *SegmentInfo) GetIndexInfos() []*FieldIndexInfo {
	if m != nil {
		return m.IndexInfos
	}
	return nil
}

func (m *SegmentInfo) GetReplicaIds() []int64 {
	if m != nil {
		return m.ReplicaIds
	}
	return nil
}

func (m *SegmentInfo) GetNodeIds() []int64 {
	if m != nil {
		return m.NodeIds
	}
	return nil
}

func (m *SegmentInfo) GetEnableIndex() bool {
	if m != nil {
		return m.EnableIndex
	}
	return false
}

func (m *SegmentInfo) GetIsFake() bool {
	if m != nil {
		return m.IsFake
	}
	return false
}

type CollectionInfo struct {
	CollectionID         int64                      `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64                    `protobuf:"varint,2,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	PartitionStates      []*PartitionStates         `protobuf:"bytes,3,rep,name=partition_states,json=partitionStates,proto3" json:"partition_states,omitempty"`
	LoadType             LoadType                   `protobuf:"varint,4,opt,name=load_type,json=loadType,proto3,enum=milvus.protov2.query.LoadType" json:"load_type,omitempty"`
	Schema               *schemapb.CollectionSchema `protobuf:"bytes,5,opt,name=schema,proto3" json:"schema,omitempty"`
	ReleasedPartitionIDs []int64                    `protobuf:"varint,6,rep,packed,name=released_partitionIDs,json=releasedPartitionIDs,proto3" json:"released_partitionIDs,omitempty"`
	InMemoryPercentage   int64                      `protobuf:"varint,7,opt,name=inMemory_percentage,json=inMemoryPercentage,proto3" json:"inMemory_percentage,omitempty"`
	ReplicaIds           []int64                    `protobuf:"varint,8,rep,packed,name=replica_ids,json=replicaIds,proto3" json:"replica_ids,omitempty"`
	ReplicaNumber        int32                      `protobuf:"varint,9,opt,name=replica_number,json=replicaNumber,proto3" json:"replica_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CollectionInfo) Reset()         { *m = CollectionInfo{} }
func (m *CollectionInfo) String() string { return proto.CompactTextString(m) }
func (*CollectionInfo) ProtoMessage()    {}
func (*CollectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{37}
}

func (m *CollectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionInfo.Unmarshal(m, b)
}
func (m *CollectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionInfo.Marshal(b, m, deterministic)
}
func (m *CollectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionInfo.Merge(m, src)
}
func (m *CollectionInfo) XXX_Size() int {
	return xxx_messageInfo_CollectionInfo.Size(m)
}
func (m *CollectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionInfo proto.InternalMessageInfo

func (m *CollectionInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *CollectionInfo) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func (m *CollectionInfo) GetPartitionStates() []*PartitionStates {
	if m != nil {
		return m.PartitionStates
	}
	return nil
}

func (m *CollectionInfo) GetLoadType() LoadType {
	if m != nil {
		return m.LoadType
	}
	return LoadType_UnKnownType
}

func (m *CollectionInfo) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *CollectionInfo) GetReleasedPartitionIDs() []int64 {
	if m != nil {
		return m.ReleasedPartitionIDs
	}
	return nil
}

func (m *CollectionInfo) GetInMemoryPercentage() int64 {
	if m != nil {
		return m.InMemoryPercentage
	}
	return 0
}

func (m *CollectionInfo) GetReplicaIds() []int64 {
	if m != nil {
		return m.ReplicaIds
	}
	return nil
}

func (m *CollectionInfo) GetReplicaNumber() int32 {
	if m != nil {
		return m.ReplicaNumber
	}
	return 0
}

type UnsubscribeChannels struct {
	CollectionID         int64    `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	Channels             []string `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsubscribeChannels) Reset()         { *m = UnsubscribeChannels{} }
func (m *UnsubscribeChannels) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeChannels) ProtoMessage()    {}
func (*UnsubscribeChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{38}
}

func (m *UnsubscribeChannels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeChannels.Unmarshal(m, b)
}
func (m *UnsubscribeChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeChannels.Marshal(b, m, deterministic)
}
func (m *UnsubscribeChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeChannels.Merge(m, src)
}
func (m *UnsubscribeChannels) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeChannels.Size(m)
}
func (m *UnsubscribeChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeChannels.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeChannels proto.InternalMessageInfo

func (m *UnsubscribeChannels) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *UnsubscribeChannels) GetChannels() []string {
	if m != nil {
		return m.Channels
	}
	return nil
}

type UnsubscribeChannelInfo struct {
	NodeID               int64                  `protobuf:"varint,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	CollectionChannels   []*UnsubscribeChannels `protobuf:"bytes,2,rep,name=collection_channels,json=collectionChannels,proto3" json:"collection_channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UnsubscribeChannelInfo) Reset()         { *m = UnsubscribeChannelInfo{} }
func (m *UnsubscribeChannelInfo) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeChannelInfo) ProtoMessage()    {}
func (*UnsubscribeChannelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{39}
}

func (m *UnsubscribeChannelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeChannelInfo.Unmarshal(m, b)
}
func (m *UnsubscribeChannelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeChannelInfo.Marshal(b, m, deterministic)
}
func (m *UnsubscribeChannelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeChannelInfo.Merge(m, src)
}
func (m *UnsubscribeChannelInfo) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeChannelInfo.Size(m)
}
func (m *UnsubscribeChannelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeChannelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeChannelInfo proto.InternalMessageInfo

func (m *UnsubscribeChannelInfo) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *UnsubscribeChannelInfo) GetCollectionChannels() []*UnsubscribeChannels {
	if m != nil {
		return m.CollectionChannels
	}
	return nil
}

type SegmentChangeInfo struct {
	OnlineNodeID         int64          `protobuf:"varint,1,opt,name=online_nodeID,json=onlineNodeID,proto3" json:"online_nodeID,omitempty"`
	OnlineSegments       []*SegmentInfo `protobuf:"bytes,2,rep,name=online_segments,json=onlineSegments,proto3" json:"online_segments,omitempty"`
	OfflineNodeID        int64          `protobuf:"varint,3,opt,name=offline_nodeID,json=offlineNodeID,proto3" json:"offline_nodeID,omitempty"`
	OfflineSegments      []*SegmentInfo `protobuf:"bytes,4,rep,name=offline_segments,json=offlineSegments,proto3" json:"offline_segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SegmentChangeInfo) Reset()         { *m = SegmentChangeInfo{} }
func (m *SegmentChangeInfo) String() string { return proto.CompactTextString(m) }
func (*SegmentChangeInfo) ProtoMessage()    {}
func (*SegmentChangeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{40}
}

func (m *SegmentChangeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentChangeInfo.Unmarshal(m, b)
}
func (m *SegmentChangeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentChangeInfo.Marshal(b, m, deterministic)
}
func (m *SegmentChangeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentChangeInfo.Merge(m, src)
}
func (m *SegmentChangeInfo) XXX_Size() int {
	return xxx_messageInfo_SegmentChangeInfo.Size(m)
}
func (m *SegmentChangeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentChangeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentChangeInfo proto.InternalMessageInfo

func (m *SegmentChangeInfo) GetOnlineNodeID() int64 {
	if m != nil {
		return m.OnlineNodeID
	}
	return 0
}

func (m *SegmentChangeInfo) GetOnlineSegments() []*SegmentInfo {
	if m != nil {
		return m.OnlineSegments
	}
	return nil
}

func (m *SegmentChangeInfo) GetOfflineNodeID() int64 {
	if m != nil {
		return m.OfflineNodeID
	}
	return 0
}

func (m *SegmentChangeInfo) GetOfflineSegments() []*SegmentInfo {
	if m != nil {
		return m.OfflineSegments
	}
	return nil
}

type SealedSegmentsChangeInfo struct {
	Base                 *commonpb.MsgBase    `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Infos                []*SegmentChangeInfo `protobuf:"bytes,2,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SealedSegmentsChangeInfo) Reset()         { *m = SealedSegmentsChangeInfo{} }
func (m *SealedSegmentsChangeInfo) String() string { return proto.CompactTextString(m) }
func (*SealedSegmentsChangeInfo) ProtoMessage()    {}
func (*SealedSegmentsChangeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{41}
}

func (m *SealedSegmentsChangeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SealedSegmentsChangeInfo.Unmarshal(m, b)
}
func (m *SealedSegmentsChangeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SealedSegmentsChangeInfo.Marshal(b, m, deterministic)
}
func (m *SealedSegmentsChangeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SealedSegmentsChangeInfo.Merge(m, src)
}
func (m *SealedSegmentsChangeInfo) XXX_Size() int {
	return xxx_messageInfo_SealedSegmentsChangeInfo.Size(m)
}
func (m *SealedSegmentsChangeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SealedSegmentsChangeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SealedSegmentsChangeInfo proto.InternalMessageInfo

func (m *SealedSegmentsChangeInfo) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SealedSegmentsChangeInfo) GetInfos() []*SegmentChangeInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

type GetDataDistributionRequest struct {
	Base                 *commonpb.MsgBase             `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Checkpoints          map[string]*msgpb.MsgPosition `protobuf:"bytes,2,rep,name=checkpoints,proto3" json:"checkpoints,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GetDataDistributionRequest) Reset()         { *m = GetDataDistributionRequest{} }
func (m *GetDataDistributionRequest) String() string { return proto.CompactTextString(m) }
func (*GetDataDistributionRequest) ProtoMessage()    {}
func (*GetDataDistributionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{42}
}

func (m *GetDataDistributionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDataDistributionRequest.Unmarshal(m, b)
}
func (m *GetDataDistributionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDataDistributionRequest.Marshal(b, m, deterministic)
}
func (m *GetDataDistributionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDataDistributionRequest.Merge(m, src)
}
func (m *GetDataDistributionRequest) XXX_Size() int {
	return xxx_messageInfo_GetDataDistributionRequest.Size(m)
}
func (m *GetDataDistributionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDataDistributionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDataDistributionRequest proto.InternalMessageInfo

func (m *GetDataDistributionRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetDataDistributionRequest) GetCheckpoints() map[string]*msgpb.MsgPosition {
	if m != nil {
		return m.Checkpoints
	}
	return nil
}

type GetDataDistributionResponse struct {
	Status               *commonpb.Status      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NodeID               int64                 `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Segments             []*SegmentVersionInfo `protobuf:"bytes,3,rep,name=segments,proto3" json:"segments,omitempty"`
	Channels             []*ChannelVersionInfo `protobuf:"bytes,4,rep,name=channels,proto3" json:"channels,omitempty"`
	LeaderViews          []*LeaderView         `protobuf:"bytes,5,rep,name=leader_views,json=leaderViews,proto3" json:"leader_views,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetDataDistributionResponse) Reset()         { *m = GetDataDistributionResponse{} }
func (m *GetDataDistributionResponse) String() string { return proto.CompactTextString(m) }
func (*GetDataDistributionResponse) ProtoMessage()    {}
func (*GetDataDistributionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{43}
}

func (m *GetDataDistributionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDataDistributionResponse.Unmarshal(m, b)
}
func (m *GetDataDistributionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDataDistributionResponse.Marshal(b, m, deterministic)
}
func (m *GetDataDistributionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDataDistributionResponse.Merge(m, src)
}
func (m *GetDataDistributionResponse) XXX_Size() int {
	return xxx_messageInfo_GetDataDistributionResponse.Size(m)
}
func (m *GetDataDistributionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDataDistributionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDataDistributionResponse proto.InternalMessageInfo

func (m *GetDataDistributionResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetDataDistributionResponse) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *GetDataDistributionResponse) GetSegments() []*SegmentVersionInfo {
	if m != nil {
		return m.Segments
	}
	return nil
}

func (m *GetDataDistributionResponse) GetChannels() []*ChannelVersionInfo {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *GetDataDistributionResponse) GetLeaderViews() []*LeaderView {
	if m != nil {
		return m.LeaderViews
	}
	return nil
}

type LeaderView struct {
	Collection           int64                        `protobuf:"varint,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Channel              string                       `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	SegmentDist          map[int64]*SegmentDist       `protobuf:"bytes,3,rep,name=segment_dist,json=segmentDist,proto3" json:"segment_dist,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	GrowingSegmentIDs    []int64                      `protobuf:"varint,4,rep,packed,name=growing_segmentIDs,json=growingSegmentIDs,proto3" json:"growing_segmentIDs,omitempty"`
	GrowingSegments      map[int64]*msgpb.MsgPosition `protobuf:"bytes,5,rep,name=growing_segments,json=growingSegments,proto3" json:"growing_segments,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TargetVersion        int64                        `protobuf:"varint,6,opt,name=TargetVersion,proto3" json:"TargetVersion,omitempty"`
	NumOfGrowingRows     int64                        `protobuf:"varint,7,opt,name=num_of_growing_rows,json=numOfGrowingRows,proto3" json:"num_of_growing_rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *LeaderView) Reset()         { *m = LeaderView{} }
func (m *LeaderView) String() string { return proto.CompactTextString(m) }
func (*LeaderView) ProtoMessage()    {}
func (*LeaderView) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{44}
}

func (m *LeaderView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaderView.Unmarshal(m, b)
}
func (m *LeaderView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaderView.Marshal(b, m, deterministic)
}
func (m *LeaderView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaderView.Merge(m, src)
}
func (m *LeaderView) XXX_Size() int {
	return xxx_messageInfo_LeaderView.Size(m)
}
func (m *LeaderView) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaderView.DiscardUnknown(m)
}

var xxx_messageInfo_LeaderView proto.InternalMessageInfo

func (m *LeaderView) GetCollection() int64 {
	if m != nil {
		return m.Collection
	}
	return 0
}

func (m *LeaderView) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *LeaderView) GetSegmentDist() map[int64]*SegmentDist {
	if m != nil {
		return m.SegmentDist
	}
	return nil
}

func (m *LeaderView) GetGrowingSegmentIDs() []int64 {
	if m != nil {
		return m.GrowingSegmentIDs
	}
	return nil
}

func (m *LeaderView) GetGrowingSegments() map[int64]*msgpb.MsgPosition {
	if m != nil {
		return m.GrowingSegments
	}
	return nil
}

func (m *LeaderView) GetTargetVersion() int64 {
	if m != nil {
		return m.TargetVersion
	}
	return 0
}

func (m *LeaderView) GetNumOfGrowingRows() int64 {
	if m != nil {
		return m.NumOfGrowingRows
	}
	return 0
}

type SegmentDist struct {
	NodeID               int64    `protobuf:"varint,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Version              int64    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentDist) Reset()         { *m = SegmentDist{} }
func (m *SegmentDist) String() string { return proto.CompactTextString(m) }
func (*SegmentDist) ProtoMessage()    {}
func (*SegmentDist) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{45}
}

func (m *SegmentDist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentDist.Unmarshal(m, b)
}
func (m *SegmentDist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentDist.Marshal(b, m, deterministic)
}
func (m *SegmentDist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentDist.Merge(m, src)
}
func (m *SegmentDist) XXX_Size() int {
	return xxx_messageInfo_SegmentDist.Size(m)
}
func (m *SegmentDist) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentDist.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentDist proto.InternalMessageInfo

func (m *SegmentDist) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *SegmentDist) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type SegmentVersionInfo struct {
	ID                   int64                     `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Collection           int64                     `protobuf:"varint,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Partition            int64                     `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Channel              string                    `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	Version              int64                     `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	LastDeltaTimestamp   uint64                    `protobuf:"varint,6,opt,name=last_delta_timestamp,json=lastDeltaTimestamp,proto3" json:"last_delta_timestamp,omitempty"`
	IndexInfo            map[int64]*FieldIndexInfo `protobuf:"bytes,7,rep,name=index_info,json=indexInfo,proto3" json:"index_info,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SegmentVersionInfo) Reset()         { *m = SegmentVersionInfo{} }
func (m *SegmentVersionInfo) String() string { return proto.CompactTextString(m) }
func (*SegmentVersionInfo) ProtoMessage()    {}
func (*SegmentVersionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{46}
}

func (m *SegmentVersionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentVersionInfo.Unmarshal(m, b)
}
func (m *SegmentVersionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentVersionInfo.Marshal(b, m, deterministic)
}
func (m *SegmentVersionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentVersionInfo.Merge(m, src)
}
func (m *SegmentVersionInfo) XXX_Size() int {
	return xxx_messageInfo_SegmentVersionInfo.Size(m)
}
func (m *SegmentVersionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentVersionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentVersionInfo proto.InternalMessageInfo

func (m *SegmentVersionInfo) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SegmentVersionInfo) GetCollection() int64 {
	if m != nil {
		return m.Collection
	}
	return 0
}

func (m *SegmentVersionInfo) GetPartition() int64 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *SegmentVersionInfo) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *SegmentVersionInfo) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *SegmentVersionInfo) GetLastDeltaTimestamp() uint64 {
	if m != nil {
		return m.LastDeltaTimestamp
	}
	return 0
}

func (m *SegmentVersionInfo) GetIndexInfo() map[int64]*FieldIndexInfo {
	if m != nil {
		return m.IndexInfo
	}
	return nil
}

type ChannelVersionInfo struct {
	Channel              string   `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Collection           int64    `protobuf:"varint,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Version              int64    `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelVersionInfo) Reset()         { *m = ChannelVersionInfo{} }
func (m *ChannelVersionInfo) String() string { return proto.CompactTextString(m) }
func (*ChannelVersionInfo) ProtoMessage()    {}
func (*ChannelVersionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{47}
}

func (m *ChannelVersionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelVersionInfo.Unmarshal(m, b)
}
func (m *ChannelVersionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelVersionInfo.Marshal(b, m, deterministic)
}
func (m *ChannelVersionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelVersionInfo.Merge(m, src)
}
func (m *ChannelVersionInfo) XXX_Size() int {
	return xxx_messageInfo_ChannelVersionInfo.Size(m)
}
func (m *ChannelVersionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelVersionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelVersionInfo proto.InternalMessageInfo

func (m *ChannelVersionInfo) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *ChannelVersionInfo) GetCollection() int64 {
	if m != nil {
		return m.Collection
	}
	return 0
}

func (m *ChannelVersionInfo) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type CollectionLoadInfo struct {
	CollectionID         int64           `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	ReleasedPartitions   []int64         `protobuf:"varint,2,rep,packed,name=released_partitions,json=releasedPartitions,proto3" json:"released_partitions,omitempty"`
	ReplicaNumber        int32           `protobuf:"varint,3,opt,name=replica_number,json=replicaNumber,proto3" json:"replica_number,omitempty"`
	Status               LoadStatus      `protobuf:"varint,4,opt,name=status,proto3,enum=milvus.protov2.query.LoadStatus" json:"status,omitempty"`
	FieldIndexID         map[int64]int64 `protobuf:"bytes,5,rep,name=field_indexID,json=fieldIndexID,proto3" json:"field_indexID,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	LoadType             LoadType        `protobuf:"varint,6,opt,name=load_type,json=loadType,proto3,enum=milvus.protov2.query.LoadType" json:"load_type,omitempty"`
	RecoverTimes         int32           `protobuf:"varint,7,opt,name=recover_times,json=recoverTimes,proto3" json:"recover_times,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CollectionLoadInfo) Reset()         { *m = CollectionLoadInfo{} }
func (m *CollectionLoadInfo) String() string { return proto.CompactTextString(m) }
func (*CollectionLoadInfo) ProtoMessage()    {}
func (*CollectionLoadInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{48}
}

func (m *CollectionLoadInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionLoadInfo.Unmarshal(m, b)
}
func (m *CollectionLoadInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionLoadInfo.Marshal(b, m, deterministic)
}
func (m *CollectionLoadInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionLoadInfo.Merge(m, src)
}
func (m *CollectionLoadInfo) XXX_Size() int {
	return xxx_messageInfo_CollectionLoadInfo.Size(m)
}
func (m *CollectionLoadInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionLoadInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionLoadInfo proto.InternalMessageInfo

func (m *CollectionLoadInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *CollectionLoadInfo) GetReleasedPartitions() []int64 {
	if m != nil {
		return m.ReleasedPartitions
	}
	return nil
}

func (m *CollectionLoadInfo) GetReplicaNumber() int32 {
	if m != nil {
		return m.ReplicaNumber
	}
	return 0
}

func (m *CollectionLoadInfo) GetStatus() LoadStatus {
	if m != nil {
		return m.Status
	}
	return LoadStatus_Invalid
}

func (m *CollectionLoadInfo) GetFieldIndexID() map[int64]int64 {
	if m != nil {
		return m.FieldIndexID
	}
	return nil
}

func (m *CollectionLoadInfo) GetLoadType() LoadType {
	if m != nil {
		return m.LoadType
	}
	return LoadType_UnKnownType
}

func (m *CollectionLoadInfo) GetRecoverTimes() int32 {
	if m != nil {
		return m.RecoverTimes
	}
	return 0
}

type PartitionLoadInfo struct {
	CollectionID         int64           `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID          int64           `protobuf:"varint,2,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	ReplicaNumber        int32           `protobuf:"varint,3,opt,name=replica_number,json=replicaNumber,proto3" json:"replica_number,omitempty"`
	Status               LoadStatus      `protobuf:"varint,4,opt,name=status,proto3,enum=milvus.protov2.query.LoadStatus" json:"status,omitempty"`
	FieldIndexID         map[int64]int64 `protobuf:"bytes,5,rep,name=field_indexID,json=fieldIndexID,proto3" json:"field_indexID,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	RecoverTimes         int32           `protobuf:"varint,7,opt,name=recover_times,json=recoverTimes,proto3" json:"recover_times,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PartitionLoadInfo) Reset()         { *m = PartitionLoadInfo{} }
func (m *PartitionLoadInfo) String() string { return proto.CompactTextString(m) }
func (*PartitionLoadInfo) ProtoMessage()    {}
func (*PartitionLoadInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{49}
}

func (m *PartitionLoadInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionLoadInfo.Unmarshal(m, b)
}
func (m *PartitionLoadInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionLoadInfo.Marshal(b, m, deterministic)
}
func (m *PartitionLoadInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionLoadInfo.Merge(m, src)
}
func (m *PartitionLoadInfo) XXX_Size() int {
	return xxx_messageInfo_PartitionLoadInfo.Size(m)
}
func (m *PartitionLoadInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionLoadInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionLoadInfo proto.InternalMessageInfo

func (m *PartitionLoadInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *PartitionLoadInfo) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *PartitionLoadInfo) GetReplicaNumber() int32 {
	if m != nil {
		return m.ReplicaNumber
	}
	return 0
}

func (m *PartitionLoadInfo) GetStatus() LoadStatus {
	if m != nil {
		return m.Status
	}
	return LoadStatus_Invalid
}

func (m *PartitionLoadInfo) GetFieldIndexID() map[int64]int64 {
	if m != nil {
		return m.FieldIndexID
	}
	return nil
}

func (m *PartitionLoadInfo) GetRecoverTimes() int32 {
	if m != nil {
		return m.RecoverTimes
	}
	return 0
}

type ChannelNodeInfo struct {
	RwNodes              []int64  `protobuf:"varint,6,rep,packed,name=rw_nodes,json=rwNodes,proto3" json:"rw_nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelNodeInfo) Reset()         { *m = ChannelNodeInfo{} }
func (m *ChannelNodeInfo) String() string { return proto.CompactTextString(m) }
func (*ChannelNodeInfo) ProtoMessage()    {}
func (*ChannelNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{50}
}

func (m *ChannelNodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelNodeInfo.Unmarshal(m, b)
}
func (m *ChannelNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelNodeInfo.Marshal(b, m, deterministic)
}
func (m *ChannelNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelNodeInfo.Merge(m, src)
}
func (m *ChannelNodeInfo) XXX_Size() int {
	return xxx_messageInfo_ChannelNodeInfo.Size(m)
}
func (m *ChannelNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelNodeInfo proto.InternalMessageInfo

func (m *ChannelNodeInfo) GetRwNodes() []int64 {
	if m != nil {
		return m.RwNodes
	}
	return nil
}

type Replica struct {
	ID            int64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CollectionID  int64   `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	Nodes         []int64 `protobuf:"varint,3,rep,packed,name=nodes,proto3" json:"nodes,omitempty"`
	ResourceGroup string  `protobuf:"bytes,4,opt,name=resource_group,json=resourceGroup,proto3" json:"resource_group,omitempty"`
	RoNodes       []int64 `protobuf:"varint,5,rep,packed,name=ro_nodes,json=roNodes,proto3" json:"ro_nodes,omitempty"`
	// can not load new channel or segment on it anymore.
	ChannelNodeInfos     map[string]*ChannelNodeInfo `protobuf:"bytes,6,rep,name=channel_node_infos,json=channelNodeInfos,proto3" json:"channel_node_infos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Replica) Reset()         { *m = Replica{} }
func (m *Replica) String() string { return proto.CompactTextString(m) }
func (*Replica) ProtoMessage()    {}
func (*Replica) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{51}
}

func (m *Replica) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Replica.Unmarshal(m, b)
}
func (m *Replica) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Replica.Marshal(b, m, deterministic)
}
func (m *Replica) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Replica.Merge(m, src)
}
func (m *Replica) XXX_Size() int {
	return xxx_messageInfo_Replica.Size(m)
}
func (m *Replica) XXX_DiscardUnknown() {
	xxx_messageInfo_Replica.DiscardUnknown(m)
}

var xxx_messageInfo_Replica proto.InternalMessageInfo

func (m *Replica) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Replica) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *Replica) GetNodes() []int64 {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Replica) GetResourceGroup() string {
	if m != nil {
		return m.ResourceGroup
	}
	return ""
}

func (m *Replica) GetRoNodes() []int64 {
	if m != nil {
		return m.RoNodes
	}
	return nil
}

func (m *Replica) GetChannelNodeInfos() map[string]*ChannelNodeInfo {
	if m != nil {
		return m.ChannelNodeInfos
	}
	return nil
}

type SyncAction struct {
	Type                 SyncType           `protobuf:"varint,1,opt,name=type,proto3,enum=milvus.protov2.query.SyncType" json:"type,omitempty"`
	PartitionID          int64              `protobuf:"varint,2,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	SegmentID            int64              `protobuf:"varint,3,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	NodeID               int64              `protobuf:"varint,4,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Version              int64              `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	Info                 *SegmentLoadInfo   `protobuf:"bytes,6,opt,name=info,proto3" json:"info,omitempty"`
	GrowingInTarget      []int64            `protobuf:"varint,7,rep,packed,name=growingInTarget,proto3" json:"growingInTarget,omitempty"`
	SealedInTarget       []int64            `protobuf:"varint,8,rep,packed,name=sealedInTarget,proto3" json:"sealedInTarget,omitempty"`
	TargetVersion        int64              `protobuf:"varint,9,opt,name=TargetVersion,proto3" json:"TargetVersion,omitempty"`
	DroppedInTarget      []int64            `protobuf:"varint,10,rep,packed,name=droppedInTarget,proto3" json:"droppedInTarget,omitempty"`
	Checkpoint           *msgpb.MsgPosition `protobuf:"bytes,11,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SyncAction) Reset()         { *m = SyncAction{} }
func (m *SyncAction) String() string { return proto.CompactTextString(m) }
func (*SyncAction) ProtoMessage()    {}
func (*SyncAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{52}
}

func (m *SyncAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncAction.Unmarshal(m, b)
}
func (m *SyncAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncAction.Marshal(b, m, deterministic)
}
func (m *SyncAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncAction.Merge(m, src)
}
func (m *SyncAction) XXX_Size() int {
	return xxx_messageInfo_SyncAction.Size(m)
}
func (m *SyncAction) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncAction.DiscardUnknown(m)
}

var xxx_messageInfo_SyncAction proto.InternalMessageInfo

func (m *SyncAction) GetType() SyncType {
	if m != nil {
		return m.Type
	}
	return SyncType_Remove
}

func (m *SyncAction) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *SyncAction) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SyncAction) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *SyncAction) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *SyncAction) GetInfo() *SegmentLoadInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *SyncAction) GetGrowingInTarget() []int64 {
	if m != nil {
		return m.GrowingInTarget
	}
	return nil
}

func (m *SyncAction) GetSealedInTarget() []int64 {
	if m != nil {
		return m.SealedInTarget
	}
	return nil
}

func (m *SyncAction) GetTargetVersion() int64 {
	if m != nil {
		return m.TargetVersion
	}
	return 0
}

func (m *SyncAction) GetDroppedInTarget() []int64 {
	if m != nil {
		return m.DroppedInTarget
	}
	return nil
}

func (m *SyncAction) GetCheckpoint() *msgpb.MsgPosition {
	if m != nil {
		return m.Checkpoint
	}
	return nil
}

type SyncDistributionRequest struct {
	Base                 *commonpb.MsgBase          `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CollectionID         int64                      `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	Channel              string                     `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Actions              []*SyncAction              `protobuf:"bytes,4,rep,name=actions,proto3" json:"actions,omitempty"`
	Schema               *schemapb.CollectionSchema `protobuf:"bytes,5,opt,name=schema,proto3" json:"schema,omitempty"`
	LoadMeta             *LoadMetaInfo              `protobuf:"bytes,6,opt,name=load_meta,json=loadMeta,proto3" json:"load_meta,omitempty"`
	ReplicaID            int64                      `protobuf:"varint,7,opt,name=replicaID,proto3" json:"replicaID,omitempty"`
	Version              int64                      `protobuf:"varint,8,opt,name=version,proto3" json:"version,omitempty"`
	IndexInfoList        []*indexpb.IndexInfo       `protobuf:"bytes,9,rep,name=index_info_list,json=indexInfoList,proto3" json:"index_info_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SyncDistributionRequest) Reset()         { *m = SyncDistributionRequest{} }
func (m *SyncDistributionRequest) String() string { return proto.CompactTextString(m) }
func (*SyncDistributionRequest) ProtoMessage()    {}
func (*SyncDistributionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{53}
}

func (m *SyncDistributionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncDistributionRequest.Unmarshal(m, b)
}
func (m *SyncDistributionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncDistributionRequest.Marshal(b, m, deterministic)
}
func (m *SyncDistributionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncDistributionRequest.Merge(m, src)
}
func (m *SyncDistributionRequest) XXX_Size() int {
	return xxx_messageInfo_SyncDistributionRequest.Size(m)
}
func (m *SyncDistributionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncDistributionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncDistributionRequest proto.InternalMessageInfo

func (m *SyncDistributionRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SyncDistributionRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SyncDistributionRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *SyncDistributionRequest) GetActions() []*SyncAction {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *SyncDistributionRequest) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *SyncDistributionRequest) GetLoadMeta() *LoadMetaInfo {
	if m != nil {
		return m.LoadMeta
	}
	return nil
}

func (m *SyncDistributionRequest) GetReplicaID() int64 {
	if m != nil {
		return m.ReplicaID
	}
	return 0
}

func (m *SyncDistributionRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *SyncDistributionRequest) GetIndexInfoList() []*indexpb.IndexInfo {
	if m != nil {
		return m.IndexInfoList
	}
	return nil
}

type ResourceGroup struct {
	Name                 string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Capacity             int32                     `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"` // Deprecated: Do not use.
	Nodes                []int64                   `protobuf:"varint,3,rep,packed,name=nodes,proto3" json:"nodes,omitempty"`
	Config               *rgpb.ResourceGroupConfig `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ResourceGroup) Reset()         { *m = ResourceGroup{} }
func (m *ResourceGroup) String() string { return proto.CompactTextString(m) }
func (*ResourceGroup) ProtoMessage()    {}
func (*ResourceGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{54}
}

func (m *ResourceGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceGroup.Unmarshal(m, b)
}
func (m *ResourceGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceGroup.Marshal(b, m, deterministic)
}
func (m *ResourceGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceGroup.Merge(m, src)
}
func (m *ResourceGroup) XXX_Size() int {
	return xxx_messageInfo_ResourceGroup.Size(m)
}
func (m *ResourceGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceGroup proto.InternalMessageInfo

func (m *ResourceGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Deprecated: Do not use.
func (m *ResourceGroup) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *ResourceGroup) GetNodes() []int64 {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *ResourceGroup) GetConfig() *rgpb.ResourceGroupConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

// transfer `replicaNum` replicas in `collectionID` from `source_resource_group` to `target_resource_groups`
type TransferReplicaRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SourceResourceGroup  string            `protobuf:"bytes,2,opt,name=source_resource_group,json=sourceResourceGroup,proto3" json:"source_resource_group,omitempty"`
	TargetResourceGroup  string            `protobuf:"bytes,3,opt,name=target_resource_group,json=targetResourceGroup,proto3" json:"target_resource_group,omitempty"`
	CollectionID         int64             `protobuf:"varint,4,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	NumReplica           int64             `protobuf:"varint,5,opt,name=num_replica,json=numReplica,proto3" json:"num_replica,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TransferReplicaRequest) Reset()         { *m = TransferReplicaRequest{} }
func (m *TransferReplicaRequest) String() string { return proto.CompactTextString(m) }
func (*TransferReplicaRequest) ProtoMessage()    {}
func (*TransferReplicaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{55}
}

func (m *TransferReplicaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferReplicaRequest.Unmarshal(m, b)
}
func (m *TransferReplicaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferReplicaRequest.Marshal(b, m, deterministic)
}
func (m *TransferReplicaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferReplicaRequest.Merge(m, src)
}
func (m *TransferReplicaRequest) XXX_Size() int {
	return xxx_messageInfo_TransferReplicaRequest.Size(m)
}
func (m *TransferReplicaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferReplicaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferReplicaRequest proto.InternalMessageInfo

func (m *TransferReplicaRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *TransferReplicaRequest) GetSourceResourceGroup() string {
	if m != nil {
		return m.SourceResourceGroup
	}
	return ""
}

func (m *TransferReplicaRequest) GetTargetResourceGroup() string {
	if m != nil {
		return m.TargetResourceGroup
	}
	return ""
}

func (m *TransferReplicaRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *TransferReplicaRequest) GetNumReplica() int64 {
	if m != nil {
		return m.NumReplica
	}
	return 0
}

type DescribeResourceGroupRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	ResourceGroup        string            `protobuf:"bytes,2,opt,name=resource_group,json=resourceGroup,proto3" json:"resource_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DescribeResourceGroupRequest) Reset()         { *m = DescribeResourceGroupRequest{} }
func (m *DescribeResourceGroupRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeResourceGroupRequest) ProtoMessage()    {}
func (*DescribeResourceGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{56}
}

func (m *DescribeResourceGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeResourceGroupRequest.Unmarshal(m, b)
}
func (m *DescribeResourceGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeResourceGroupRequest.Marshal(b, m, deterministic)
}
func (m *DescribeResourceGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeResourceGroupRequest.Merge(m, src)
}
func (m *DescribeResourceGroupRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeResourceGroupRequest.Size(m)
}
func (m *DescribeResourceGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeResourceGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeResourceGroupRequest proto.InternalMessageInfo

func (m *DescribeResourceGroupRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *DescribeResourceGroupRequest) GetResourceGroup() string {
	if m != nil {
		return m.ResourceGroup
	}
	return ""
}

type DescribeResourceGroupResponse struct {
	Status               *commonpb.Status   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ResourceGroup        *ResourceGroupInfo `protobuf:"bytes,2,opt,name=resource_group,json=resourceGroup,proto3" json:"resource_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DescribeResourceGroupResponse) Reset()         { *m = DescribeResourceGroupResponse{} }
func (m *DescribeResourceGroupResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeResourceGroupResponse) ProtoMessage()    {}
func (*DescribeResourceGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{57}
}

func (m *DescribeResourceGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeResourceGroupResponse.Unmarshal(m, b)
}
func (m *DescribeResourceGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeResourceGroupResponse.Marshal(b, m, deterministic)
}
func (m *DescribeResourceGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeResourceGroupResponse.Merge(m, src)
}
func (m *DescribeResourceGroupResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeResourceGroupResponse.Size(m)
}
func (m *DescribeResourceGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeResourceGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeResourceGroupResponse proto.InternalMessageInfo

func (m *DescribeResourceGroupResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeResourceGroupResponse) GetResourceGroup() *ResourceGroupInfo {
	if m != nil {
		return m.ResourceGroup
	}
	return nil
}

type ResourceGroupInfo struct {
	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Capacity         int32  `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"` // Deprecated: Do not use.
	NumAvailableNode int32  `protobuf:"varint,3,opt,name=num_available_node,json=numAvailableNode,proto3" json:"num_available_node,omitempty"`
	// collection id -> loaded replica num
	NumLoadedReplica map[int64]int32 `protobuf:"bytes,4,rep,name=num_loaded_replica,json=numLoadedReplica,proto3" json:"num_loaded_replica,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// collection id -> accessed other rg's node num
	NumOutgoingNode map[int64]int32 `protobuf:"bytes,5,rep,name=num_outgoing_node,json=numOutgoingNode,proto3" json:"num_outgoing_node,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// collection id -> be accessed node num by other rg
	NumIncomingNode map[int64]int32 `protobuf:"bytes,6,rep,name=num_incoming_node,json=numIncomingNode,proto3" json:"num_incoming_node,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// resource group configuration.
	Config               *rgpb.ResourceGroupConfig `protobuf:"bytes,7,opt,name=config,proto3" json:"config,omitempty"`
	Nodes                []*commonpb.NodeInfo      `protobuf:"bytes,8,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ResourceGroupInfo) Reset()         { *m = ResourceGroupInfo{} }
func (m *ResourceGroupInfo) String() string { return proto.CompactTextString(m) }
func (*ResourceGroupInfo) ProtoMessage()    {}
func (*ResourceGroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{58}
}

func (m *ResourceGroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceGroupInfo.Unmarshal(m, b)
}
func (m *ResourceGroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceGroupInfo.Marshal(b, m, deterministic)
}
func (m *ResourceGroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceGroupInfo.Merge(m, src)
}
func (m *ResourceGroupInfo) XXX_Size() int {
	return xxx_messageInfo_ResourceGroupInfo.Size(m)
}
func (m *ResourceGroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceGroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceGroupInfo proto.InternalMessageInfo

func (m *ResourceGroupInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Deprecated: Do not use.
func (m *ResourceGroupInfo) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *ResourceGroupInfo) GetNumAvailableNode() int32 {
	if m != nil {
		return m.NumAvailableNode
	}
	return 0
}

func (m *ResourceGroupInfo) GetNumLoadedReplica() map[int64]int32 {
	if m != nil {
		return m.NumLoadedReplica
	}
	return nil
}

func (m *ResourceGroupInfo) GetNumOutgoingNode() map[int64]int32 {
	if m != nil {
		return m.NumOutgoingNode
	}
	return nil
}

func (m *ResourceGroupInfo) GetNumIncomingNode() map[int64]int32 {
	if m != nil {
		return m.NumIncomingNode
	}
	return nil
}

func (m *ResourceGroupInfo) GetConfig() *rgpb.ResourceGroupConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ResourceGroupInfo) GetNodes() []*commonpb.NodeInfo {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type DeleteRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CollectionId         int64             `protobuf:"varint,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	PartitionId          int64             `protobuf:"varint,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	VchannelName         string            `protobuf:"bytes,4,opt,name=vchannel_name,json=vchannelName,proto3" json:"vchannel_name,omitempty"`
	SegmentId            int64             `protobuf:"varint,5,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	PrimaryKeys          *schemapb.IDs     `protobuf:"bytes,6,opt,name=primary_keys,json=primaryKeys,proto3" json:"primary_keys,omitempty"`
	Timestamps           []uint64          `protobuf:"varint,7,rep,packed,name=timestamps,proto3" json:"timestamps,omitempty"`
	Scope                DataScope         `protobuf:"varint,8,opt,name=scope,proto3,enum=milvus.protov2.query.DataScope" json:"scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{59}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *DeleteRequest) GetCollectionId() int64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *DeleteRequest) GetPartitionId() int64 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *DeleteRequest) GetVchannelName() string {
	if m != nil {
		return m.VchannelName
	}
	return ""
}

func (m *DeleteRequest) GetSegmentId() int64 {
	if m != nil {
		return m.SegmentId
	}
	return 0
}

func (m *DeleteRequest) GetPrimaryKeys() *schemapb.IDs {
	if m != nil {
		return m.PrimaryKeys
	}
	return nil
}

func (m *DeleteRequest) GetTimestamps() []uint64 {
	if m != nil {
		return m.Timestamps
	}
	return nil
}

func (m *DeleteRequest) GetScope() DataScope {
	if m != nil {
		return m.Scope
	}
	return DataScope_UnKnown
}

type ActivateCheckerRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CheckerID            int32             `protobuf:"varint,2,opt,name=checkerID,proto3" json:"checkerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ActivateCheckerRequest) Reset()         { *m = ActivateCheckerRequest{} }
func (m *ActivateCheckerRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateCheckerRequest) ProtoMessage()    {}
func (*ActivateCheckerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{60}
}

func (m *ActivateCheckerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateCheckerRequest.Unmarshal(m, b)
}
func (m *ActivateCheckerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateCheckerRequest.Marshal(b, m, deterministic)
}
func (m *ActivateCheckerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateCheckerRequest.Merge(m, src)
}
func (m *ActivateCheckerRequest) XXX_Size() int {
	return xxx_messageInfo_ActivateCheckerRequest.Size(m)
}
func (m *ActivateCheckerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateCheckerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateCheckerRequest proto.InternalMessageInfo

func (m *ActivateCheckerRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ActivateCheckerRequest) GetCheckerID() int32 {
	if m != nil {
		return m.CheckerID
	}
	return 0
}

type DeactivateCheckerRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CheckerID            int32             `protobuf:"varint,2,opt,name=checkerID,proto3" json:"checkerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeactivateCheckerRequest) Reset()         { *m = DeactivateCheckerRequest{} }
func (m *DeactivateCheckerRequest) String() string { return proto.CompactTextString(m) }
func (*DeactivateCheckerRequest) ProtoMessage()    {}
func (*DeactivateCheckerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{61}
}

func (m *DeactivateCheckerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeactivateCheckerRequest.Unmarshal(m, b)
}
func (m *DeactivateCheckerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeactivateCheckerRequest.Marshal(b, m, deterministic)
}
func (m *DeactivateCheckerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateCheckerRequest.Merge(m, src)
}
func (m *DeactivateCheckerRequest) XXX_Size() int {
	return xxx_messageInfo_DeactivateCheckerRequest.Size(m)
}
func (m *DeactivateCheckerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateCheckerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateCheckerRequest proto.InternalMessageInfo

func (m *DeactivateCheckerRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *DeactivateCheckerRequest) GetCheckerID() int32 {
	if m != nil {
		return m.CheckerID
	}
	return 0
}

type ListCheckersRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CheckerIDs           []int32           `protobuf:"varint,2,rep,packed,name=checkerIDs,proto3" json:"checkerIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListCheckersRequest) Reset()         { *m = ListCheckersRequest{} }
func (m *ListCheckersRequest) String() string { return proto.CompactTextString(m) }
func (*ListCheckersRequest) ProtoMessage()    {}
func (*ListCheckersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{62}
}

func (m *ListCheckersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCheckersRequest.Unmarshal(m, b)
}
func (m *ListCheckersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCheckersRequest.Marshal(b, m, deterministic)
}
func (m *ListCheckersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCheckersRequest.Merge(m, src)
}
func (m *ListCheckersRequest) XXX_Size() int {
	return xxx_messageInfo_ListCheckersRequest.Size(m)
}
func (m *ListCheckersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCheckersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCheckersRequest proto.InternalMessageInfo

func (m *ListCheckersRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ListCheckersRequest) GetCheckerIDs() []int32 {
	if m != nil {
		return m.CheckerIDs
	}
	return nil
}

type ListCheckersResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	CheckerInfos         []*CheckerInfo   `protobuf:"bytes,2,rep,name=checkerInfos,proto3" json:"checkerInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListCheckersResponse) Reset()         { *m = ListCheckersResponse{} }
func (m *ListCheckersResponse) String() string { return proto.CompactTextString(m) }
func (*ListCheckersResponse) ProtoMessage()    {}
func (*ListCheckersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{63}
}

func (m *ListCheckersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCheckersResponse.Unmarshal(m, b)
}
func (m *ListCheckersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCheckersResponse.Marshal(b, m, deterministic)
}
func (m *ListCheckersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCheckersResponse.Merge(m, src)
}
func (m *ListCheckersResponse) XXX_Size() int {
	return xxx_messageInfo_ListCheckersResponse.Size(m)
}
func (m *ListCheckersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCheckersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCheckersResponse proto.InternalMessageInfo

func (m *ListCheckersResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListCheckersResponse) GetCheckerInfos() []*CheckerInfo {
	if m != nil {
		return m.CheckerInfos
	}
	return nil
}

type CheckerInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Desc                 string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Activated            bool     `protobuf:"varint,3,opt,name=activated,proto3" json:"activated,omitempty"`
	Found                bool     `protobuf:"varint,4,opt,name=found,proto3" json:"found,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckerInfo) Reset()         { *m = CheckerInfo{} }
func (m *CheckerInfo) String() string { return proto.CompactTextString(m) }
func (*CheckerInfo) ProtoMessage()    {}
func (*CheckerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{64}
}

func (m *CheckerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckerInfo.Unmarshal(m, b)
}
func (m *CheckerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckerInfo.Marshal(b, m, deterministic)
}
func (m *CheckerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckerInfo.Merge(m, src)
}
func (m *CheckerInfo) XXX_Size() int {
	return xxx_messageInfo_CheckerInfo.Size(m)
}
func (m *CheckerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CheckerInfo proto.InternalMessageInfo

func (m *CheckerInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CheckerInfo) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CheckerInfo) GetActivated() bool {
	if m != nil {
		return m.Activated
	}
	return false
}

func (m *CheckerInfo) GetFound() bool {
	if m != nil {
		return m.Found
	}
	return false
}

type SegmentTarget struct {
	ID                   int64               `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Level                datapb.SegmentLevel `protobuf:"varint,2,opt,name=level,proto3,enum=milvus.protov2.data.SegmentLevel" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SegmentTarget) Reset()         { *m = SegmentTarget{} }
func (m *SegmentTarget) String() string { return proto.CompactTextString(m) }
func (*SegmentTarget) ProtoMessage()    {}
func (*SegmentTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{65}
}

func (m *SegmentTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentTarget.Unmarshal(m, b)
}
func (m *SegmentTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentTarget.Marshal(b, m, deterministic)
}
func (m *SegmentTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentTarget.Merge(m, src)
}
func (m *SegmentTarget) XXX_Size() int {
	return xxx_messageInfo_SegmentTarget.Size(m)
}
func (m *SegmentTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentTarget.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentTarget proto.InternalMessageInfo

func (m *SegmentTarget) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SegmentTarget) GetLevel() datapb.SegmentLevel {
	if m != nil {
		return m.Level
	}
	return datapb.SegmentLevel_Legacy
}

type PartitionTarget struct {
	PartitionID          int64            `protobuf:"varint,1,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	Segments             []*SegmentTarget `protobuf:"bytes,2,rep,name=segments,proto3" json:"segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PartitionTarget) Reset()         { *m = PartitionTarget{} }
func (m *PartitionTarget) String() string { return proto.CompactTextString(m) }
func (*PartitionTarget) ProtoMessage()    {}
func (*PartitionTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{66}
}

func (m *PartitionTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionTarget.Unmarshal(m, b)
}
func (m *PartitionTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionTarget.Marshal(b, m, deterministic)
}
func (m *PartitionTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionTarget.Merge(m, src)
}
func (m *PartitionTarget) XXX_Size() int {
	return xxx_messageInfo_PartitionTarget.Size(m)
}
func (m *PartitionTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionTarget.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionTarget proto.InternalMessageInfo

func (m *PartitionTarget) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *PartitionTarget) GetSegments() []*SegmentTarget {
	if m != nil {
		return m.Segments
	}
	return nil
}

type ChannelTarget struct {
	ChannelName          string             `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	DroppedSegmentIDs    []int64            `protobuf:"varint,2,rep,packed,name=dropped_segmentIDs,json=droppedSegmentIDs,proto3" json:"dropped_segmentIDs,omitempty"`
	GrowingSegmentIDs    []int64            `protobuf:"varint,3,rep,packed,name=growing_segmentIDs,json=growingSegmentIDs,proto3" json:"growing_segmentIDs,omitempty"`
	PartitionTargets     []*PartitionTarget `protobuf:"bytes,4,rep,name=partition_targets,json=partitionTargets,proto3" json:"partition_targets,omitempty"`
	SeekPosition         *msgpb.MsgPosition `protobuf:"bytes,5,opt,name=seek_position,json=seekPosition,proto3" json:"seek_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ChannelTarget) Reset()         { *m = ChannelTarget{} }
func (m *ChannelTarget) String() string { return proto.CompactTextString(m) }
func (*ChannelTarget) ProtoMessage()    {}
func (*ChannelTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{67}
}

func (m *ChannelTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelTarget.Unmarshal(m, b)
}
func (m *ChannelTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelTarget.Marshal(b, m, deterministic)
}
func (m *ChannelTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelTarget.Merge(m, src)
}
func (m *ChannelTarget) XXX_Size() int {
	return xxx_messageInfo_ChannelTarget.Size(m)
}
func (m *ChannelTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelTarget.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelTarget proto.InternalMessageInfo

func (m *ChannelTarget) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *ChannelTarget) GetDroppedSegmentIDs() []int64 {
	if m != nil {
		return m.DroppedSegmentIDs
	}
	return nil
}

func (m *ChannelTarget) GetGrowingSegmentIDs() []int64 {
	if m != nil {
		return m.GrowingSegmentIDs
	}
	return nil
}

func (m *ChannelTarget) GetPartitionTargets() []*PartitionTarget {
	if m != nil {
		return m.PartitionTargets
	}
	return nil
}

func (m *ChannelTarget) GetSeekPosition() *msgpb.MsgPosition {
	if m != nil {
		return m.SeekPosition
	}
	return nil
}

type CollectionTarget struct {
	CollectionID         int64            `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	ChannelTargets       []*ChannelTarget `protobuf:"bytes,2,rep,name=Channel_targets,json=ChannelTargets,proto3" json:"Channel_targets,omitempty"`
	Version              int64            `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CollectionTarget) Reset()         { *m = CollectionTarget{} }
func (m *CollectionTarget) String() string { return proto.CompactTextString(m) }
func (*CollectionTarget) ProtoMessage()    {}
func (*CollectionTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{68}
}

func (m *CollectionTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionTarget.Unmarshal(m, b)
}
func (m *CollectionTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionTarget.Marshal(b, m, deterministic)
}
func (m *CollectionTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionTarget.Merge(m, src)
}
func (m *CollectionTarget) XXX_Size() int {
	return xxx_messageInfo_CollectionTarget.Size(m)
}
func (m *CollectionTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionTarget.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionTarget proto.InternalMessageInfo

func (m *CollectionTarget) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *CollectionTarget) GetChannelTargets() []*ChannelTarget {
	if m != nil {
		return m.ChannelTargets
	}
	return nil
}

func (m *CollectionTarget) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type NodeInfo struct {
	ID                   int64    `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	State                string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()    {}
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{69}
}

func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
}
func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
}
func (m *NodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfo.Merge(m, src)
}
func (m *NodeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeInfo.Size(m)
}
func (m *NodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfo proto.InternalMessageInfo

func (m *NodeInfo) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *NodeInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *NodeInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type ListQueryNodeRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListQueryNodeRequest) Reset()         { *m = ListQueryNodeRequest{} }
func (m *ListQueryNodeRequest) String() string { return proto.CompactTextString(m) }
func (*ListQueryNodeRequest) ProtoMessage()    {}
func (*ListQueryNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{70}
}

func (m *ListQueryNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListQueryNodeRequest.Unmarshal(m, b)
}
func (m *ListQueryNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListQueryNodeRequest.Marshal(b, m, deterministic)
}
func (m *ListQueryNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListQueryNodeRequest.Merge(m, src)
}
func (m *ListQueryNodeRequest) XXX_Size() int {
	return xxx_messageInfo_ListQueryNodeRequest.Size(m)
}
func (m *ListQueryNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListQueryNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListQueryNodeRequest proto.InternalMessageInfo

func (m *ListQueryNodeRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type ListQueryNodeResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NodeInfos            []*NodeInfo      `protobuf:"bytes,2,rep,name=nodeInfos,proto3" json:"nodeInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListQueryNodeResponse) Reset()         { *m = ListQueryNodeResponse{} }
func (m *ListQueryNodeResponse) String() string { return proto.CompactTextString(m) }
func (*ListQueryNodeResponse) ProtoMessage()    {}
func (*ListQueryNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{71}
}

func (m *ListQueryNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListQueryNodeResponse.Unmarshal(m, b)
}
func (m *ListQueryNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListQueryNodeResponse.Marshal(b, m, deterministic)
}
func (m *ListQueryNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListQueryNodeResponse.Merge(m, src)
}
func (m *ListQueryNodeResponse) XXX_Size() int {
	return xxx_messageInfo_ListQueryNodeResponse.Size(m)
}
func (m *ListQueryNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListQueryNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListQueryNodeResponse proto.InternalMessageInfo

func (m *ListQueryNodeResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListQueryNodeResponse) GetNodeInfos() []*NodeInfo {
	if m != nil {
		return m.NodeInfos
	}
	return nil
}

type GetQueryNodeDistributionRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	NodeID               int64             `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetQueryNodeDistributionRequest) Reset()         { *m = GetQueryNodeDistributionRequest{} }
func (m *GetQueryNodeDistributionRequest) String() string { return proto.CompactTextString(m) }
func (*GetQueryNodeDistributionRequest) ProtoMessage()    {}
func (*GetQueryNodeDistributionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{72}
}

func (m *GetQueryNodeDistributionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQueryNodeDistributionRequest.Unmarshal(m, b)
}
func (m *GetQueryNodeDistributionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQueryNodeDistributionRequest.Marshal(b, m, deterministic)
}
func (m *GetQueryNodeDistributionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQueryNodeDistributionRequest.Merge(m, src)
}
func (m *GetQueryNodeDistributionRequest) XXX_Size() int {
	return xxx_messageInfo_GetQueryNodeDistributionRequest.Size(m)
}
func (m *GetQueryNodeDistributionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQueryNodeDistributionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetQueryNodeDistributionRequest proto.InternalMessageInfo

func (m *GetQueryNodeDistributionRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetQueryNodeDistributionRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

type GetQueryNodeDistributionResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ID                   int64            `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	ChannelNames         []string         `protobuf:"bytes,3,rep,name=channel_names,json=channelNames,proto3" json:"channel_names,omitempty"`
	SealedSegmentIDs     []int64          `protobuf:"varint,4,rep,packed,name=sealed_segmentIDs,json=sealedSegmentIDs,proto3" json:"sealed_segmentIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetQueryNodeDistributionResponse) Reset()         { *m = GetQueryNodeDistributionResponse{} }
func (m *GetQueryNodeDistributionResponse) String() string { return proto.CompactTextString(m) }
func (*GetQueryNodeDistributionResponse) ProtoMessage()    {}
func (*GetQueryNodeDistributionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{73}
}

func (m *GetQueryNodeDistributionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQueryNodeDistributionResponse.Unmarshal(m, b)
}
func (m *GetQueryNodeDistributionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQueryNodeDistributionResponse.Marshal(b, m, deterministic)
}
func (m *GetQueryNodeDistributionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQueryNodeDistributionResponse.Merge(m, src)
}
func (m *GetQueryNodeDistributionResponse) XXX_Size() int {
	return xxx_messageInfo_GetQueryNodeDistributionResponse.Size(m)
}
func (m *GetQueryNodeDistributionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQueryNodeDistributionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetQueryNodeDistributionResponse proto.InternalMessageInfo

func (m *GetQueryNodeDistributionResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetQueryNodeDistributionResponse) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *GetQueryNodeDistributionResponse) GetChannelNames() []string {
	if m != nil {
		return m.ChannelNames
	}
	return nil
}

func (m *GetQueryNodeDistributionResponse) GetSealedSegmentIDs() []int64 {
	if m != nil {
		return m.SealedSegmentIDs
	}
	return nil
}

type SuspendBalanceRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SuspendBalanceRequest) Reset()         { *m = SuspendBalanceRequest{} }
func (m *SuspendBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*SuspendBalanceRequest) ProtoMessage()    {}
func (*SuspendBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{74}
}

func (m *SuspendBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuspendBalanceRequest.Unmarshal(m, b)
}
func (m *SuspendBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuspendBalanceRequest.Marshal(b, m, deterministic)
}
func (m *SuspendBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuspendBalanceRequest.Merge(m, src)
}
func (m *SuspendBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_SuspendBalanceRequest.Size(m)
}
func (m *SuspendBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SuspendBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SuspendBalanceRequest proto.InternalMessageInfo

func (m *SuspendBalanceRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type ResumeBalanceRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResumeBalanceRequest) Reset()         { *m = ResumeBalanceRequest{} }
func (m *ResumeBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*ResumeBalanceRequest) ProtoMessage()    {}
func (*ResumeBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{75}
}

func (m *ResumeBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeBalanceRequest.Unmarshal(m, b)
}
func (m *ResumeBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeBalanceRequest.Marshal(b, m, deterministic)
}
func (m *ResumeBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeBalanceRequest.Merge(m, src)
}
func (m *ResumeBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_ResumeBalanceRequest.Size(m)
}
func (m *ResumeBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeBalanceRequest proto.InternalMessageInfo

func (m *ResumeBalanceRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type SuspendNodeRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	NodeID               int64             `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SuspendNodeRequest) Reset()         { *m = SuspendNodeRequest{} }
func (m *SuspendNodeRequest) String() string { return proto.CompactTextString(m) }
func (*SuspendNodeRequest) ProtoMessage()    {}
func (*SuspendNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{76}
}

func (m *SuspendNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuspendNodeRequest.Unmarshal(m, b)
}
func (m *SuspendNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuspendNodeRequest.Marshal(b, m, deterministic)
}
func (m *SuspendNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuspendNodeRequest.Merge(m, src)
}
func (m *SuspendNodeRequest) XXX_Size() int {
	return xxx_messageInfo_SuspendNodeRequest.Size(m)
}
func (m *SuspendNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SuspendNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SuspendNodeRequest proto.InternalMessageInfo

func (m *SuspendNodeRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SuspendNodeRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

type ResumeNodeRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	NodeID               int64             `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResumeNodeRequest) Reset()         { *m = ResumeNodeRequest{} }
func (m *ResumeNodeRequest) String() string { return proto.CompactTextString(m) }
func (*ResumeNodeRequest) ProtoMessage()    {}
func (*ResumeNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{77}
}

func (m *ResumeNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeNodeRequest.Unmarshal(m, b)
}
func (m *ResumeNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeNodeRequest.Marshal(b, m, deterministic)
}
func (m *ResumeNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeNodeRequest.Merge(m, src)
}
func (m *ResumeNodeRequest) XXX_Size() int {
	return xxx_messageInfo_ResumeNodeRequest.Size(m)
}
func (m *ResumeNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeNodeRequest proto.InternalMessageInfo

func (m *ResumeNodeRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ResumeNodeRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

type TransferSegmentRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentID            int64             `protobuf:"varint,2,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	SourceNodeID         int64             `protobuf:"varint,3,opt,name=source_nodeID,json=sourceNodeID,proto3" json:"source_nodeID,omitempty"`
	TargetNodeID         int64             `protobuf:"varint,4,opt,name=target_nodeID,json=targetNodeID,proto3" json:"target_nodeID,omitempty"`
	TransferAll          bool              `protobuf:"varint,5,opt,name=transfer_all,json=transferAll,proto3" json:"transfer_all,omitempty"`
	ToAllNodes           bool              `protobuf:"varint,6,opt,name=to_all_nodes,json=toAllNodes,proto3" json:"to_all_nodes,omitempty"`
	CopyMode             bool              `protobuf:"varint,7,opt,name=copy_mode,json=copyMode,proto3" json:"copy_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TransferSegmentRequest) Reset()         { *m = TransferSegmentRequest{} }
func (m *TransferSegmentRequest) String() string { return proto.CompactTextString(m) }
func (*TransferSegmentRequest) ProtoMessage()    {}
func (*TransferSegmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{78}
}

func (m *TransferSegmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferSegmentRequest.Unmarshal(m, b)
}
func (m *TransferSegmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferSegmentRequest.Marshal(b, m, deterministic)
}
func (m *TransferSegmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferSegmentRequest.Merge(m, src)
}
func (m *TransferSegmentRequest) XXX_Size() int {
	return xxx_messageInfo_TransferSegmentRequest.Size(m)
}
func (m *TransferSegmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferSegmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferSegmentRequest proto.InternalMessageInfo

func (m *TransferSegmentRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *TransferSegmentRequest) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *TransferSegmentRequest) GetSourceNodeID() int64 {
	if m != nil {
		return m.SourceNodeID
	}
	return 0
}

func (m *TransferSegmentRequest) GetTargetNodeID() int64 {
	if m != nil {
		return m.TargetNodeID
	}
	return 0
}

func (m *TransferSegmentRequest) GetTransferAll() bool {
	if m != nil {
		return m.TransferAll
	}
	return false
}

func (m *TransferSegmentRequest) GetToAllNodes() bool {
	if m != nil {
		return m.ToAllNodes
	}
	return false
}

func (m *TransferSegmentRequest) GetCopyMode() bool {
	if m != nil {
		return m.CopyMode
	}
	return false
}

type TransferChannelRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	ChannelName          string            `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	SourceNodeID         int64             `protobuf:"varint,3,opt,name=source_nodeID,json=sourceNodeID,proto3" json:"source_nodeID,omitempty"`
	TargetNodeID         int64             `protobuf:"varint,4,opt,name=target_nodeID,json=targetNodeID,proto3" json:"target_nodeID,omitempty"`
	TransferAll          bool              `protobuf:"varint,5,opt,name=transfer_all,json=transferAll,proto3" json:"transfer_all,omitempty"`
	ToAllNodes           bool              `protobuf:"varint,6,opt,name=to_all_nodes,json=toAllNodes,proto3" json:"to_all_nodes,omitempty"`
	CopyMode             bool              `protobuf:"varint,7,opt,name=copy_mode,json=copyMode,proto3" json:"copy_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TransferChannelRequest) Reset()         { *m = TransferChannelRequest{} }
func (m *TransferChannelRequest) String() string { return proto.CompactTextString(m) }
func (*TransferChannelRequest) ProtoMessage()    {}
func (*TransferChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{79}
}

func (m *TransferChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferChannelRequest.Unmarshal(m, b)
}
func (m *TransferChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferChannelRequest.Marshal(b, m, deterministic)
}
func (m *TransferChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferChannelRequest.Merge(m, src)
}
func (m *TransferChannelRequest) XXX_Size() int {
	return xxx_messageInfo_TransferChannelRequest.Size(m)
}
func (m *TransferChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferChannelRequest proto.InternalMessageInfo

func (m *TransferChannelRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *TransferChannelRequest) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *TransferChannelRequest) GetSourceNodeID() int64 {
	if m != nil {
		return m.SourceNodeID
	}
	return 0
}

func (m *TransferChannelRequest) GetTargetNodeID() int64 {
	if m != nil {
		return m.TargetNodeID
	}
	return 0
}

func (m *TransferChannelRequest) GetTransferAll() bool {
	if m != nil {
		return m.TransferAll
	}
	return false
}

func (m *TransferChannelRequest) GetToAllNodes() bool {
	if m != nil {
		return m.ToAllNodes
	}
	return false
}

func (m *TransferChannelRequest) GetCopyMode() bool {
	if m != nil {
		return m.CopyMode
	}
	return false
}

type CheckQueryNodeDistributionRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SourceNodeID         int64             `protobuf:"varint,3,opt,name=source_nodeID,json=sourceNodeID,proto3" json:"source_nodeID,omitempty"`
	TargetNodeID         int64             `protobuf:"varint,4,opt,name=target_nodeID,json=targetNodeID,proto3" json:"target_nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CheckQueryNodeDistributionRequest) Reset()         { *m = CheckQueryNodeDistributionRequest{} }
func (m *CheckQueryNodeDistributionRequest) String() string { return proto.CompactTextString(m) }
func (*CheckQueryNodeDistributionRequest) ProtoMessage()    {}
func (*CheckQueryNodeDistributionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{80}
}

func (m *CheckQueryNodeDistributionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckQueryNodeDistributionRequest.Unmarshal(m, b)
}
func (m *CheckQueryNodeDistributionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckQueryNodeDistributionRequest.Marshal(b, m, deterministic)
}
func (m *CheckQueryNodeDistributionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckQueryNodeDistributionRequest.Merge(m, src)
}
func (m *CheckQueryNodeDistributionRequest) XXX_Size() int {
	return xxx_messageInfo_CheckQueryNodeDistributionRequest.Size(m)
}
func (m *CheckQueryNodeDistributionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckQueryNodeDistributionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckQueryNodeDistributionRequest proto.InternalMessageInfo

func (m *CheckQueryNodeDistributionRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *CheckQueryNodeDistributionRequest) GetSourceNodeID() int64 {
	if m != nil {
		return m.SourceNodeID
	}
	return 0
}

func (m *CheckQueryNodeDistributionRequest) GetTargetNodeID() int64 {
	if m != nil {
		return m.TargetNodeID
	}
	return 0
}

func init() {
	proto.RegisterEnum("milvus.protov2.query.LoadScope", LoadScope_name, LoadScope_value)
	proto.RegisterEnum("milvus.protov2.query.DataScope", DataScope_name, DataScope_value)
	proto.RegisterEnum("milvus.protov2.query.PartitionState", PartitionState_name, PartitionState_value)
	proto.RegisterEnum("milvus.protov2.query.TriggerCondition", TriggerCondition_name, TriggerCondition_value)
	proto.RegisterEnum("milvus.protov2.query.LoadType", LoadType_name, LoadType_value)
	proto.RegisterEnum("milvus.protov2.query.LoadStatus", LoadStatus_name, LoadStatus_value)
	proto.RegisterEnum("milvus.protov2.query.SyncType", SyncType_name, SyncType_value)
	proto.RegisterType((*ShowCollectionsRequest)(nil), "milvus.protov2.query.ShowCollectionsRequest")
	proto.RegisterType((*ShowCollectionsResponse)(nil), "milvus.protov2.query.ShowCollectionsResponse")
	proto.RegisterType((*ShowPartitionsRequest)(nil), "milvus.protov2.query.ShowPartitionsRequest")
	proto.RegisterType((*ShowPartitionsResponse)(nil), "milvus.protov2.query.ShowPartitionsResponse")
	proto.RegisterType((*LoadCollectionRequest)(nil), "milvus.protov2.query.LoadCollectionRequest")
	proto.RegisterMapType((map[int64]int64)(nil), "milvus.protov2.query.LoadCollectionRequest.FieldIndexIDEntry")
	proto.RegisterType((*ReleaseCollectionRequest)(nil), "milvus.protov2.query.ReleaseCollectionRequest")
	proto.RegisterType((*GetStatisticsRequest)(nil), "milvus.protov2.query.GetStatisticsRequest")
	proto.RegisterType((*LoadPartitionsRequest)(nil), "milvus.protov2.query.LoadPartitionsRequest")
	proto.RegisterMapType((map[int64]int64)(nil), "milvus.protov2.query.LoadPartitionsRequest.FieldIndexIDEntry")
	proto.RegisterType((*ReleasePartitionsRequest)(nil), "milvus.protov2.query.ReleasePartitionsRequest")
	proto.RegisterType((*GetPartitionStatesRequest)(nil), "milvus.protov2.query.GetPartitionStatesRequest")
	proto.RegisterType((*GetPartitionStatesResponse)(nil), "milvus.protov2.query.GetPartitionStatesResponse")
	proto.RegisterType((*GetSegmentInfoRequest)(nil), "milvus.protov2.query.GetSegmentInfoRequest")
	proto.RegisterType((*GetSegmentInfoResponse)(nil), "milvus.protov2.query.GetSegmentInfoResponse")
	proto.RegisterType((*GetShardLeadersRequest)(nil), "milvus.protov2.query.GetShardLeadersRequest")
	proto.RegisterType((*GetShardLeadersResponse)(nil), "milvus.protov2.query.GetShardLeadersResponse")
	proto.RegisterType((*UpdateResourceGroupsRequest)(nil), "milvus.protov2.query.UpdateResourceGroupsRequest")
	proto.RegisterMapType((map[string]*rgpb.ResourceGroupConfig)(nil), "milvus.protov2.query.UpdateResourceGroupsRequest.ResourceGroupsEntry")
	proto.RegisterType((*ShardLeadersList)(nil), "milvus.protov2.query.ShardLeadersList")
	proto.RegisterType((*SyncNewCreatedPartitionRequest)(nil), "milvus.protov2.query.SyncNewCreatedPartitionRequest")
	proto.RegisterType((*LoadMetaInfo)(nil), "milvus.protov2.query.LoadMetaInfo")
	proto.RegisterType((*WatchDmChannelsRequest)(nil), "milvus.protov2.query.WatchDmChannelsRequest")
	proto.RegisterMapType((map[int64]*datapb.SegmentInfo)(nil), "milvus.protov2.query.WatchDmChannelsRequest.SegmentInfosEntry")
	proto.RegisterType((*UnsubDmChannelRequest)(nil), "milvus.protov2.query.UnsubDmChannelRequest")
	proto.RegisterType((*SegmentLoadInfo)(nil), "milvus.protov2.query.SegmentLoadInfo")
	proto.RegisterType((*FieldIndexInfo)(nil), "milvus.protov2.query.FieldIndexInfo")
	proto.RegisterType((*LoadSegmentsRequest)(nil), "milvus.protov2.query.LoadSegmentsRequest")
	proto.RegisterType((*ReleaseSegmentsRequest)(nil), "milvus.protov2.query.ReleaseSegmentsRequest")
	proto.RegisterType((*SearchRequest)(nil), "milvus.protov2.query.SearchRequest")
	proto.RegisterType((*QueryRequest)(nil), "milvus.protov2.query.QueryRequest")
	proto.RegisterType((*SyncReplicaSegmentsRequest)(nil), "milvus.protov2.query.SyncReplicaSegmentsRequest")
	proto.RegisterType((*ReplicaSegmentsInfo)(nil), "milvus.protov2.query.ReplicaSegmentsInfo")
	proto.RegisterType((*GetLoadInfoRequest)(nil), "milvus.protov2.query.GetLoadInfoRequest")
	proto.RegisterType((*GetLoadInfoResponse)(nil), "milvus.protov2.query.GetLoadInfoResponse")
	proto.RegisterType((*HandoffSegmentsRequest)(nil), "milvus.protov2.query.HandoffSegmentsRequest")
	proto.RegisterType((*LoadBalanceRequest)(nil), "milvus.protov2.query.LoadBalanceRequest")
	proto.RegisterType((*DmChannelWatchInfo)(nil), "milvus.protov2.query.DmChannelWatchInfo")
	proto.RegisterType((*QueryChannelInfo)(nil), "milvus.protov2.query.QueryChannelInfo")
	proto.RegisterType((*PartitionStates)(nil), "milvus.protov2.query.PartitionStates")
	proto.RegisterType((*SegmentInfo)(nil), "milvus.protov2.query.SegmentInfo")
	proto.RegisterType((*CollectionInfo)(nil), "milvus.protov2.query.CollectionInfo")
	proto.RegisterType((*UnsubscribeChannels)(nil), "milvus.protov2.query.UnsubscribeChannels")
	proto.RegisterType((*UnsubscribeChannelInfo)(nil), "milvus.protov2.query.UnsubscribeChannelInfo")
	proto.RegisterType((*SegmentChangeInfo)(nil), "milvus.protov2.query.SegmentChangeInfo")
	proto.RegisterType((*SealedSegmentsChangeInfo)(nil), "milvus.protov2.query.SealedSegmentsChangeInfo")
	proto.RegisterType((*GetDataDistributionRequest)(nil), "milvus.protov2.query.GetDataDistributionRequest")
	proto.RegisterMapType((map[string]*msgpb.MsgPosition)(nil), "milvus.protov2.query.GetDataDistributionRequest.CheckpointsEntry")
	proto.RegisterType((*GetDataDistributionResponse)(nil), "milvus.protov2.query.GetDataDistributionResponse")
	proto.RegisterType((*LeaderView)(nil), "milvus.protov2.query.LeaderView")
	proto.RegisterMapType((map[int64]*msgpb.MsgPosition)(nil), "milvus.protov2.query.LeaderView.GrowingSegmentsEntry")
	proto.RegisterMapType((map[int64]*SegmentDist)(nil), "milvus.protov2.query.LeaderView.SegmentDistEntry")
	proto.RegisterType((*SegmentDist)(nil), "milvus.protov2.query.SegmentDist")
	proto.RegisterType((*SegmentVersionInfo)(nil), "milvus.protov2.query.SegmentVersionInfo")
	proto.RegisterMapType((map[int64]*FieldIndexInfo)(nil), "milvus.protov2.query.SegmentVersionInfo.IndexInfoEntry")
	proto.RegisterType((*ChannelVersionInfo)(nil), "milvus.protov2.query.ChannelVersionInfo")
	proto.RegisterType((*CollectionLoadInfo)(nil), "milvus.protov2.query.CollectionLoadInfo")
	proto.RegisterMapType((map[int64]int64)(nil), "milvus.protov2.query.CollectionLoadInfo.FieldIndexIDEntry")
	proto.RegisterType((*PartitionLoadInfo)(nil), "milvus.protov2.query.PartitionLoadInfo")
	proto.RegisterMapType((map[int64]int64)(nil), "milvus.protov2.query.PartitionLoadInfo.FieldIndexIDEntry")
	proto.RegisterType((*ChannelNodeInfo)(nil), "milvus.protov2.query.ChannelNodeInfo")
	proto.RegisterType((*Replica)(nil), "milvus.protov2.query.Replica")
	proto.RegisterMapType((map[string]*ChannelNodeInfo)(nil), "milvus.protov2.query.Replica.ChannelNodeInfosEntry")
	proto.RegisterType((*SyncAction)(nil), "milvus.protov2.query.SyncAction")
	proto.RegisterType((*SyncDistributionRequest)(nil), "milvus.protov2.query.SyncDistributionRequest")
	proto.RegisterType((*ResourceGroup)(nil), "milvus.protov2.query.ResourceGroup")
	proto.RegisterType((*TransferReplicaRequest)(nil), "milvus.protov2.query.TransferReplicaRequest")
	proto.RegisterType((*DescribeResourceGroupRequest)(nil), "milvus.protov2.query.DescribeResourceGroupRequest")
	proto.RegisterType((*DescribeResourceGroupResponse)(nil), "milvus.protov2.query.DescribeResourceGroupResponse")
	proto.RegisterType((*ResourceGroupInfo)(nil), "milvus.protov2.query.ResourceGroupInfo")
	proto.RegisterMapType((map[int64]int32)(nil), "milvus.protov2.query.ResourceGroupInfo.NumIncomingNodeEntry")
	proto.RegisterMapType((map[int64]int32)(nil), "milvus.protov2.query.ResourceGroupInfo.NumLoadedReplicaEntry")
	proto.RegisterMapType((map[int64]int32)(nil), "milvus.protov2.query.ResourceGroupInfo.NumOutgoingNodeEntry")
	proto.RegisterType((*DeleteRequest)(nil), "milvus.protov2.query.DeleteRequest")
	proto.RegisterType((*ActivateCheckerRequest)(nil), "milvus.protov2.query.ActivateCheckerRequest")
	proto.RegisterType((*DeactivateCheckerRequest)(nil), "milvus.protov2.query.DeactivateCheckerRequest")
	proto.RegisterType((*ListCheckersRequest)(nil), "milvus.protov2.query.ListCheckersRequest")
	proto.RegisterType((*ListCheckersResponse)(nil), "milvus.protov2.query.ListCheckersResponse")
	proto.RegisterType((*CheckerInfo)(nil), "milvus.protov2.query.CheckerInfo")
	proto.RegisterType((*SegmentTarget)(nil), "milvus.protov2.query.SegmentTarget")
	proto.RegisterType((*PartitionTarget)(nil), "milvus.protov2.query.PartitionTarget")
	proto.RegisterType((*ChannelTarget)(nil), "milvus.protov2.query.ChannelTarget")
	proto.RegisterType((*CollectionTarget)(nil), "milvus.protov2.query.CollectionTarget")
	proto.RegisterType((*NodeInfo)(nil), "milvus.protov2.query.NodeInfo")
	proto.RegisterType((*ListQueryNodeRequest)(nil), "milvus.protov2.query.ListQueryNodeRequest")
	proto.RegisterType((*ListQueryNodeResponse)(nil), "milvus.protov2.query.ListQueryNodeResponse")
	proto.RegisterType((*GetQueryNodeDistributionRequest)(nil), "milvus.protov2.query.GetQueryNodeDistributionRequest")
	proto.RegisterType((*GetQueryNodeDistributionResponse)(nil), "milvus.protov2.query.GetQueryNodeDistributionResponse")
	proto.RegisterType((*SuspendBalanceRequest)(nil), "milvus.protov2.query.SuspendBalanceRequest")
	proto.RegisterType((*ResumeBalanceRequest)(nil), "milvus.protov2.query.ResumeBalanceRequest")
	proto.RegisterType((*SuspendNodeRequest)(nil), "milvus.protov2.query.SuspendNodeRequest")
	proto.RegisterType((*ResumeNodeRequest)(nil), "milvus.protov2.query.ResumeNodeRequest")
	proto.RegisterType((*TransferSegmentRequest)(nil), "milvus.protov2.query.TransferSegmentRequest")
	proto.RegisterType((*TransferChannelRequest)(nil), "milvus.protov2.query.TransferChannelRequest")
	proto.RegisterType((*CheckQueryNodeDistributionRequest)(nil), "milvus.protov2.query.CheckQueryNodeDistributionRequest")
}

func init() { proto.RegisterFile("query_coord.proto", fileDescriptor_aab7cc9a69ed26e8) }

var fileDescriptor_aab7cc9a69ed26e8 = []byte{
	// 5885 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x3d, 0x6b, 0x8f, 0x1c, 0xd9,
	0x55, 0xae, 0x7e, 0x4d, 0xf7, 0xe9, 0xc7, 0xf4, 0xdc, 0x99, 0xb1, 0x3b, 0xbd, 0x7e, 0xcc, 0x96,
	0xe3, 0xdd, 0x59, 0xef, 0x7a, 0x6c, 0xcf, 0x66, 0xb3, 0x89, 0x93, 0x5d, 0x63, 0xcf, 0xd8, 0xde,
	0xc9, 0xda, 0x8e, 0xa9, 0xf1, 0x7a, 0xa3, 0x10, 0xa5, 0x5d, 0xd3, 0x75, 0xa7, 0xa7, 0xe2, 0x7a,
	0xb4, 0xab, 0xaa, 0xc7, 0x3b, 0x0b, 0x12, 0x08, 0x21, 0x04, 0x22, 0x3c, 0x24, 0x50, 0x24, 0x88,
	0x88, 0xe0, 0x0b, 0x08, 0xc8, 0x07, 0x22, 0xf1, 0x0d, 0x45, 0x8a, 0xf8, 0x18, 0x24, 0x04, 0x42,
	0xf0, 0x0b, 0xc8, 0x17, 0x3e, 0xf1, 0x91, 0x45, 0x42, 0x42, 0xf7, 0x55, 0x55, 0xb7, 0x1e, 0xdd,
	0x3d, 0xd3, 0xe3, 0x7d, 0x00, 0xdf, 0xba, 0x4e, 0xdd, 0x7b, 0xcf, 0xb9, 0xf7, 0x3c, 0xee, 0x39,
	0xe7, 0x9e, 0xba, 0x0d, 0x0b, 0x4f, 0x47, 0xd8, 0x3b, 0xe8, 0xf5, 0x5d, 0xd7, 0x33, 0xd6, 0x86,
	0x9e, 0x1b, 0xb8, 0x68, 0xc9, 0x36, 0xad, 0xfd, 0x91, 0xcf, 0x9e, 0xf6, 0xd7, 0xd7, 0x68, 0x8b,
	0x6e, 0xa3, 0xef, 0xda, 0xb6, 0xeb, 0x30, 0x68, 0xb7, 0x11, 0x6f, 0xd3, 0xad, 0x7a, 0x03, 0xfe,
	0xab, 0x65, 0x3a, 0x01, 0xf6, 0x1c, 0xdd, 0x12, 0xed, 0xfc, 0xfe, 0x1e, 0xb6, 0x75, 0xfe, 0x54,
	0xb3, 0x7d, 0xd1, 0xb0, 0x6d, 0xe8, 0x81, 0x1e, 0x47, 0xdb, 0x5d, 0x30, 0x1d, 0x03, 0x7f, 0x10,
	0x07, 0xa9, 0xbf, 0xae, 0xc0, 0xc9, 0xed, 0x3d, 0xf7, 0xd9, 0x86, 0x6b, 0x59, 0xb8, 0x1f, 0x98,
	0xae, 0xe3, 0x6b, 0xf8, 0xe9, 0x08, 0xfb, 0x01, 0x5a, 0x87, 0xd2, 0x8e, 0xee, 0xe3, 0x8e, 0xb2,
	0xa2, 0xac, 0xd6, 0xd7, 0xcf, 0xae, 0x25, 0x68, 0xe6, 0xc4, 0xde, 0xf3, 0x07, 0x37, 0x75, 0x1f,
	0x6b, 0xb4, 0x2d, 0x42, 0x50, 0x32, 0x76, 0xb6, 0x36, 0x3b, 0x85, 0x15, 0x65, 0xb5, 0xa8, 0xd1,
	0xdf, 0xe8, 0xf3, 0xd0, 0xec, 0x87, 0xa3, 0x6f, 0x6d, 0xfa, 0x9d, 0xe2, 0x4a, 0x71, 0xb5, 0xa8,
	0xc9, 0x40, 0xf5, 0xbb, 0x05, 0x38, 0x95, 0x22, 0xc4, 0x1f, 0xba, 0x8e, 0x8f, 0xd1, 0x1b, 0x50,
	0xf1, 0x03, 0x3d, 0x18, 0xf9, 0x9c, 0x96, 0x33, 0x39, 0xb4, 0x6c, 0xd3, 0x46, 0x1a, 0x6f, 0x9c,
	0x46, 0x5c, 0xc8, 0x40, 0x8c, 0xae, 0xc2, 0x92, 0xe9, 0xdc, 0xc3, 0xb6, 0xeb, 0x1d, 0xf4, 0x86,
	0xd8, 0xeb, 0x63, 0x27, 0xd0, 0x07, 0x58, 0x50, 0xb9, 0x28, 0xde, 0x3d, 0x88, 0x5e, 0xa1, 0x2f,
	0xc2, 0x29, 0xc6, 0x53, 0x1f, 0x7b, 0xfb, 0x66, 0x1f, 0xf7, 0xf4, 0x7d, 0xdd, 0xb4, 0xf4, 0x1d,
	0x0b, 0x77, 0x4a, 0x2b, 0xc5, 0xd5, 0xaa, 0xb6, 0x4c, 0x5f, 0x6f, 0xb3, 0xb7, 0x37, 0xc4, 0x4b,
	0xf4, 0x0a, 0xb4, 0x3d, 0xbc, 0xeb, 0x61, 0x7f, 0xaf, 0x37, 0xf4, 0xdc, 0x81, 0x87, 0x7d, 0xbf,
	0x53, 0xa6, 0x68, 0xe6, 0x39, 0xfc, 0x01, 0x07, 0xab, 0x7f, 0xae, 0xc0, 0x32, 0x59, 0x8e, 0x07,
	0xba, 0x17, 0x98, 0xcf, 0x85, 0x2d, 0x2a, 0x34, 0xe2, 0x0b, 0xd1, 0x29, 0xd2, 0x77, 0x12, 0x8c,
	0xb4, 0x19, 0x0a, 0x02, 0xc8, 0x02, 0x96, 0x28, 0xb1, 0x12, 0x4c, 0xfd, 0x27, 0x2e, 0x41, 0x71,
	0x4a, 0x67, 0xe3, 0x5b, 0x12, 0x6b, 0x21, 0x8d, 0xf5, 0x28, 0x5c, 0xcb, 0x5a, 0xfd, 0x52, 0xf6,
	0xea, 0xff, 0x73, 0x11, 0x96, 0xef, 0xba, 0xba, 0x11, 0x09, 0xe3, 0x27, 0xb1, 0xfa, 0xd7, 0xa1,
	0xc2, 0x74, 0xbb, 0x53, 0xa2, 0xd8, 0x5e, 0x4e, 0x62, 0xe3, 0x9a, 0x1f, 0x51, 0xb9, 0x4d, 0x01,
	0x1a, 0xef, 0x86, 0x2e, 0x40, 0xcb, 0xc3, 0x43, 0xcb, 0xec, 0xeb, 0x3d, 0x67, 0x64, 0xef, 0x60,
	0xaf, 0x53, 0x5e, 0x51, 0x56, 0xcb, 0x5a, 0x93, 0x43, 0xef, 0x53, 0x20, 0xda, 0x81, 0xe6, 0xae,
	0x89, 0x2d, 0xa3, 0x47, 0xcd, 0xc3, 0xd6, 0x66, 0xa7, 0xb2, 0x52, 0x5c, 0xad, 0xaf, 0xbf, 0xb5,
	0x96, 0x65, 0xa5, 0xd6, 0x32, 0xd7, 0x65, 0xed, 0x36, 0x19, 0x60, 0x8b, 0xf5, 0xbf, 0xe5, 0x04,
	0xde, 0x81, 0xd6, 0xd8, 0x8d, 0x81, 0x50, 0x07, 0xe6, 0xf8, 0x22, 0x77, 0xe6, 0x56, 0x94, 0xd5,
	0xaa, 0x26, 0x1e, 0xd1, 0xcb, 0x30, 0xef, 0x61, 0xdf, 0x1d, 0x79, 0x7d, 0xdc, 0x1b, 0x78, 0xee,
	0x68, 0xe8, 0x77, 0xaa, 0x2b, 0xc5, 0xd5, 0x9a, 0xd6, 0x12, 0xe0, 0x3b, 0x14, 0xda, 0xbd, 0x0e,
	0x0b, 0x29, 0x2c, 0xa8, 0x0d, 0xc5, 0x27, 0xf8, 0x80, 0xb2, 0xa3, 0xa8, 0x91, 0x9f, 0x68, 0x09,
	0xca, 0xfb, 0xba, 0x35, 0xc2, 0x7c, 0xb9, 0xd9, 0xc3, 0xb5, 0xc2, 0x97, 0x14, 0xf5, 0x07, 0x0a,
	0x74, 0x34, 0x6c, 0x61, 0xdd, 0xc7, 0x9f, 0x2c, 0x63, 0x4f, 0x42, 0xc5, 0x71, 0x0d, 0xbc, 0xb5,
	0x49, 0x19, 0x5b, 0xd4, 0xf8, 0x93, 0xfa, 0xdf, 0x0a, 0x2c, 0xdd, 0xc1, 0x01, 0x51, 0x07, 0xd3,
	0x0f, 0xcc, 0x7e, 0xa8, 0xf3, 0xd7, 0xa1, 0xe8, 0xe1, 0xa7, 0x9c, 0xb6, 0x4b, 0x49, 0xda, 0xc2,
	0x0d, 0x21, 0xab, 0xaf, 0x46, 0x7a, 0xa2, 0x17, 0xa1, 0x61, 0xd8, 0x56, 0xaf, 0xbf, 0xa7, 0x3b,
	0x0e, 0xb6, 0x98, 0x4a, 0xd5, 0xb4, 0xba, 0x61, 0x5b, 0x1b, 0x1c, 0x84, 0xce, 0x02, 0xf8, 0x78,
	0x60, 0x63, 0x27, 0x88, 0x6c, 0x74, 0x0c, 0x82, 0x2e, 0xc2, 0xc2, 0xae, 0xe7, 0xda, 0x3d, 0x7f,
	0x4f, 0xf7, 0x8c, 0x9e, 0x85, 0x75, 0x03, 0x7b, 0x94, 0xfe, 0xaa, 0x36, 0x4f, 0x5e, 0x6c, 0x13,
	0xf8, 0x5d, 0x0a, 0x46, 0x6f, 0x40, 0xd9, 0xef, 0xbb, 0x43, 0x4c, 0xe5, 0xad, 0xb5, 0x7e, 0x2e,
	0x5b, 0x92, 0x36, 0xf5, 0x40, 0xdf, 0x26, 0xcd, 0x34, 0xd6, 0x5a, 0xfd, 0x49, 0x89, 0xa9, 0xdd,
	0xa7, 0xde, 0xe8, 0xc5, 0x54, 0xb3, 0x7c, 0x5c, 0xaa, 0x59, 0x99, 0x4a, 0x35, 0xe7, 0x26, 0xa9,
	0x66, 0x6a, 0xed, 0x0e, 0xa3, 0x9a, 0xd5, 0x89, 0xaa, 0x59, 0xcb, 0x52, 0x4d, 0x74, 0x07, 0xe6,
	0x99, 0x6b, 0x61, 0x3a, 0xbb, 0x6e, 0xcf, 0x32, 0xfd, 0xa0, 0x03, 0x94, 0xd0, 0x73, 0x69, 0x59,
	0x35, 0xf0, 0x07, 0x6b, 0x0c, 0xb5, 0xb3, 0xeb, 0x6a, 0x4d, 0x53, 0xfc, 0xbc, 0x6b, 0xfa, 0xc1,
	0xec, 0x3a, 0xfe, 0x77, 0x91, 0x8e, 0x7f, 0xfa, 0xa5, 0x28, 0xb2, 0x03, 0x65, 0xc9, 0x0e, 0xfc,
	0x95, 0x02, 0x9f, 0xbb, 0x83, 0x83, 0x70, 0x02, 0x44, 0xa9, 0xf1, 0xa7, 0xd6, 0x01, 0xf8, 0x91,
	0x02, 0xdd, 0x2c, 0x6a, 0x67, 0x73, 0x02, 0xbe, 0x05, 0x27, 0x43, 0x2c, 0x3d, 0x03, 0xfb, 0x7d,
	0xcf, 0x1c, 0x52, 0x66, 0x52, 0xdb, 0x55, 0x5f, 0xbf, 0x90, 0xad, 0x02, 0x49, 0x2a, 0x96, 0xc3,
	0x41, 0x36, 0x63, 0x63, 0xa8, 0xbf, 0xab, 0xc0, 0x32, 0xb1, 0x96, 0xdc, 0xbc, 0x11, 0x49, 0x9c,
	0x61, 0x75, 0x65, 0xd3, 0x59, 0x48, 0x99, 0xce, 0x29, 0x56, 0x5a, 0xfd, 0x0d, 0x05, 0x4e, 0x26,
	0x29, 0x9a, 0x6d, 0x05, 0xdf, 0x84, 0x32, 0x51, 0x47, 0xb1, 0x60, 0x2f, 0x66, 0x2f, 0x58, 0x1c,
	0x21, 0x6b, 0xaf, 0x0e, 0x19, 0x25, 0x91, 0x3d, 0x9f, 0x49, 0xf4, 0x92, 0x93, 0x2f, 0x64, 0x4c,
	0xfe, 0xf7, 0x14, 0x38, 0x95, 0x42, 0x39, 0xdb, 0xec, 0xdf, 0x86, 0x0a, 0xdd, 0xa9, 0xc4, 0xf4,
	0x5f, 0xca, 0x99, 0x7e, 0x0c, 0x25, 0xb1, 0x40, 0x1a, 0xef, 0xa5, 0xfe, 0xb0, 0x00, 0x2f, 0xbc,
	0x37, 0x34, 0xf4, 0x00, 0x6b, 0x92, 0xad, 0x9b, 0x65, 0x29, 0x9c, 0xb4, 0x3d, 0x65, 0xc4, 0xdd,
	0xca, 0x26, 0x6e, 0x0c, 0xfe, 0x35, 0x19, 0xca, 0xec, 0x7a, 0xd2, 0x63, 0x32, 0x61, 0x31, 0xa3,
	0x59, 0xdc, 0x9e, 0xd6, 0x98, 0x3d, 0xfd, 0x6a, 0xdc, 0x9e, 0x66, 0xac, 0x95, 0x37, 0x90, 0xf1,
	0x6d, 0xb8, 0xce, 0xae, 0x39, 0x88, 0xdb, 0x5d, 0x17, 0xda, 0xc9, 0xa5, 0x24, 0x4e, 0x07, 0x77,
	0x38, 0x7a, 0x8e, 0x6e, 0x63, 0x8e, 0xb0, 0xce, 0x61, 0xf7, 0x75, 0x1b, 0xa3, 0xcf, 0x41, 0x95,
	0xd8, 0xbc, 0x9e, 0x69, 0x08, 0xbd, 0x99, 0xa3, 0x36, 0xd0, 0xf0, 0xd1, 0x19, 0x00, 0xfa, 0x4a,
	0x37, 0x0c, 0x8f, 0xf9, 0x23, 0x35, 0xad, 0x46, 0x20, 0x37, 0x08, 0x40, 0xfd, 0x23, 0x05, 0xce,
	0x6e, 0x1f, 0x38, 0xfd, 0xfb, 0xf8, 0xd9, 0x86, 0x87, 0xf5, 0x00, 0x47, 0x3b, 0xdf, 0x73, 0x96,
	0x56, 0xb4, 0x02, 0xf5, 0x98, 0x01, 0xe4, 0xda, 0x1c, 0x07, 0xa9, 0xff, 0xa9, 0x40, 0x83, 0x6c,
	0xc6, 0xf7, 0x70, 0xa0, 0x13, 0xcd, 0x42, 0x5f, 0x81, 0x9a, 0xe5, 0xea, 0x46, 0x2f, 0x38, 0x18,
	0x32, 0x7a, 0x5a, 0x69, 0x7a, 0xa2, 0x3d, 0xfc, 0xe1, 0xc1, 0x10, 0x6b, 0x55, 0x8b, 0xff, 0x9a,
	0x8a, 0xa6, 0xa4, 0xa1, 0x2e, 0x66, 0x6c, 0x37, 0xe7, 0xa1, 0x6e, 0xe3, 0xc0, 0x33, 0xfb, 0x8c,
	0x0c, 0xe2, 0xbb, 0xd5, 0x6e, 0x16, 0x3a, 0x8a, 0x06, 0x0c, 0x4c, 0x91, 0x9d, 0x82, 0x39, 0x63,
	0x87, 0xf1, 0xab, 0x4c, 0xf9, 0x55, 0x31, 0x76, 0x28, 0xab, 0xa8, 0xc7, 0x12, 0x17, 0x5e, 0xea,
	0xb1, 0xd4, 0x88, 0xc7, 0x12, 0x93, 0x0c, 0xf5, 0x8f, 0x2b, 0x70, 0xf2, 0x7d, 0x3d, 0xe8, 0xef,
	0x6d, 0xda, 0xc2, 0xb5, 0x9c, 0x85, 0x1f, 0xd1, 0x16, 0x59, 0x88, 0x6f, 0x91, 0xc7, 0xb6, 0x05,
	0x87, 0x46, 0xb2, 0x9c, 0x6d, 0x24, 0x0d, 0x3d, 0xd0, 0xd7, 0x1e, 0x71, 0x91, 0x8d, 0x19, 0xc9,
	0x98, 0x07, 0x58, 0x39, 0x9a, 0x07, 0x78, 0x0b, 0x9a, 0xf8, 0x83, 0xbe, 0x35, 0x22, 0xd2, 0x4f,
	0x29, 0x60, 0xae, 0xdd, 0x4a, 0x26, 0x05, 0x71, 0x2b, 0xdd, 0xe0, 0xdd, 0xb6, 0x38, 0x1d, 0x4c,
	0xb2, 0x6c, 0x1c, 0xe8, 0xd4, 0x7f, 0xab, 0xaf, 0xab, 0xf9, 0x92, 0x25, 0x04, 0x92, 0x49, 0x17,
	0x79, 0x42, 0xa7, 0xa1, 0xc6, 0x7d, 0xce, 0xad, 0xcd, 0x4e, 0x8d, 0x2e, 0x63, 0x04, 0x40, 0x7d,
	0x68, 0xf2, 0x8d, 0x8c, 0x53, 0xc9, 0xfc, 0xba, 0xb7, 0xb3, 0x51, 0x64, 0x33, 0x3e, 0x4e, 0x3d,
	0xb7, 0x54, 0x0d, 0x3f, 0x06, 0x42, 0x9f, 0x87, 0xa6, 0xbb, 0xbb, 0x6b, 0x99, 0x0e, 0xbe, 0xcf,
	0x78, 0x5d, 0xa7, 0x64, 0xc8, 0x40, 0xe2, 0xa7, 0xee, 0x63, 0xcf, 0x37, 0x5d, 0xa7, 0xd3, 0xa0,
	0xef, 0xc5, 0x63, 0x96, 0xfb, 0xd9, 0x3c, 0x92, 0xfb, 0xa9, 0xc3, 0x42, 0x8a, 0xd6, 0x0c, 0xf7,
	0xf3, 0x8b, 0xb2, 0xb9, 0x9c, 0xcc, 0xb2, 0x98, 0xa1, 0xfc, 0x4b, 0x05, 0x96, 0xdf, 0x73, 0xfc,
	0xd1, 0x4e, 0xb8, 0x4c, 0x9f, 0x94, 0x7a, 0x24, 0xcd, 0x73, 0x29, 0x65, 0x9e, 0xd5, 0x9f, 0x55,
	0x60, 0x9e, 0xcf, 0x83, 0x48, 0x0f, 0x35, 0x65, 0xa7, 0xa1, 0x16, 0xba, 0x36, 0x7c, 0x51, 0x22,
	0x40, 0xd2, 0x36, 0x16, 0x52, 0xb6, 0x71, 0x2a, 0xd2, 0x84, 0xbb, 0x5a, 0x8a, 0xb9, 0xab, 0x67,
	0x00, 0x76, 0xad, 0x91, 0xbf, 0xd7, 0x0b, 0x4c, 0x6e, 0x9b, 0x8a, 0x5a, 0x8d, 0x42, 0x1e, 0x9a,
	0x36, 0x46, 0x1b, 0xd0, 0xd8, 0x31, 0x1d, 0xcb, 0x1d, 0xf4, 0x86, 0x7a, 0xb0, 0xe7, 0xf3, 0x1c,
	0x46, 0x36, 0x6b, 0x68, 0x88, 0x71, 0x93, 0xb6, 0xd6, 0xea, 0xac, 0xd7, 0x03, 0xd2, 0x09, 0x9d,
	0x85, 0xba, 0x33, 0xb2, 0x7b, 0xee, 0x6e, 0xcf, 0x73, 0x9f, 0xf9, 0x34, 0x53, 0x51, 0xd4, 0x6a,
	0xce, 0xc8, 0xfe, 0xfa, 0xae, 0xe6, 0x3e, 0x23, 0x4e, 0x45, 0x8d, 0xb8, 0x17, 0xbe, 0xe5, 0x0e,
	0x58, 0x96, 0x62, 0x1a, 0x0c, 0x51, 0x17, 0xd2, 0xdf, 0xc0, 0x56, 0xa0, 0xd3, 0xfe, 0xb5, 0x69,
	0xfb, 0x87, 0x5d, 0xd0, 0x4b, 0xd0, 0xea, 0xbb, 0xf6, 0x50, 0xa7, 0xeb, 0x74, 0xdb, 0x73, 0x6d,
	0xaa, 0x8e, 0x45, 0x2d, 0x01, 0x45, 0xb7, 0xa0, 0x1e, 0x29, 0x84, 0xdf, 0xa9, 0x53, 0x4c, 0x9f,
	0xcf, 0xd6, 0xd9, 0x58, 0xbc, 0x45, 0x44, 0x15, 0x42, 0x8d, 0xf0, 0xd1, 0x05, 0x10, 0x7a, 0xda,
	0xf3, 0xcd, 0x0f, 0x31, 0x53, 0x3b, 0xba, 0x63, 0xd4, 0x39, 0x7c, 0xdb, 0xfc, 0x90, 0xee, 0x0c,
	0xa6, 0xe3, 0x63, 0x2f, 0x10, 0xf9, 0x85, 0x4e, 0x93, 0xed, 0x0c, 0x0c, 0xca, 0xc5, 0x1c, 0xdd,
	0x86, 0x96, 0x1f, 0xe8, 0x5e, 0xd0, 0x1b, 0xba, 0x3e, 0x15, 0x86, 0x4e, 0x8b, 0x4a, 0x7a, 0x4a,
	0x49, 0x6d, 0x7f, 0x40, 0xc4, 0xfc, 0x01, 0x6f, 0xa6, 0x35, 0x69, 0x37, 0xf1, 0x48, 0xc6, 0xa1,
	0x2b, 0x12, 0x8d, 0x33, 0x3f, 0xe5, 0x38, 0xb4, 0x5b, 0x38, 0xce, 0x2a, 0xf1, 0xc6, 0x74, 0x43,
	0xdf, 0xb1, 0xf0, 0x23, 0x6e, 0x57, 0xda, 0x94, 0xe1, 0x49, 0x30, 0xd9, 0x24, 0x2c, 0xbc, 0x8f,
	0xad, 0xce, 0x02, 0xdd, 0xb9, 0x5f, 0x1c, 0xa7, 0xef, 0x77, 0x49, 0x43, 0x8d, 0xb5, 0x27, 0xfc,
	0xf2, 0x03, 0xd7, 0xd3, 0x07, 0x21, 0x06, 0x44, 0x31, 0x24, 0xa0, 0xea, 0xbf, 0x14, 0xa1, 0x25,
	0xf3, 0x81, 0x58, 0x3b, 0x16, 0xa5, 0x0b, 0x25, 0x13, 0x8f, 0x44, 0x6f, 0xb1, 0x43, 0xc8, 0x63,
	0x49, 0x01, 0xaa, 0x63, 0x55, 0xad, 0xce, 0x60, 0x74, 0x00, 0xa2, 0x2b, 0x8c, 0xff, 0x54, 0xb1,
	0x8b, 0x94, 0x1b, 0x35, 0x0a, 0xa1, 0x5b, 0x79, 0x07, 0xe6, 0x44, 0x3e, 0x81, 0x69, 0x98, 0x78,
	0x24, 0x6f, 0x76, 0x46, 0x26, 0xc5, 0xca, 0x34, 0x4c, 0x3c, 0xa2, 0xdb, 0xd0, 0x60, 0x43, 0x0e,
	0x75, 0x4f, 0xb7, 0x85, 0x7e, 0x9d, 0xcf, 0xb1, 0x52, 0xef, 0xe2, 0x83, 0x47, 0xc4, 0xe4, 0x3d,
	0xd0, 0x4d, 0x4f, 0x63, 0xb2, 0xf8, 0x80, 0xf6, 0x43, 0xab, 0xd0, 0x66, 0xe3, 0xec, 0x9a, 0x16,
	0xe6, 0xba, 0x3a, 0xc7, 0x92, 0x0a, 0x14, 0x7e, 0xdb, 0xb4, 0x30, 0x53, 0xc6, 0x70, 0x12, 0x54,
	0xf6, 0xaa, 0x4c, 0x17, 0x29, 0x84, 0x4a, 0xdd, 0x79, 0x60, 0xc6, 0xbb, 0x27, 0x36, 0x05, 0xb6,
	0x77, 0x31, 0x2a, 0x05, 0xe7, 0x88, 0x7f, 0x39, 0xb2, 0x99, 0x36, 0x03, 0x9b, 0x90, 0x33, 0xb2,
	0xa9, 0x2e, 0xaf, 0xc3, 0x72, 0x7f, 0xe4, 0x79, 0x6c, 0x67, 0x8b, 0x8f, 0x53, 0xa7, 0x89, 0x98,
	0x45, 0xfe, 0x72, 0x2b, 0x3e, 0xdc, 0x1a, 0x2c, 0x72, 0x92, 0x02, 0xd7, 0xc3, 0x3d, 0x79, 0x3b,
	0x62, 0xa7, 0x2b, 0xdb, 0xe4, 0x8d, 0xe0, 0xeb, 0x8f, 0xcb, 0xb0, 0x48, 0x0c, 0x27, 0x97, 0x8d,
	0x99, 0x3c, 0xa1, 0x33, 0x00, 0x86, 0x1f, 0xf4, 0x24, 0x73, 0x5f, 0x33, 0xfc, 0x80, 0xef, 0x8e,
	0x5f, 0x11, 0x8e, 0x4c, 0x71, 0x5c, 0x78, 0x9c, 0x30, 0xe6, 0x69, 0x67, 0xe6, 0x88, 0x99, 0xe6,
	0xf3, 0xd0, 0xe4, 0xae, 0xa1, 0x94, 0xd0, 0x68, 0x30, 0xe0, 0xfd, 0xec, 0x4d, 0xa9, 0x92, 0x99,
	0xf3, 0x8e, 0xb9, 0x33, 0x73, 0xb3, 0xba, 0x33, 0xd5, 0xa4, 0x3b, 0xf3, 0x0e, 0xcc, 0xcb, 0xb6,
	0x43, 0x98, 0xe1, 0x89, 0xc6, 0xa3, 0x25, 0x19, 0x0f, 0x3f, 0xee, 0x8d, 0x80, 0xec, 0x8d, 0x9c,
	0x87, 0xa6, 0x83, 0xb1, 0xd1, 0x0b, 0x3c, 0xdd, 0xf1, 0x77, 0xb1, 0x47, 0x05, 0xaa, 0xaa, 0x35,
	0x08, 0xf0, 0x21, 0x87, 0xa1, 0xb7, 0x01, 0xe8, 0x3c, 0x59, 0x9a, 0xb4, 0x31, 0x2e, 0x4d, 0x4a,
	0x05, 0x88, 0xa6, 0x49, 0xe9, 0xd2, 0xd0, 0x9f, 0xc7, 0xe6, 0xf2, 0xa0, 0x17, 0xa0, 0x66, 0xe9,
	0x1f, 0x1e, 0xf4, 0xc8, 0xd0, 0xd4, 0x20, 0x57, 0xb5, 0x2a, 0x01, 0x10, 0xac, 0xea, 0xef, 0x17,
	0xe1, 0x24, 0xcf, 0xa6, 0x1d, 0x87, 0x08, 0xe7, 0x79, 0x2b, 0x62, 0xbb, 0x2f, 0x8e, 0xc9, 0x4e,
	0x95, 0xa6, 0x70, 0xf0, 0xcb, 0x19, 0x0e, 0xbe, 0x9c, 0x9b, 0xa9, 0xa4, 0x72, 0x33, 0x61, 0xaa,
	0x7a, 0xee, 0x30, 0xa9, 0x6a, 0xb4, 0x04, 0x65, 0x9a, 0x28, 0xa0, 0x22, 0x56, 0xd3, 0xd8, 0xc3,
	0x74, 0xac, 0xbf, 0x0e, 0xd0, 0xdf, 0xc3, 0xfd, 0x27, 0x43, 0xd7, 0x74, 0x02, 0xca, 0xfa, 0x29,
	0xc4, 0x2f, 0xd6, 0x45, 0xfd, 0x7e, 0x01, 0x9a, 0xdb, 0x58, 0xf7, 0xfa, 0x7b, 0x82, 0x19, 0x5f,
	0x8a, 0x9f, 0x0f, 0xbc, 0x94, 0x7b, 0x3e, 0x20, 0x75, 0xfa, 0x0c, 0x1d, 0x0c, 0x10, 0x14, 0x81,
	0x1b, 0xe8, 0x21, 0x9d, 0x3d, 0x67, 0x64, 0xf3, 0x84, 0xf9, 0x3c, 0x7d, 0xc1, 0x89, 0xbd, 0x3f,
	0xb2, 0xd5, 0xff, 0x50, 0xa0, 0xf1, 0xf3, 0x64, 0x18, 0xb1, 0x38, 0xd7, 0xe2, 0x8b, 0xb3, 0x9a,
	0xbb, 0x38, 0x1a, 0x89, 0x81, 0xf1, 0x3e, 0xfe, 0x0c, 0x9e, 0x9b, 0xfc, 0xbd, 0x02, 0xdd, 0xed,
	0x03, 0xa7, 0xaf, 0x31, 0x3b, 0x77, 0x1c, 0xaa, 0x7a, 0x1e, 0x9a, 0xfb, 0x52, 0x74, 0x50, 0xa0,
	0x72, 0xde, 0xd8, 0x8f, 0x67, 0x6f, 0x1e, 0x42, 0x5b, 0x1c, 0x62, 0xf0, 0x09, 0x8b, 0xed, 0xe7,
	0x95, 0x6c, 0xca, 0x13, 0x04, 0x52, 0x7b, 0x34, 0xef, 0xc9, 0x40, 0xf5, 0x77, 0x14, 0x58, 0xcc,
	0x68, 0x88, 0x4e, 0xc1, 0x1c, 0xcf, 0x15, 0x71, 0x8f, 0x88, 0x99, 0x0f, 0x83, 0x30, 0x29, 0x4a,
	0x15, 0x9b, 0x46, 0x3a, 0xe8, 0x30, 0xd0, 0x39, 0xa8, 0x87, 0x61, 0xac, 0x91, 0xe2, 0x92, 0xe1,
	0xa3, 0x2e, 0x54, 0xb9, 0xfd, 0x16, 0x79, 0x82, 0xf0, 0x59, 0xb5, 0x01, 0xdd, 0xc1, 0xd1, 0x9e,
	0x39, 0xdb, 0xaa, 0x46, 0x06, 0x2c, 0x22, 0x35, 0x6e, 0xd5, 0x0c, 0xf5, 0xdf, 0x15, 0x58, 0x94,
	0xf0, 0xcd, 0x96, 0x08, 0x8d, 0xf6, 0xf6, 0xc2, 0xd1, 0xf6, 0x76, 0x29, 0x77, 0x55, 0x3c, 0x64,
	0xee, 0xea, 0x2c, 0x40, 0xc8, 0x07, 0xb1, 0xb2, 0x31, 0x88, 0xfa, 0x13, 0x05, 0x4e, 0xbe, 0xa3,
	0x3b, 0x86, 0xbb, 0xbb, 0x7b, 0x1c, 0x62, 0x7b, 0x0b, 0xa4, 0xcc, 0xc2, 0xf4, 0xa9, 0x6f, 0x39,
	0x21, 0xf1, 0x2a, 0x2c, 0x78, 0x6c, 0xdb, 0x33, 0x64, 0xc9, 0x2e, 0x6a, 0x6d, 0xf1, 0x22, 0x94,
	0xd7, 0xbf, 0x2e, 0x00, 0x22, 0x33, 0xbf, 0xa9, 0x5b, 0xba, 0xd3, 0xc7, 0xb3, 0x90, 0x7f, 0x01,
	0x5a, 0x92, 0x1b, 0x15, 0x96, 0xac, 0xc4, 0xfd, 0x28, 0x1f, 0xdd, 0x83, 0xd6, 0x0e, 0x43, 0xd6,
	0xf3, 0xb0, 0xee, 0xbb, 0x0e, 0x67, 0x4b, 0x4e, 0x8e, 0xfb, 0xa1, 0x67, 0x0e, 0x06, 0xd8, 0xdb,
	0x70, 0x1d, 0x83, 0x07, 0x42, 0x3b, 0x82, 0x54, 0xd2, 0x99, 0x28, 0x47, 0xe4, 0x59, 0x86, 0x4c,
	0x0a, 0x5d, 0x4b, 0xba, 0x1c, 0x3e, 0xd6, 0xad, 0x68, 0x31, 0xa2, 0xcd, 0xb6, 0xcd, 0x5e, 0x6c,
	0xe7, 0x1f, 0x76, 0x64, 0x78, 0x79, 0xea, 0xdf, 0x28, 0x80, 0xc2, 0xfc, 0x07, 0x4d, 0x1a, 0x51,
	0x0d, 0x4f, 0x76, 0x55, 0x32, 0xf6, 0xfc, 0xd3, 0x50, 0x33, 0x44, 0x4f, 0x6e, 0x94, 0x22, 0x00,
	0xdd, 0x80, 0x29, 0xd1, 0xd4, 0x9f, 0xc1, 0x86, 0xc8, 0x2e, 0x30, 0xe0, 0x5d, 0x0a, 0x93, 0x5d,
	0xc4, 0x52, 0xd2, 0x45, 0x8c, 0xa7, 0xa4, 0xcb, 0x52, 0x4a, 0x5a, 0xfd, 0x61, 0x01, 0xda, 0x74,
	0x6b, 0xd9, 0x88, 0xf2, 0x81, 0x53, 0x11, 0x7d, 0x1e, 0x9a, 0xbc, 0x08, 0x4c, 0x22, 0xbc, 0xf1,
	0x34, 0x36, 0x18, 0xba, 0x02, 0x4b, 0xac, 0x91, 0x87, 0xfd, 0x91, 0x15, 0x05, 0xd3, 0x2c, 0x7c,
	0x43, 0x4f, 0xd9, 0x9e, 0x46, 0x5e, 0x89, 0x1e, 0xef, 0xc3, 0xc9, 0x81, 0xe5, 0xee, 0xe8, 0x56,
	0x4f, 0x66, 0x0f, 0xe3, 0xe1, 0x54, 0x72, 0xbf, 0xc4, 0x06, 0xd8, 0x8e, 0x73, 0xd1, 0x47, 0x9b,
	0xd0, 0xf4, 0x31, 0x7e, 0x12, 0x45, 0xd8, 0xe5, 0xe9, 0xbc, 0x94, 0x06, 0xe9, 0x25, 0x9e, 0xd4,
	0x3f, 0x51, 0x60, 0x3e, 0x71, 0x1e, 0x97, 0xcc, 0x0f, 0x29, 0xe9, 0xfc, 0xd0, 0x35, 0x28, 0x13,
	0xcb, 0xc5, 0x76, 0x9c, 0x56, 0x5e, 0xd6, 0x42, 0x1e, 0x57, 0x63, 0x5d, 0xd0, 0x65, 0x58, 0xcc,
	0xa8, 0x0a, 0xe2, 0x42, 0x80, 0xd2, 0x45, 0x41, 0xea, 0x47, 0x25, 0xa8, 0xc7, 0x96, 0x63, 0x42,
	0x72, 0xeb, 0x58, 0x0e, 0x07, 0xf2, 0xaa, 0x3f, 0x88, 0xe0, 0xd9, 0xd8, 0x66, 0xd1, 0x2e, 0x0f,
	0xbe, 0x6d, 0x6c, 0xd3, 0x58, 0x37, 0x1e, 0xc6, 0x56, 0xe4, 0x30, 0x56, 0x0e, 0xf5, 0xe7, 0xc6,
	0x84, 0xfa, 0x55, 0x39, 0xd4, 0x97, 0x14, 0xa9, 0x96, 0x54, 0xa4, 0x69, 0x33, 0x4d, 0x57, 0x60,
	0xb1, 0xcf, 0x8e, 0x5f, 0x6e, 0x1e, 0x6c, 0x84, 0xaf, 0xb8, 0xdf, 0x9b, 0xf5, 0x0a, 0xbd, 0x13,
	0x65, 0x94, 0x19, 0x9f, 0x59, 0xf0, 0x93, 0x97, 0x49, 0xe0, 0xdc, 0x61, 0x6c, 0x16, 0x56, 0x9a,
	0x3e, 0x25, 0xb3, 0x5c, 0xcd, 0x23, 0x66, 0xb9, 0xce, 0x41, 0x5d, 0x78, 0x31, 0x44, 0xe7, 0x5b,
	0xcc, 0xfc, 0x09, 0x83, 0x60, 0xf8, 0x92, 0x45, 0x98, 0x97, 0x0f, 0xa9, 0x92, 0xb9, 0x98, 0x76,
	0x3a, 0x17, 0x73, 0x0a, 0xe6, 0x4c, 0xbf, 0xb7, 0xab, 0x3f, 0xc1, 0x34, 0x7d, 0x54, 0xd5, 0x2a,
	0xa6, 0x7f, 0x5b, 0x7f, 0x82, 0xd5, 0x7f, 0x2d, 0x42, 0x2b, 0xda, 0x74, 0xa7, 0xb6, 0x25, 0xd3,
	0x54, 0xc7, 0x3d, 0x80, 0x76, 0xe4, 0x11, 0xd1, 0x55, 0x9e, 0x90, 0x17, 0x48, 0x1e, 0x9b, 0xcf,
	0x0f, 0x13, 0x7a, 0x2b, 0x39, 0x01, 0xa5, 0x43, 0x3a, 0x01, 0x33, 0x57, 0xcb, 0xbc, 0x0e, 0xcb,
	0xe1, 0x7e, 0x2c, 0x4d, 0x9e, 0xc5, 0x73, 0x4b, 0xe2, 0xe5, 0x83, 0xf8, 0x22, 0xe4, 0x18, 0x83,
	0xb9, 0x3c, 0x63, 0x90, 0x14, 0x84, 0x6a, 0x4a, 0x10, 0xd2, 0x45, 0x3b, 0xb5, 0x8c, 0xa2, 0x1d,
	0xf5, 0x3d, 0x58, 0xa4, 0x19, 0x7e, 0xbf, 0xef, 0x99, 0x3b, 0x38, 0x0c, 0x14, 0xa6, 0x61, 0x6e,
	0x17, 0xaa, 0x89, 0x58, 0x23, 0x7c, 0x56, 0xbf, 0xab, 0xc0, 0xc9, 0xf4, 0xb8, 0x54, 0x6e, 0x22,
	0x93, 0xa2, 0x48, 0x26, 0xe5, 0x9b, 0xb0, 0x18, 0xf3, 0x37, 0xa5, 0x91, 0x73, 0x7d, 0xf4, 0x0c,
	0xd2, 0x35, 0x14, 0x8d, 0x22, 0x60, 0xea, 0x47, 0x4a, 0x78, 0x58, 0x42, 0x60, 0x03, 0x7a, 0x1e,
	0x45, 0x76, 0x3a, 0xd7, 0xb1, 0x4c, 0x27, 0x4c, 0x04, 0xf1, 0x59, 0x32, 0x20, 0x4f, 0x04, 0x7d,
	0x0d, 0xe6, 0x79, 0xa3, 0x70, 0xc3, 0x9a, 0xda, 0x51, 0x6b, 0xb1, 0x9e, 0xe1, 0x56, 0x75, 0x01,
	0x5a, 0xfc, 0x98, 0x48, 0x60, 0x2c, 0x66, 0x1d, 0x1e, 0xdd, 0x85, 0xb6, 0x68, 0x76, 0xf8, 0x4d,
	0x72, 0x9e, 0x77, 0x0d, 0x5d, 0xbe, 0xdf, 0x56, 0xa0, 0x23, 0x6f, 0x99, 0xb1, 0x25, 0x38, 0x8a,
	0xe3, 0xf7, 0x96, 0x5c, 0xab, 0xf1, 0xf2, 0x58, 0x9a, 0x22, 0x5c, 0xa2, 0x62, 0xe3, 0x7b, 0x05,
	0x5a, 0x82, 0x43, 0x02, 0xc3, 0x4d, 0xd3, 0x0f, 0x3c, 0x73, 0x67, 0x34, 0xeb, 0x41, 0x78, 0x1f,
	0xea, 0x51, 0xca, 0x41, 0xd0, 0x75, 0x23, 0x9b, 0xae, 0x7c, 0xd4, 0x6b, 0x1b, 0xd1, 0x18, 0xec,
	0xe4, 0x2f, 0x3e, 0x6a, 0xb7, 0x07, 0xed, 0x64, 0x83, 0x8c, 0xea, 0x84, 0x37, 0xe4, 0xe3, 0xb6,
	0x89, 0x5e, 0x48, 0xec, 0xb4, 0xed, 0xc7, 0x05, 0x78, 0x21, 0x93, 0xba, 0xd9, 0x62, 0xaa, 0xbc,
	0x44, 0xd6, 0x26, 0x54, 0x13, 0x81, 0xf0, 0xea, 0x58, 0x4e, 0xf2, 0x3c, 0x31, 0x4b, 0x61, 0xfa,
	0x91, 0xf7, 0x15, 0x19, 0x81, 0xd2, 0xb8, 0x51, 0xb8, 0x2e, 0x4a, 0xa3, 0x88, 0x9e, 0x68, 0x03,
	0x1a, 0x2c, 0xd9, 0xd0, 0xdb, 0x37, 0xf1, 0x33, 0x71, 0xc0, 0xbd, 0x92, 0x63, 0xb4, 0x69, 0xcb,
	0x47, 0x26, 0x7e, 0xa6, 0xd5, 0xad, 0xf0, 0xb7, 0xaf, 0xfe, 0xb4, 0x04, 0x10, 0xbd, 0x23, 0xd1,
	0x5c, 0x64, 0x09, 0xb8, 0x6a, 0xc7, 0x20, 0xc4, 0xdb, 0x90, 0x3d, 0x5c, 0xf1, 0x88, 0x1e, 0x46,
	0x47, 0x49, 0x86, 0xe9, 0x07, 0x7c, 0x75, 0xae, 0x4e, 0xa2, 0x46, 0x2c, 0x14, 0x61, 0x1e, 0x97,
	0x1f, 0x3f, 0x82, 0xa0, 0x4b, 0x80, 0x06, 0x9e, 0xfb, 0xcc, 0x74, 0x06, 0xf1, 0xc8, 0x84, 0x05,
	0x30, 0x0b, 0xfc, 0x4d, 0x2c, 0x34, 0x79, 0x0c, 0xed, 0x44, 0x73, 0xb1, 0x2c, 0x6f, 0x4c, 0x24,
	0xe4, 0x8e, 0x34, 0x1a, 0x17, 0xe6, 0x79, 0x19, 0x07, 0x3d, 0xc9, 0x7e, 0xa8, 0x7b, 0x03, 0x2c,
	0x38, 0xcb, 0xbd, 0x35, 0x19, 0x88, 0x2e, 0xc1, 0x22, 0x3f, 0x66, 0x14, 0xe4, 0xc4, 0x8e, 0x1b,
	0xdb, 0xf4, 0xb8, 0x91, 0xa3, 0x23, 0x2e, 0x5e, 0x57, 0x87, 0x76, 0x72, 0x19, 0x32, 0x0e, 0xa5,
	0xdf, 0x94, 0xb5, 0x64, 0xbc, 0x59, 0x23, 0x03, 0xc5, 0xf4, 0xa4, 0xdb, 0x87, 0xa5, 0xac, 0x09,
	0x66, 0xa0, 0x99, 0x41, 0x19, 0xaf, 0x87, 0xbe, 0x36, 0x65, 0x5e, 0xde, 0xa6, 0x15, 0xcb, 0xac,
	0x17, 0xa4, 0xcc, 0xba, 0xfa, 0x6b, 0x45, 0x40, 0x69, 0xcd, 0x41, 0x2d, 0x28, 0x84, 0x83, 0x14,
	0xb6, 0x36, 0x13, 0x52, 0x5a, 0x48, 0x49, 0xe9, 0x69, 0xa8, 0x85, 0x4e, 0x04, 0xdf, 0x2d, 0x22,
	0x40, 0x5c, 0x86, 0x4b, 0xb2, 0x0c, 0xc7, 0x08, 0x2b, 0xcb, 0x29, 0xff, 0x2b, 0xb0, 0x64, 0xe9,
	0x7e, 0xd0, 0x63, 0x67, 0x0b, 0x81, 0x69, 0x63, 0x3f, 0xd0, 0x6d, 0x56, 0x21, 0x53, 0xd2, 0x10,
	0x79, 0xb7, 0x49, 0x5e, 0x3d, 0x14, 0x6f, 0xd0, 0x23, 0xe1, 0xb6, 0x13, 0x03, 0xce, 0x4b, 0x3f,
	0xde, 0x9c, 0xd6, 0x56, 0x44, 0xd9, 0x7c, 0x26, 0x86, 0xb5, 0xd0, 0x9b, 0xed, 0xee, 0x40, 0x4b,
	0x7e, 0x99, 0xc1, 0xc2, 0x6b, 0x32, 0x0b, 0xa7, 0xf3, 0x98, 0x63, 0x7c, 0xdc, 0x03, 0x94, 0xb6,
	0x3c, 0xf1, 0x75, 0x53, 0xe4, 0x75, 0x9b, 0xc4, 0x8f, 0xd8, 0xba, 0x16, 0x65, 0x86, 0xff, 0x43,
	0x11, 0x50, 0xe4, 0x14, 0x86, 0x25, 0x08, 0xd3, 0x78, 0x52, 0x97, 0x61, 0x31, 0xed, 0x32, 0x0a,
	0x6f, 0x19, 0xa5, 0x1c, 0xc6, 0x2c, 0xe7, 0xae, 0x98, 0x55, 0x91, 0xfd, 0xa5, 0x70, 0xc7, 0x60,
	0x5e, 0xf0, 0xca, 0x98, 0x43, 0x1b, 0x79, 0xd3, 0xe8, 0x25, 0x6b, 0xb9, 0x99, 0xe9, 0xb9, 0x96,
	0x63, 0xdb, 0x53, 0xd3, 0x9e, 0x58, 0xc8, 0x2d, 0xf9, 0xe8, 0x95, 0x43, 0xfa, 0xe8, 0xe7, 0xa1,
	0xe9, 0xe1, 0xbe, 0xbb, 0x8f, 0x3d, 0x26, 0xbf, 0xd4, 0x1a, 0x95, 0xb5, 0x06, 0x07, 0x52, 0xc9,
	0x9d, 0xbd, 0x3c, 0xfb, 0x57, 0x8a, 0xb0, 0x10, 0xae, 0xf9, 0xa1, 0xf8, 0x39, 0xb9, 0xb0, 0xe4,
	0xb9, 0x33, 0xf0, 0xdb, 0xd9, 0x0c, 0xfc, 0xf2, 0x84, 0x90, 0x6a, 0x6a, 0xfe, 0x7d, 0x3c, 0x2c,
	0x78, 0x0d, 0xe6, 0xc5, 0x69, 0x89, 0xcb, 0x8a, 0xc8, 0x48, 0x80, 0xeb, 0x3d, 0xa3, 0xee, 0xb3,
	0x88, 0xa8, 0xe6, 0xbc, 0x67, 0xe4, 0xad, 0xaf, 0xfe, 0x5b, 0x01, 0xe6, 0x78, 0x32, 0x3e, 0x65,
	0x67, 0xa7, 0x49, 0x87, 0x2c, 0x41, 0x99, 0x8d, 0xcb, 0xb2, 0xa7, 0xec, 0x21, 0xa3, 0x96, 0xb0,
	0x94, 0x51, 0x4b, 0x48, 0xe9, 0x72, 0x39, 0x5d, 0x3c, 0x15, 0xe7, 0xb9, 0x94, 0x2e, 0xa4, 0x03,
	0x0a, 0x8f, 0x27, 0xdc, 0xb0, 0x84, 0x8e, 0x15, 0x25, 0xbc, 0x3e, 0xf6, 0xf0, 0x61, 0x2d, 0x31,
	0x7b, 0xbe, 0x95, 0xb7, 0xfb, 0x09, 0x70, 0xf7, 0x3b, 0xb0, 0x9c, 0xd9, 0x34, 0xc3, 0x43, 0xfd,
	0x8a, 0x6c, 0x51, 0x2f, 0x8c, 0x75, 0xd7, 0xc4, 0x68, 0x71, 0xa6, 0xfc, 0x63, 0x11, 0x60, 0xfb,
	0xc0, 0xe9, 0xdf, 0x60, 0x16, 0x71, 0x1d, 0x4a, 0x93, 0x2b, 0x45, 0x49, 0x7b, 0xaa, 0xc4, 0xb4,
	0xed, 0x14, 0x0a, 0x22, 0x25, 0xb7, 0x8a, 0xc9, 0xe4, 0x56, 0x5e, 0x5a, 0x2a, 0x7f, 0xd7, 0xfb,
	0x32, 0x94, 0xe8, 0xee, 0x55, 0x19, 0x37, 0xe9, 0x64, 0xc5, 0x01, 0xed, 0x82, 0x56, 0x41, 0xb8,
	0x4e, 0x5b, 0x0e, 0xf3, 0x8d, 0xe8, 0x1e, 0x58, 0xd4, 0x92, 0x60, 0x5a, 0x42, 0x43, 0x23, 0xad,
	0xb0, 0x21, 0x8b, 0xcb, 0x13, 0xd0, 0xb4, 0xe7, 0x55, 0xcb, 0xf2, 0xbc, 0x56, 0x61, 0xde, 0xf0,
	0xdc, 0xe1, 0x30, 0x36, 0x1c, 0xcb, 0x6b, 0x25, 0xc1, 0x89, 0x53, 0xda, 0xfa, 0xe1, 0x4f, 0x69,
	0x7f, 0x5a, 0x84, 0x53, 0x84, 0x45, 0xc7, 0x15, 0x90, 0x4d, 0xa3, 0x6d, 0xb1, 0x3d, 0xb8, 0x28,
	0xef, 0xc1, 0xd7, 0x60, 0x8e, 0xe5, 0xdf, 0x44, 0x48, 0xb1, 0x92, 0x2f, 0x54, 0x4c, 0x08, 0x35,
	0xd1, 0x61, 0xf6, 0xf4, 0x8d, 0x54, 0xd4, 0x51, 0x99, 0xb5, 0xa8, 0x63, 0x2e, 0x99, 0xb1, 0x8f,
	0x49, 0x68, 0x75, 0x62, 0x61, 0x68, 0xed, 0x28, 0x55, 0x12, 0xea, 0x1f, 0x2a, 0xd0, 0x94, 0x2a,
	0xe0, 0x11, 0x82, 0x52, 0xac, 0xa8, 0x9d, 0xfe, 0x46, 0x67, 0xa1, 0xda, 0xd7, 0x87, 0x7a, 0xdf,
	0x0c, 0x0e, 0x28, 0x7b, 0xca, 0xb4, 0x56, 0x2e, 0x84, 0xe5, 0x18, 0xc3, 0xb7, 0xa1, 0xd2, 0xa7,
	0xf5, 0xf4, 0xbc, 0xf8, 0x66, 0xda, 0xea, 0x7b, 0xde, 0x4b, 0xfd, 0x48, 0x81, 0x93, 0xa2, 0xb8,
	0x80, 0xdb, 0xb8, 0x59, 0xe4, 0x6c, 0x1d, 0x96, 0xb9, 0x65, 0x4e, 0x98, 0x68, 0x16, 0xd1, 0x2d,
	0x32, 0x98, 0xbc, 0x18, 0xeb, 0xb0, 0x1c, 0x50, 0xb5, 0x49, 0xf6, 0x61, 0x52, 0xb8, 0xc8, 0x5e,
	0xca, 0x7d, 0xa6, 0x29, 0xf0, 0x38, 0xc7, 0xea, 0x31, 0x39, 0xab, 0xb9, 0xfd, 0x01, 0x67, 0x64,
	0xf3, 0x79, 0xaa, 0x07, 0x70, 0x9a, 0x7d, 0xd7, 0xb3, 0x23, 0x53, 0x34, 0xe3, 0x21, 0x5c, 0xe6,
	0xcc, 0x13, 0x85, 0xee, 0x7f, 0xa6, 0xc0, 0x99, 0x1c, 0xdc, 0xb3, 0x25, 0x17, 0xee, 0x67, 0xe2,
	0xcf, 0x4d, 0x0a, 0x49, 0xb8, 0x99, 0xec, 0xca, 0x84, 0xfe, 0x57, 0x19, 0x16, 0x52, 0x8d, 0x8e,
	0x24, 0xbf, 0xaf, 0x01, 0x22, 0xec, 0x08, 0xbf, 0x76, 0xa7, 0x5b, 0x2f, 0xf7, 0xb2, 0x48, 0xd8,
	0x1a, 0x7e, 0xe9, 0x4e, 0xb6, 0x38, 0xf4, 0x84, 0xb5, 0x66, 0x07, 0x71, 0x21, 0x0f, 0x4b, 0xe3,
	0x3e, 0x60, 0x4c, 0x91, 0xb9, 0x76, 0x7f, 0x64, 0xb3, 0x53, 0x3b, 0xce, 0x71, 0xbe, 0x59, 0x3b,
	0x09, 0x30, 0xda, 0x83, 0x05, 0x1a, 0x52, 0x8f, 0x82, 0x81, 0x4b, 0x02, 0x6a, 0x4a, 0x19, 0xf3,
	0xcf, 0xbe, 0x7a, 0x08, 0x5c, 0x5f, 0xe7, 0xfd, 0xc9, 0x04, 0x78, 0x88, 0xef, 0xc8, 0x50, 0x81,
	0xc9, 0x74, 0xfa, 0xae, 0x1d, 0x62, 0xaa, 0x1c, 0x1a, 0xd3, 0x16, 0xef, 0x2f, 0x63, 0x8a, 0x43,
	0x63, 0x86, 0x61, 0xee, 0x28, 0x86, 0x81, 0x84, 0xea, 0xcc, 0xdc, 0x54, 0xb3, 0x6d, 0x1e, 0x17,
	0xbf, 0xc8, 0x1f, 0xa1, 0xad, 0xbb, 0x1b, 0xb0, 0x9c, 0xb9, 0xea, 0x93, 0xbc, 0xcc, 0x72, 0x3c,
	0xa1, 0x70, 0x13, 0x96, 0xb2, 0x96, 0xf3, 0x08, 0x63, 0xa4, 0x16, 0xea, 0x30, 0x63, 0xa8, 0x3f,
	0x2b, 0x40, 0x73, 0x13, 0x5b, 0x38, 0xc0, 0xcf, 0xbb, 0x6e, 0x23, 0x55, 0x86, 0x52, 0x4c, 0x97,
	0xa1, 0xa4, 0xaa, 0x6a, 0x4a, 0x19, 0x55, 0x35, 0x67, 0xc2, 0x82, 0x22, 0x32, 0x4a, 0x59, 0xf6,
	0xd3, 0x0c, 0xf4, 0x16, 0x34, 0x86, 0x9e, 0x69, 0xeb, 0xde, 0x41, 0xef, 0x09, 0x3e, 0xf0, 0xf9,
	0x7e, 0xda, 0xcd, 0xd9, 0x93, 0xb7, 0x36, 0x7d, 0xad, 0xce, 0xdb, 0xbf, 0x8b, 0x0f, 0x68, 0xb9,
	0x52, 0x98, 0x9f, 0x60, 0x95, 0xb7, 0x25, 0x2d, 0x06, 0x89, 0x4a, 0x90, 0xaa, 0x87, 0x2a, 0x41,
	0xfa, 0x0e, 0x9c, 0x24, 0x6e, 0xc3, 0xbe, 0x1e, 0x60, 0x9a, 0xd1, 0x25, 0x5b, 0xd1, 0xd1, 0xd7,
	0xfb, 0x34, 0xd4, 0xfa, 0x6c, 0x14, 0xee, 0xe8, 0x94, 0xb5, 0x08, 0xa0, 0x5a, 0xd0, 0xd9, 0xc4,
	0xfa, 0xc7, 0x85, 0xcd, 0x84, 0x45, 0xe2, 0x02, 0x70, 0x3c, 0xfe, 0x8c, 0xdf, 0x89, 0x86, 0xe3,
	0xb2, 0x54, 0x44, 0x59, 0x8b, 0x41, 0xd4, 0x3f, 0x50, 0x60, 0x49, 0xc6, 0x35, 0xdb, 0x4e, 0x72,
	0x0b, 0x1a, 0x62, 0xf4, 0xc9, 0xd5, 0x30, 0x1b, 0x51, 0x4b, 0x4d, 0xea, 0xa6, 0x62, 0xa8, 0xc7,
	0x5e, 0x92, 0x30, 0x90, 0x97, 0x60, 0x95, 0xb5, 0x82, 0x69, 0xd0, 0xea, 0x4d, 0xec, 0xf7, 0xf9,
	0x2e, 0x49, 0x7f, 0x93, 0x25, 0x15, 0x0c, 0x62, 0x8a, 0x50, 0xd5, 0x22, 0x00, 0x51, 0xd7, 0x5d,
	0x77, 0xe4, 0x18, 0xbc, 0x0c, 0x8e, 0x3d, 0xa8, 0xdf, 0x80, 0x26, 0x0f, 0x16, 0xb8, 0x0b, 0x9e,
	0x8c, 0x37, 0xc3, 0x32, 0xfc, 0xc2, 0xe1, 0xca, 0xf0, 0xd5, 0x20, 0x56, 0x87, 0xc0, 0xc7, 0x9e,
	0x5c, 0x87, 0x70, 0x3d, 0x96, 0xcb, 0x2f, 0x64, 0x17, 0xbb, 0x4b, 0x11, 0x0e, 0x1b, 0x38, 0x4a,
	0xe3, 0xab, 0x7f, 0x51, 0x80, 0x26, 0x0f, 0xf9, 0x22, 0xa4, 0x31, 0x45, 0xcf, 0xfa, 0x1e, 0xf2,
	0x12, 0x20, 0x1e, 0x88, 0xf4, 0x52, 0x5f, 0x14, 0x2f, 0xf0, 0x37, 0xb1, 0x84, 0x76, 0x76, 0xfe,
	0xbb, 0x98, 0x97, 0xff, 0xd6, 0x60, 0x21, 0xb2, 0x50, 0xcc, 0x27, 0x13, 0xe1, 0xc0, 0xa4, 0x73,
	0x61, 0x3e, 0xbb, 0xe8, 0x58, 0x99, 0x01, 0x8e, 0xab, 0x54, 0xe4, 0x07, 0x0a, 0xb4, 0xa3, 0xf0,
	0x81, 0x2f, 0xd7, 0x34, 0x69, 0xa1, 0xbb, 0x61, 0x36, 0x23, 0x9c, 0xd0, 0x58, 0x66, 0x49, 0x0c,
	0xd1, 0x5a, 0xd2, 0xa3, 0x3f, 0x26, 0x13, 0xf9, 0x35, 0xa8, 0x86, 0xe9, 0x12, 0x26, 0x97, 0x85,
	0x50, 0x2e, 0x3b, 0x30, 0xa7, 0x1b, 0x06, 0xbd, 0x4f, 0x86, 0x47, 0x5d, 0xfc, 0x91, 0x56, 0x09,
	0xd3, 0x1a, 0x87, 0x12, 0xaf, 0x12, 0x26, 0x0f, 0xea, 0xd7, 0x98, 0x96, 0xd3, 0x4a, 0x22, 0x32,
	0xe8, 0x0c, 0x26, 0x45, 0xfd, 0xae, 0x02, 0xcb, 0x89, 0xc1, 0x66, 0xb3, 0x19, 0x5f, 0x05, 0xfa,
	0x91, 0x6d, 0xdc, 0x60, 0xe4, 0xe4, 0x1f, 0x42, 0xbf, 0x21, 0xea, 0xa0, 0xda, 0x70, 0xee, 0x0e,
	0x8e, 0x88, 0x39, 0xae, 0xd8, 0x37, 0xe7, 0xbc, 0x4d, 0xfd, 0x5b, 0x05, 0x56, 0xf2, 0xf1, 0xcd,
	0xb6, 0x10, 0x49, 0x2e, 0x13, 0x1f, 0x20, 0xb6, 0x75, 0x8b, 0x4f, 0x92, 0x1b, 0x31, 0xf5, 0xcd,
	0xa9, 0x94, 0x2b, 0x65, 0x57, 0xca, 0xa9, 0xef, 0xc2, 0xf2, 0xf6, 0xc8, 0x1f, 0x62, 0xe7, 0x18,
	0x4a, 0x07, 0x89, 0x50, 0x69, 0xd8, 0x1f, 0xd9, 0xf8, 0x18, 0xc6, 0x7a, 0x0c, 0x88, 0x13, 0x36,
	0xa3, 0x78, 0xe6, 0x32, 0xae, 0x47, 0x43, 0x92, 0x91, 0x8d, 0x9f, 0x17, 0x82, 0xef, 0x15, 0xa2,
	0xa0, 0x98, 0x2f, 0xf9, 0x8c, 0x2e, 0x42, 0x94, 0x3a, 0x2b, 0x24, 0x53, 0x67, 0xa9, 0xaf, 0x5f,
	0x8a, 0x19, 0x5f, 0xbf, 0x9c, 0x87, 0x26, 0x8f, 0x91, 0xa5, 0x34, 0x5b, 0x83, 0x01, 0x79, 0xa3,
	0x17, 0xa1, 0x21, 0xbe, 0x1d, 0xe8, 0xe9, 0x96, 0x45, 0x8d, 0x69, 0x55, 0xab, 0x0b, 0xd8, 0x0d,
	0xcb, 0x42, 0x2b, 0xd0, 0x08, 0x5c, 0xf2, 0x32, 0x4c, 0xd8, 0x92, 0x26, 0x10, 0xb8, 0x37, 0x2c,
	0x8b, 0xe5, 0x46, 0x5f, 0x80, 0x5a, 0xdf, 0x1d, 0x1e, 0xf4, 0x6c, 0x12, 0x99, 0xb0, 0xdb, 0x96,
	0xaa, 0x04, 0x70, 0xcf, 0x35, 0xb0, 0xfa, 0xfd, 0xd8, 0xc2, 0x1c, 0xc3, 0x07, 0xa8, 0xc9, 0x8f,
	0x48, 0x0b, 0xe9, 0x3d, 0xed, 0xb3, 0xb4, 0x3a, 0x7f, 0xaa, 0xc0, 0x8b, 0xd4, 0xd7, 0x39, 0x76,
	0x13, 0x76, 0x6c, 0xab, 0x70, 0xf1, 0x55, 0xa8, 0x85, 0x9f, 0x04, 0xa1, 0x2a, 0x94, 0x6e, 0x8f,
	0x2c, 0xab, 0x7d, 0x02, 0xd5, 0xa0, 0x4c, 0xcf, 0x18, 0xdb, 0x0a, 0xf9, 0x49, 0x33, 0x59, 0xed,
	0xc2, 0xc5, 0x9f, 0x83, 0x5a, 0xe8, 0xab, 0xa3, 0x3a, 0xcc, 0xbd, 0xe7, 0xbc, 0xeb, 0xb8, 0xcf,
	0x9c, 0xf6, 0x09, 0x34, 0x07, 0xc5, 0x1b, 0x96, 0xd5, 0x56, 0x50, 0x13, 0x6a, 0xdb, 0x81, 0x87,
	0x75, 0x12, 0x64, 0xb5, 0x0b, 0xa8, 0x05, 0xf0, 0x8e, 0xe9, 0x07, 0xae, 0x67, 0xf6, 0x75, 0xab,
	0x5d, 0xbc, 0xf8, 0x21, 0xb4, 0xe4, 0xea, 0x30, 0xd4, 0x20, 0x7b, 0x61, 0x70, 0xeb, 0x03, 0xd3,
	0x0f, 0xda, 0x27, 0x48, 0xfb, 0xfb, 0x6e, 0xf0, 0xc0, 0xc3, 0x3e, 0x76, 0x82, 0xb6, 0x82, 0x00,
	0x2a, 0x5f, 0x77, 0x36, 0x4d, 0xff, 0x49, 0xbb, 0x80, 0x16, 0xb9, 0xe3, 0xa5, 0x5b, 0x5b, 0xbc,
	0xdc, 0xaa, 0x5d, 0x24, 0xdd, 0xc3, 0xa7, 0x12, 0x6a, 0x43, 0x23, 0x6c, 0x72, 0xe7, 0xc1, 0x7b,
	0xed, 0x32, 0xa3, 0x9e, 0xfc, 0xac, 0x5c, 0x34, 0xa0, 0x9d, 0x2c, 0x5e, 0x26, 0x63, 0xb2, 0x49,
	0x84, 0xa0, 0xf6, 0x09, 0x32, 0x33, 0x5e, 0x45, 0xde, 0x56, 0xd0, 0x3c, 0xd4, 0x63, 0xf5, 0xd8,
	0xed, 0x02, 0x01, 0xdc, 0xf1, 0x86, 0x7d, 0xce, 0x3e, 0x46, 0x02, 0xe5, 0x2d, 0x59, 0x89, 0xd2,
	0xc5, 0x9b, 0x50, 0x15, 0x07, 0x62, 0xa4, 0x29, 0x5f, 0x22, 0xf2, 0xd8, 0x3e, 0x81, 0x16, 0xa0,
	0x29, 0x5d, 0xab, 0xd4, 0x56, 0x10, 0x82, 0x96, 0x7c, 0x09, 0x5a, 0xbb, 0x70, 0x71, 0x1d, 0x20,
	0x3a, 0x31, 0x22, 0xe4, 0x6c, 0x39, 0xfb, 0xba, 0x65, 0x1a, 0x8c, 0x36, 0xf2, 0x8a, 0xac, 0x2e,
	0x5d, 0x1d, 0x16, 0x59, 0xb7, 0x0b, 0x17, 0xdf, 0x82, 0xaa, 0xc8, 0xe1, 0x13, 0xb8, 0x86, 0x6d,
	0x77, 0x1f, 0x33, 0xce, 0x6c, 0xe3, 0x80, 0xf1, 0xf1, 0x86, 0x8d, 0x1d, 0xa3, 0x5d, 0x20, 0x64,
	0xb0, 0xdb, 0x40, 0x78, 0x26, 0xbb, 0x5d, 0x5c, 0xff, 0xcd, 0x73, 0x00, 0xac, 0x1a, 0xd9, 0x75,
	0x3d, 0x03, 0x0d, 0xe9, 0x57, 0x0a, 0x1b, 0xae, 0x3d, 0x74, 0x1d, 0x51, 0x22, 0xe9, 0xa3, 0x2b,
	0x29, 0x3f, 0x8c, 0x3d, 0xa6, 0x9b, 0xf2, 0xd5, 0xe9, 0xbe, 0x94, 0xd3, 0x23, 0xd1, 0x5c, 0x3d,
	0x81, 0x9e, 0x52, 0x8c, 0x0f, 0x4d, 0x1b, 0x3f, 0x34, 0xfb, 0x4f, 0x44, 0xe5, 0xe8, 0xfa, 0xb8,
	0xeb, 0xc9, 0x12, 0x8d, 0x05, 0xce, 0x0b, 0x39, 0x38, 0xb7, 0x03, 0xcf, 0x74, 0x06, 0x62, 0x27,
	0x57, 0x4f, 0xa0, 0x51, 0xe2, 0x82, 0x34, 0x81, 0xf4, 0x0b, 0xd3, 0xdd, 0x89, 0x76, 0x54, 0xb4,
	0x43, 0x98, 0x4f, 0xdc, 0x4d, 0x89, 0x5e, 0xcb, 0xbb, 0x4f, 0x26, 0xeb, 0x2e, 0xcd, 0xee, 0xa5,
	0x29, 0x5b, 0x87, 0x18, 0x6d, 0x68, 0xc9, 0x97, 0x2a, 0xa2, 0x57, 0xf3, 0x87, 0x48, 0xdd, 0x74,
	0xd5, 0x7d, 0x6d, 0xba, 0xc6, 0x21, 0xba, 0x6f, 0x33, 0x91, 0x9e, 0x8c, 0x2e, 0xf3, 0x8a, 0xb1,
	0xee, 0x78, 0x97, 0x4a, 0x3d, 0x81, 0x0c, 0xb2, 0xdf, 0x27, 0x6e, 0xe5, 0x42, 0x6b, 0x79, 0xe9,
	0xb2, 0xec, 0xeb, 0xbb, 0x26, 0x63, 0xf9, 0x76, 0x52, 0x31, 0xc7, 0xcd, 0x22, 0x75, 0x05, 0xe0,
	0x61, 0x66, 0x11, 0x43, 0x31, 0x7e, 0x16, 0x47, 0xc0, 0x32, 0x64, 0xe7, 0x46, 0x19, 0x17, 0xdb,
	0xa4, 0xc5, 0x3c, 0x3a, 0xb4, 0xc9, 0xbf, 0x07, 0x67, 0x32, 0xc6, 0x03, 0xaa, 0xc8, 0xc9, 0x52,
	0xfd, 0xcb, 0xb9, 0xc5, 0x7e, 0xd9, 0x17, 0x93, 0x75, 0xaf, 0x4c, 0xdf, 0x21, 0x2e, 0xe7, 0xf2,
	0xad, 0x57, 0x79, 0x2c, 0xcb, 0xbc, 0xad, 0x2b, 0x4f, 0xce, 0xb3, 0x2f, 0xd2, 0x52, 0x4f, 0xa0,
	0x6f, 0x48, 0x5b, 0x03, 0x5a, 0xcd, 0x17, 0x0f, 0xd9, 0x8d, 0x9e, 0xbc, 0x86, 0xbf, 0x0c, 0x88,
	0x69, 0xb3, 0xb3, 0x6b, 0x0e, 0x46, 0x9e, 0xce, 0x44, 0x3c, 0xdf, 0x18, 0xa6, 0x1b, 0x0b, 0x54,
	0xaf, 0x1f, 0xaa, 0x4f, 0x38, 0xb5, 0x3e, 0xc0, 0x1d, 0x1c, 0xdc, 0xa3, 0x37, 0xf9, 0xf8, 0xe9,
	0x99, 0x45, 0x76, 0x9f, 0x37, 0x11, 0xe8, 0x5e, 0x99, 0xa2, 0x65, 0x88, 0x64, 0x17, 0xea, 0x77,
	0x70, 0xc0, 0xb3, 0xc2, 0x3e, 0x1a, 0xd3, 0x57, 0xb4, 0x11, 0x68, 0x2e, 0x4e, 0xd3, 0x34, 0x6e,
	0x70, 0x13, 0xf7, 0x81, 0xa1, 0x31, 0xac, 0x4e, 0xdf, 0x54, 0x96, 0x67, 0x70, 0x73, 0x2e, 0x19,
	0x63, 0x33, 0xa3, 0x8e, 0xdf, 0x3b, 0x58, 0xb7, 0x82, 0xbd, 0xdc, 0x99, 0xc5, 0xda, 0x4c, 0x9a,
	0x99, 0xd4, 0x34, 0xc4, 0x63, 0xc2, 0x22, 0xd3, 0x53, 0xf9, 0x34, 0xec, 0x6a, 0xde, 0x20, 0xe9,
	0xb6, 0x53, 0x8b, 0xe4, 0x77, 0x60, 0x29, 0xeb, 0x06, 0x31, 0x74, 0xf5, 0xd0, 0xb7, 0x8d, 0x4d,
	0xc6, 0x85, 0x61, 0x61, 0xd3, 0x73, 0x87, 0xf2, 0xa4, 0x2e, 0xe7, 0x4c, 0x2a, 0xd5, 0x72, 0x6a,
	0x34, 0xbf, 0x00, 0x0d, 0x11, 0xbc, 0xd0, 0x23, 0x92, 0xbc, 0xb5, 0x8f, 0x37, 0x9a, 0x7a, 0xf0,
	0xc7, 0x30, 0x9f, 0x38, 0x47, 0xcd, 0x13, 0xba, 0xec, 0xe3, 0xd6, 0xc9, 0x18, 0x7e, 0x11, 0x10,
	0xbd, 0x64, 0x4e, 0xe6, 0x47, 0x9e, 0x8f, 0x96, 0x6e, 0x2a, 0x10, 0x5d, 0x3d, 0x44, 0x8f, 0x50,
	0xf2, 0x7e, 0x55, 0x81, 0xe5, 0xcc, 0x03, 0xcb, 0xb4, 0x95, 0xe2, 0x49, 0xfe, 0x31, 0x27, 0xab,
	0xdd, 0xd7, 0x0f, 0xd5, 0x27, 0x24, 0x62, 0x00, 0x8d, 0x78, 0x86, 0x1b, 0xe5, 0x7c, 0x84, 0x90,
	0x91, 0x71, 0x4f, 0xeb, 0x59, 0x56, 0xd3, 0x10, 0xd1, 0x63, 0x98, 0x4f, 0x1c, 0x48, 0xe4, 0x31,
	0x33, 0xfb, 0xdc, 0x62, 0x2a, 0x6f, 0x20, 0x75, 0x0c, 0x91, 0xe7, 0x0d, 0xe4, 0x9d, 0x57, 0x4c,
	0xa3, 0xc4, 0x4d, 0x29, 0xbf, 0x87, 0xc6, 0x2c, 0x43, 0x32, 0xa3, 0xd8, 0x7d, 0x75, 0xaa, 0xb6,
	0xe1, 0x9a, 0xfd, 0x96, 0x02, 0x9d, 0xbc, 0x74, 0x1a, 0x7a, 0x23, 0xd7, 0xa2, 0x8e, 0x8b, 0x95,
	0xbb, 0x5f, 0x3c, 0x6c, 0xb7, 0xb8, 0x4f, 0x2a, 0xa7, 0xc7, 0x72, 0x5d, 0xe0, 0xac, 0x24, 0xda,
	0xe4, 0x95, 0xfd, 0x16, 0x2d, 0xe9, 0x88, 0x32, 0x66, 0x79, 0x2b, 0x9b, 0x95, 0x56, 0x9b, 0x3c,
	0xfa, 0x37, 0xa0, 0x1e, 0xcb, 0xa1, 0xe5, 0x79, 0x1a, 0xe9, 0x34, 0xdb, 0xe4, 0x91, 0x1f, 0x01,
	0x44, 0xb9, 0x33, 0xf4, 0xf2, 0x38, 0xa2, 0x8f, 0x6a, 0xfe, 0xb8, 0xf3, 0x34, 0xc9, 0xfc, 0xc9,
	0x89, 0xb5, 0x43, 0x61, 0x10, 0x81, 0xdb, 0x04, 0x0c, 0x89, 0x80, 0x6d, 0x22, 0x86, 0x7d, 0xe8,
	0xe6, 0xa7, 0x6f, 0xd0, 0x9b, 0x63, 0x4e, 0xbe, 0xc6, 0x0a, 0xf1, 0x24, 0xbc, 0xeb, 0x3f, 0x5a,
	0x84, 0x5a, 0xa4, 0xa2, 0xff, 0x1f, 0x8a, 0x3f, 0xbf, 0x50, 0xfc, 0x31, 0xcc, 0x27, 0x6e, 0x19,
	0xcc, 0x93, 0xa1, 0xec, 0xcb, 0x08, 0xa7, 0x8a, 0x22, 0xe5, 0x0b, 0xfa, 0xf2, 0xec, 0x4e, 0xe6,
	0x35, 0x7e, 0x93, 0xc7, 0xff, 0x26, 0xbb, 0x1b, 0x34, 0xfc, 0x66, 0xe4, 0x95, 0x31, 0x05, 0xc8,
	0xf2, 0x95, 0x08, 0x9f, 0x96, 0x08, 0xf5, 0x7f, 0x47, 0xb6, 0xe0, 0x31, 0xcc, 0x27, 0xee, 0x36,
	0xca, 0x93, 0xa4, 0xec, 0x2b, 0x90, 0x26, 0x63, 0xf8, 0x98, 0x83, 0xdb, 0x3d, 0x58, 0xcc, 0xb8,
	0x05, 0x06, 0x5d, 0xc9, 0x4f, 0x1a, 0x64, 0x5f, 0x18, 0x33, 0xcd, 0xc4, 0x9a, 0x92, 0x32, 0xe7,
	0x6d, 0x9d, 0x59, 0x7f, 0x48, 0xd0, 0x5d, 0x9b, 0xf6, 0xff, 0x0b, 0xc2, 0x89, 0xbd, 0x0f, 0x15,
	0x76, 0x75, 0x11, 0xca, 0x3d, 0x82, 0x8f, 0x5d, 0x6c, 0xd4, 0x9d, 0x7c, 0x01, 0x92, 0x3f, 0xb2,
	0x02, 0x32, 0x8f, 0x1e, 0xb4, 0x18, 0x28, 0x5c, 0xac, 0x63, 0x46, 0xf0, 0x3e, 0x94, 0xe9, 0xb6,
	0x80, 0x72, 0xea, 0x5d, 0xe3, 0x17, 0x15, 0x75, 0xa7, 0xb9, 0x9b, 0x28, 0xa2, 0xbc, 0x4e, 0xfb,
	0xb2, 0xcc, 0xfd, 0x71, 0x0f, 0x7f, 0x45, 0x41, 0x3d, 0x68, 0x32, 0x04, 0x62, 0x65, 0x8e, 0x7b,
	0x06, 0x03, 0x58, 0x8c, 0xcd, 0xe0, 0x79, 0xa1, 0xb9, 0xa2, 0xfc, 0x1f, 0xc9, 0xcc, 0xfc, 0x12,
	0xbd, 0x34, 0x28, 0xf9, 0xa1, 0x2b, 0xba, 0x72, 0xd8, 0x2f, 0x76, 0xbb, 0x57, 0x0f, 0xd1, 0x23,
	0xc4, 0xbe, 0x03, 0xed, 0x64, 0xad, 0x3b, 0xba, 0x94, 0x6f, 0x77, 0x8e, 0xe2, 0x63, 0xa1, 0xfb,
	0x50, 0x61, 0x95, 0x7c, 0x79, 0x4a, 0x2a, 0xd5, 0xf9, 0x4d, 0x1c, 0xef, 0xe6, 0x17, 0xbe, 0xb9,
	0x3e, 0x30, 0x83, 0xbd, 0xd1, 0x0e, 0x79, 0x73, 0x99, 0x35, 0xbe, 0x64, 0xba, 0xfc, 0xd7, 0x65,
	0xc1, 0xdb, 0xcb, 0xb4, 0xff, 0x65, 0x8a, 0x62, 0xb8, 0xb3, 0x53, 0xa1, 0x8f, 0xaf, 0xff, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xe2, 0xc0, 0x55, 0x17, 0xd6, 0x6b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryCoordClient is the client API for QueryCoord service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryCoordClient interface {
	GetComponentStates(ctx context.Context, in *milvuspb.GetComponentStatesRequest, opts ...grpc.CallOption) (*milvuspb.ComponentStates, error)
	GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	ShowCollections(ctx context.Context, in *ShowCollectionsRequest, opts ...grpc.CallOption) (*ShowCollectionsResponse, error)
	ShowPartitions(ctx context.Context, in *ShowPartitionsRequest, opts ...grpc.CallOption) (*ShowPartitionsResponse, error)
	LoadPartitions(ctx context.Context, in *LoadPartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ReleasePartitions(ctx context.Context, in *ReleasePartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	LoadCollection(ctx context.Context, in *LoadCollectionRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ReleaseCollection(ctx context.Context, in *ReleaseCollectionRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	SyncNewCreatedPartition(ctx context.Context, in *SyncNewCreatedPartitionRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	GetPartitionStates(ctx context.Context, in *GetPartitionStatesRequest, opts ...grpc.CallOption) (*GetPartitionStatesResponse, error)
	GetSegmentInfo(ctx context.Context, in *GetSegmentInfoRequest, opts ...grpc.CallOption) (*GetSegmentInfoResponse, error)
	LoadBalance(ctx context.Context, in *LoadBalanceRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ShowConfigurations(ctx context.Context, in *internalpb.ShowConfigurationsRequest, opts ...grpc.CallOption) (*internalpb.ShowConfigurationsResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
	GetMetrics(ctx context.Context, in *milvuspb.GetMetricsRequest, opts ...grpc.CallOption) (*milvuspb.GetMetricsResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+23+--+Multiple+memory+replication+design
	GetReplicas(ctx context.Context, in *milvuspb.GetReplicasRequest, opts ...grpc.CallOption) (*milvuspb.GetReplicasResponse, error)
	GetShardLeaders(ctx context.Context, in *GetShardLeadersRequest, opts ...grpc.CallOption) (*GetShardLeadersResponse, error)
	CheckHealth(ctx context.Context, in *milvuspb.CheckHealthRequest, opts ...grpc.CallOption) (*milvuspb.CheckHealthResponse, error)
	CreateResourceGroup(ctx context.Context, in *milvuspb.CreateResourceGroupRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	UpdateResourceGroups(ctx context.Context, in *UpdateResourceGroupsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	DropResourceGroup(ctx context.Context, in *milvuspb.DropResourceGroupRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	TransferNode(ctx context.Context, in *milvuspb.TransferNodeRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	TransferReplica(ctx context.Context, in *TransferReplicaRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ListResourceGroups(ctx context.Context, in *milvuspb.ListResourceGroupsRequest, opts ...grpc.CallOption) (*milvuspb.ListResourceGroupsResponse, error)
	DescribeResourceGroup(ctx context.Context, in *DescribeResourceGroupRequest, opts ...grpc.CallOption) (*DescribeResourceGroupResponse, error)
	// ops interfaces
	ListCheckers(ctx context.Context, in *ListCheckersRequest, opts ...grpc.CallOption) (*ListCheckersResponse, error)
	ActivateChecker(ctx context.Context, in *ActivateCheckerRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	DeactivateChecker(ctx context.Context, in *DeactivateCheckerRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ListQueryNode(ctx context.Context, in *ListQueryNodeRequest, opts ...grpc.CallOption) (*ListQueryNodeResponse, error)
	GetQueryNodeDistribution(ctx context.Context, in *GetQueryNodeDistributionRequest, opts ...grpc.CallOption) (*GetQueryNodeDistributionResponse, error)
	SuspendBalance(ctx context.Context, in *SuspendBalanceRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ResumeBalance(ctx context.Context, in *ResumeBalanceRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	SuspendNode(ctx context.Context, in *SuspendNodeRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ResumeNode(ctx context.Context, in *ResumeNodeRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	TransferSegment(ctx context.Context, in *TransferSegmentRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	TransferChannel(ctx context.Context, in *TransferChannelRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	CheckQueryNodeDistribution(ctx context.Context, in *CheckQueryNodeDistributionRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
}

type queryCoordClient struct {
	cc *grpc.ClientConn
}

func NewQueryCoordClient(cc *grpc.ClientConn) QueryCoordClient {
	return &queryCoordClient{cc}
}

func (c *queryCoordClient) GetComponentStates(ctx context.Context, in *milvuspb.GetComponentStatesRequest, opts ...grpc.CallOption) (*milvuspb.ComponentStates, error) {
	out := new(milvuspb.ComponentStates)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetComponentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetTimeTickChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetStatisticsChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ShowCollections(ctx context.Context, in *ShowCollectionsRequest, opts ...grpc.CallOption) (*ShowCollectionsResponse, error) {
	out := new(ShowCollectionsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ShowCollections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ShowPartitions(ctx context.Context, in *ShowPartitionsRequest, opts ...grpc.CallOption) (*ShowPartitionsResponse, error) {
	out := new(ShowPartitionsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ShowPartitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) LoadPartitions(ctx context.Context, in *LoadPartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/LoadPartitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ReleasePartitions(ctx context.Context, in *ReleasePartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ReleasePartitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) LoadCollection(ctx context.Context, in *LoadCollectionRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/LoadCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ReleaseCollection(ctx context.Context, in *ReleaseCollectionRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ReleaseCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) SyncNewCreatedPartition(ctx context.Context, in *SyncNewCreatedPartitionRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/SyncNewCreatedPartition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetPartitionStates(ctx context.Context, in *GetPartitionStatesRequest, opts ...grpc.CallOption) (*GetPartitionStatesResponse, error) {
	out := new(GetPartitionStatesResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetPartitionStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetSegmentInfo(ctx context.Context, in *GetSegmentInfoRequest, opts ...grpc.CallOption) (*GetSegmentInfoResponse, error) {
	out := new(GetSegmentInfoResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetSegmentInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) LoadBalance(ctx context.Context, in *LoadBalanceRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/LoadBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ShowConfigurations(ctx context.Context, in *internalpb.ShowConfigurationsRequest, opts ...grpc.CallOption) (*internalpb.ShowConfigurationsResponse, error) {
	out := new(internalpb.ShowConfigurationsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ShowConfigurations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetMetrics(ctx context.Context, in *milvuspb.GetMetricsRequest, opts ...grpc.CallOption) (*milvuspb.GetMetricsResponse, error) {
	out := new(milvuspb.GetMetricsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetReplicas(ctx context.Context, in *milvuspb.GetReplicasRequest, opts ...grpc.CallOption) (*milvuspb.GetReplicasResponse, error) {
	out := new(milvuspb.GetReplicasResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetReplicas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetShardLeaders(ctx context.Context, in *GetShardLeadersRequest, opts ...grpc.CallOption) (*GetShardLeadersResponse, error) {
	out := new(GetShardLeadersResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetShardLeaders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) CheckHealth(ctx context.Context, in *milvuspb.CheckHealthRequest, opts ...grpc.CallOption) (*milvuspb.CheckHealthResponse, error) {
	out := new(milvuspb.CheckHealthResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/CheckHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) CreateResourceGroup(ctx context.Context, in *milvuspb.CreateResourceGroupRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/CreateResourceGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) UpdateResourceGroups(ctx context.Context, in *UpdateResourceGroupsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/UpdateResourceGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) DropResourceGroup(ctx context.Context, in *milvuspb.DropResourceGroupRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/DropResourceGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) TransferNode(ctx context.Context, in *milvuspb.TransferNodeRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/TransferNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) TransferReplica(ctx context.Context, in *TransferReplicaRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/TransferReplica", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ListResourceGroups(ctx context.Context, in *milvuspb.ListResourceGroupsRequest, opts ...grpc.CallOption) (*milvuspb.ListResourceGroupsResponse, error) {
	out := new(milvuspb.ListResourceGroupsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ListResourceGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) DescribeResourceGroup(ctx context.Context, in *DescribeResourceGroupRequest, opts ...grpc.CallOption) (*DescribeResourceGroupResponse, error) {
	out := new(DescribeResourceGroupResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/DescribeResourceGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ListCheckers(ctx context.Context, in *ListCheckersRequest, opts ...grpc.CallOption) (*ListCheckersResponse, error) {
	out := new(ListCheckersResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ListCheckers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ActivateChecker(ctx context.Context, in *ActivateCheckerRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ActivateChecker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) DeactivateChecker(ctx context.Context, in *DeactivateCheckerRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/DeactivateChecker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ListQueryNode(ctx context.Context, in *ListQueryNodeRequest, opts ...grpc.CallOption) (*ListQueryNodeResponse, error) {
	out := new(ListQueryNodeResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ListQueryNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetQueryNodeDistribution(ctx context.Context, in *GetQueryNodeDistributionRequest, opts ...grpc.CallOption) (*GetQueryNodeDistributionResponse, error) {
	out := new(GetQueryNodeDistributionResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetQueryNodeDistribution", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) SuspendBalance(ctx context.Context, in *SuspendBalanceRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/SuspendBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ResumeBalance(ctx context.Context, in *ResumeBalanceRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ResumeBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) SuspendNode(ctx context.Context, in *SuspendNodeRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/SuspendNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ResumeNode(ctx context.Context, in *ResumeNodeRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ResumeNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) TransferSegment(ctx context.Context, in *TransferSegmentRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/TransferSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) TransferChannel(ctx context.Context, in *TransferChannelRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/TransferChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) CheckQueryNodeDistribution(ctx context.Context, in *CheckQueryNodeDistributionRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/CheckQueryNodeDistribution", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryCoordServer is the server API for QueryCoord service.
type QueryCoordServer interface {
	GetComponentStates(context.Context, *milvuspb.GetComponentStatesRequest) (*milvuspb.ComponentStates, error)
	GetTimeTickChannel(context.Context, *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(context.Context, *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error)
	ShowCollections(context.Context, *ShowCollectionsRequest) (*ShowCollectionsResponse, error)
	ShowPartitions(context.Context, *ShowPartitionsRequest) (*ShowPartitionsResponse, error)
	LoadPartitions(context.Context, *LoadPartitionsRequest) (*commonpb.Status, error)
	ReleasePartitions(context.Context, *ReleasePartitionsRequest) (*commonpb.Status, error)
	LoadCollection(context.Context, *LoadCollectionRequest) (*commonpb.Status, error)
	ReleaseCollection(context.Context, *ReleaseCollectionRequest) (*commonpb.Status, error)
	SyncNewCreatedPartition(context.Context, *SyncNewCreatedPartitionRequest) (*commonpb.Status, error)
	GetPartitionStates(context.Context, *GetPartitionStatesRequest) (*GetPartitionStatesResponse, error)
	GetSegmentInfo(context.Context, *GetSegmentInfoRequest) (*GetSegmentInfoResponse, error)
	LoadBalance(context.Context, *LoadBalanceRequest) (*commonpb.Status, error)
	ShowConfigurations(context.Context, *internalpb.ShowConfigurationsRequest) (*internalpb.ShowConfigurationsResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
	GetMetrics(context.Context, *milvuspb.GetMetricsRequest) (*milvuspb.GetMetricsResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+23+--+Multiple+memory+replication+design
	GetReplicas(context.Context, *milvuspb.GetReplicasRequest) (*milvuspb.GetReplicasResponse, error)
	GetShardLeaders(context.Context, *GetShardLeadersRequest) (*GetShardLeadersResponse, error)
	CheckHealth(context.Context, *milvuspb.CheckHealthRequest) (*milvuspb.CheckHealthResponse, error)
	CreateResourceGroup(context.Context, *milvuspb.CreateResourceGroupRequest) (*commonpb.Status, error)
	UpdateResourceGroups(context.Context, *UpdateResourceGroupsRequest) (*commonpb.Status, error)
	DropResourceGroup(context.Context, *milvuspb.DropResourceGroupRequest) (*commonpb.Status, error)
	TransferNode(context.Context, *milvuspb.TransferNodeRequest) (*commonpb.Status, error)
	TransferReplica(context.Context, *TransferReplicaRequest) (*commonpb.Status, error)
	ListResourceGroups(context.Context, *milvuspb.ListResourceGroupsRequest) (*milvuspb.ListResourceGroupsResponse, error)
	DescribeResourceGroup(context.Context, *DescribeResourceGroupRequest) (*DescribeResourceGroupResponse, error)
	// ops interfaces
	ListCheckers(context.Context, *ListCheckersRequest) (*ListCheckersResponse, error)
	ActivateChecker(context.Context, *ActivateCheckerRequest) (*commonpb.Status, error)
	DeactivateChecker(context.Context, *DeactivateCheckerRequest) (*commonpb.Status, error)
	ListQueryNode(context.Context, *ListQueryNodeRequest) (*ListQueryNodeResponse, error)
	GetQueryNodeDistribution(context.Context, *GetQueryNodeDistributionRequest) (*GetQueryNodeDistributionResponse, error)
	SuspendBalance(context.Context, *SuspendBalanceRequest) (*commonpb.Status, error)
	ResumeBalance(context.Context, *ResumeBalanceRequest) (*commonpb.Status, error)
	SuspendNode(context.Context, *SuspendNodeRequest) (*commonpb.Status, error)
	ResumeNode(context.Context, *ResumeNodeRequest) (*commonpb.Status, error)
	TransferSegment(context.Context, *TransferSegmentRequest) (*commonpb.Status, error)
	TransferChannel(context.Context, *TransferChannelRequest) (*commonpb.Status, error)
	CheckQueryNodeDistribution(context.Context, *CheckQueryNodeDistributionRequest) (*commonpb.Status, error)
}

// UnimplementedQueryCoordServer can be embedded to have forward compatible implementations.
type UnimplementedQueryCoordServer struct {
}

func (*UnimplementedQueryCoordServer) GetComponentStates(ctx context.Context, req *milvuspb.GetComponentStatesRequest) (*milvuspb.ComponentStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComponentStates not implemented")
}
func (*UnimplementedQueryCoordServer) GetTimeTickChannel(ctx context.Context, req *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeTickChannel not implemented")
}
func (*UnimplementedQueryCoordServer) GetStatisticsChannel(ctx context.Context, req *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatisticsChannel not implemented")
}
func (*UnimplementedQueryCoordServer) ShowCollections(ctx context.Context, req *ShowCollectionsRequest) (*ShowCollectionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowCollections not implemented")
}
func (*UnimplementedQueryCoordServer) ShowPartitions(ctx context.Context, req *ShowPartitionsRequest) (*ShowPartitionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowPartitions not implemented")
}
func (*UnimplementedQueryCoordServer) LoadPartitions(ctx context.Context, req *LoadPartitionsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadPartitions not implemented")
}
func (*UnimplementedQueryCoordServer) ReleasePartitions(ctx context.Context, req *ReleasePartitionsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleasePartitions not implemented")
}
func (*UnimplementedQueryCoordServer) LoadCollection(ctx context.Context, req *LoadCollectionRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadCollection not implemented")
}
func (*UnimplementedQueryCoordServer) ReleaseCollection(ctx context.Context, req *ReleaseCollectionRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseCollection not implemented")
}
func (*UnimplementedQueryCoordServer) SyncNewCreatedPartition(ctx context.Context, req *SyncNewCreatedPartitionRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncNewCreatedPartition not implemented")
}
func (*UnimplementedQueryCoordServer) GetPartitionStates(ctx context.Context, req *GetPartitionStatesRequest) (*GetPartitionStatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPartitionStates not implemented")
}
func (*UnimplementedQueryCoordServer) GetSegmentInfo(ctx context.Context, req *GetSegmentInfoRequest) (*GetSegmentInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSegmentInfo not implemented")
}
func (*UnimplementedQueryCoordServer) LoadBalance(ctx context.Context, req *LoadBalanceRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadBalance not implemented")
}
func (*UnimplementedQueryCoordServer) ShowConfigurations(ctx context.Context, req *internalpb.ShowConfigurationsRequest) (*internalpb.ShowConfigurationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowConfigurations not implemented")
}
func (*UnimplementedQueryCoordServer) GetMetrics(ctx context.Context, req *milvuspb.GetMetricsRequest) (*milvuspb.GetMetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetrics not implemented")
}
func (*UnimplementedQueryCoordServer) GetReplicas(ctx context.Context, req *milvuspb.GetReplicasRequest) (*milvuspb.GetReplicasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReplicas not implemented")
}
func (*UnimplementedQueryCoordServer) GetShardLeaders(ctx context.Context, req *GetShardLeadersRequest) (*GetShardLeadersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShardLeaders not implemented")
}
func (*UnimplementedQueryCoordServer) CheckHealth(ctx context.Context, req *milvuspb.CheckHealthRequest) (*milvuspb.CheckHealthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckHealth not implemented")
}
func (*UnimplementedQueryCoordServer) CreateResourceGroup(ctx context.Context, req *milvuspb.CreateResourceGroupRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateResourceGroup not implemented")
}
func (*UnimplementedQueryCoordServer) UpdateResourceGroups(ctx context.Context, req *UpdateResourceGroupsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateResourceGroups not implemented")
}
func (*UnimplementedQueryCoordServer) DropResourceGroup(ctx context.Context, req *milvuspb.DropResourceGroupRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropResourceGroup not implemented")
}
func (*UnimplementedQueryCoordServer) TransferNode(ctx context.Context, req *milvuspb.TransferNodeRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferNode not implemented")
}
func (*UnimplementedQueryCoordServer) TransferReplica(ctx context.Context, req *TransferReplicaRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferReplica not implemented")
}
func (*UnimplementedQueryCoordServer) ListResourceGroups(ctx context.Context, req *milvuspb.ListResourceGroupsRequest) (*milvuspb.ListResourceGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResourceGroups not implemented")
}
func (*UnimplementedQueryCoordServer) DescribeResourceGroup(ctx context.Context, req *DescribeResourceGroupRequest) (*DescribeResourceGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeResourceGroup not implemented")
}
func (*UnimplementedQueryCoordServer) ListCheckers(ctx context.Context, req *ListCheckersRequest) (*ListCheckersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCheckers not implemented")
}
func (*UnimplementedQueryCoordServer) ActivateChecker(ctx context.Context, req *ActivateCheckerRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateChecker not implemented")
}
func (*UnimplementedQueryCoordServer) DeactivateChecker(ctx context.Context, req *DeactivateCheckerRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeactivateChecker not implemented")
}
func (*UnimplementedQueryCoordServer) ListQueryNode(ctx context.Context, req *ListQueryNodeRequest) (*ListQueryNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListQueryNode not implemented")
}
func (*UnimplementedQueryCoordServer) GetQueryNodeDistribution(ctx context.Context, req *GetQueryNodeDistributionRequest) (*GetQueryNodeDistributionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQueryNodeDistribution not implemented")
}
func (*UnimplementedQueryCoordServer) SuspendBalance(ctx context.Context, req *SuspendBalanceRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SuspendBalance not implemented")
}
func (*UnimplementedQueryCoordServer) ResumeBalance(ctx context.Context, req *ResumeBalanceRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResumeBalance not implemented")
}
func (*UnimplementedQueryCoordServer) SuspendNode(ctx context.Context, req *SuspendNodeRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SuspendNode not implemented")
}
func (*UnimplementedQueryCoordServer) ResumeNode(ctx context.Context, req *ResumeNodeRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResumeNode not implemented")
}
func (*UnimplementedQueryCoordServer) TransferSegment(ctx context.Context, req *TransferSegmentRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferSegment not implemented")
}
func (*UnimplementedQueryCoordServer) TransferChannel(ctx context.Context, req *TransferChannelRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferChannel not implemented")
}
func (*UnimplementedQueryCoordServer) CheckQueryNodeDistribution(ctx context.Context, req *CheckQueryNodeDistributionRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckQueryNodeDistribution not implemented")
}

func RegisterQueryCoordServer(s *grpc.Server, srv QueryCoordServer) {
	s.RegisterService(&_QueryCoord_serviceDesc, srv)
}

func _QueryCoord_GetComponentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.GetComponentStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetComponentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetComponentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetComponentStates(ctx, req.(*milvuspb.GetComponentStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetTimeTickChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetTimeTickChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetTimeTickChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetTimeTickChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetTimeTickChannel(ctx, req.(*internalpb.GetTimeTickChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetStatisticsChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetStatisticsChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetStatisticsChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetStatisticsChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetStatisticsChannel(ctx, req.(*internalpb.GetStatisticsChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ShowCollections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowCollectionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ShowCollections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ShowCollections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ShowCollections(ctx, req.(*ShowCollectionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ShowPartitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowPartitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ShowPartitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ShowPartitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ShowPartitions(ctx, req.(*ShowPartitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_LoadPartitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadPartitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).LoadPartitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/LoadPartitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).LoadPartitions(ctx, req.(*LoadPartitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ReleasePartitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleasePartitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ReleasePartitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ReleasePartitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ReleasePartitions(ctx, req.(*ReleasePartitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_LoadCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).LoadCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/LoadCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).LoadCollection(ctx, req.(*LoadCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ReleaseCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ReleaseCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ReleaseCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ReleaseCollection(ctx, req.(*ReleaseCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_SyncNewCreatedPartition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncNewCreatedPartitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).SyncNewCreatedPartition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/SyncNewCreatedPartition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).SyncNewCreatedPartition(ctx, req.(*SyncNewCreatedPartitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetPartitionStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPartitionStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetPartitionStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetPartitionStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetPartitionStates(ctx, req.(*GetPartitionStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetSegmentInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSegmentInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetSegmentInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetSegmentInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetSegmentInfo(ctx, req.(*GetSegmentInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_LoadBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).LoadBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/LoadBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).LoadBalance(ctx, req.(*LoadBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ShowConfigurations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.ShowConfigurationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ShowConfigurations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ShowConfigurations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ShowConfigurations(ctx, req.(*internalpb.ShowConfigurationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.GetMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetMetrics(ctx, req.(*milvuspb.GetMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetReplicas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.GetReplicasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetReplicas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetReplicas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetReplicas(ctx, req.(*milvuspb.GetReplicasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetShardLeaders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShardLeadersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetShardLeaders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetShardLeaders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetShardLeaders(ctx, req.(*GetShardLeadersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_CheckHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.CheckHealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).CheckHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/CheckHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).CheckHealth(ctx, req.(*milvuspb.CheckHealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_CreateResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.CreateResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).CreateResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/CreateResourceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).CreateResourceGroup(ctx, req.(*milvuspb.CreateResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_UpdateResourceGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateResourceGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).UpdateResourceGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/UpdateResourceGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).UpdateResourceGroups(ctx, req.(*UpdateResourceGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_DropResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.DropResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).DropResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/DropResourceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).DropResourceGroup(ctx, req.(*milvuspb.DropResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_TransferNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.TransferNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).TransferNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/TransferNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).TransferNode(ctx, req.(*milvuspb.TransferNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_TransferReplica_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferReplicaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).TransferReplica(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/TransferReplica",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).TransferReplica(ctx, req.(*TransferReplicaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ListResourceGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.ListResourceGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ListResourceGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ListResourceGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ListResourceGroups(ctx, req.(*milvuspb.ListResourceGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_DescribeResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).DescribeResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/DescribeResourceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).DescribeResourceGroup(ctx, req.(*DescribeResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ListCheckers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCheckersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ListCheckers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ListCheckers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ListCheckers(ctx, req.(*ListCheckersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ActivateChecker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateCheckerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ActivateChecker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ActivateChecker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ActivateChecker(ctx, req.(*ActivateCheckerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_DeactivateChecker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeactivateCheckerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).DeactivateChecker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/DeactivateChecker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).DeactivateChecker(ctx, req.(*DeactivateCheckerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ListQueryNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListQueryNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ListQueryNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ListQueryNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ListQueryNode(ctx, req.(*ListQueryNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetQueryNodeDistribution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQueryNodeDistributionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetQueryNodeDistribution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetQueryNodeDistribution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetQueryNodeDistribution(ctx, req.(*GetQueryNodeDistributionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_SuspendBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SuspendBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).SuspendBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/SuspendBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).SuspendBalance(ctx, req.(*SuspendBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ResumeBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ResumeBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ResumeBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ResumeBalance(ctx, req.(*ResumeBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_SuspendNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SuspendNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).SuspendNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/SuspendNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).SuspendNode(ctx, req.(*SuspendNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ResumeNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ResumeNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ResumeNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ResumeNode(ctx, req.(*ResumeNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_TransferSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferSegmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).TransferSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/TransferSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).TransferSegment(ctx, req.(*TransferSegmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_TransferChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).TransferChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/TransferChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).TransferChannel(ctx, req.(*TransferChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_CheckQueryNodeDistribution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckQueryNodeDistributionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).CheckQueryNodeDistribution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/CheckQueryNodeDistribution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).CheckQueryNodeDistribution(ctx, req.(*CheckQueryNodeDistributionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueryCoord_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milvus.protov2.query.QueryCoord",
	HandlerType: (*QueryCoordServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetComponentStates",
			Handler:    _QueryCoord_GetComponentStates_Handler,
		},
		{
			MethodName: "GetTimeTickChannel",
			Handler:    _QueryCoord_GetTimeTickChannel_Handler,
		},
		{
			MethodName: "GetStatisticsChannel",
			Handler:    _QueryCoord_GetStatisticsChannel_Handler,
		},
		{
			MethodName: "ShowCollections",
			Handler:    _QueryCoord_ShowCollections_Handler,
		},
		{
			MethodName: "ShowPartitions",
			Handler:    _QueryCoord_ShowPartitions_Handler,
		},
		{
			MethodName: "LoadPartitions",
			Handler:    _QueryCoord_LoadPartitions_Handler,
		},
		{
			MethodName: "ReleasePartitions",
			Handler:    _QueryCoord_ReleasePartitions_Handler,
		},
		{
			MethodName: "LoadCollection",
			Handler:    _QueryCoord_LoadCollection_Handler,
		},
		{
			MethodName: "ReleaseCollection",
			Handler:    _QueryCoord_ReleaseCollection_Handler,
		},
		{
			MethodName: "SyncNewCreatedPartition",
			Handler:    _QueryCoord_SyncNewCreatedPartition_Handler,
		},
		{
			MethodName: "GetPartitionStates",
			Handler:    _QueryCoord_GetPartitionStates_Handler,
		},
		{
			MethodName: "GetSegmentInfo",
			Handler:    _QueryCoord_GetSegmentInfo_Handler,
		},
		{
			MethodName: "LoadBalance",
			Handler:    _QueryCoord_LoadBalance_Handler,
		},
		{
			MethodName: "ShowConfigurations",
			Handler:    _QueryCoord_ShowConfigurations_Handler,
		},
		{
			MethodName: "GetMetrics",
			Handler:    _QueryCoord_GetMetrics_Handler,
		},
		{
			MethodName: "GetReplicas",
			Handler:    _QueryCoord_GetReplicas_Handler,
		},
		{
			MethodName: "GetShardLeaders",
			Handler:    _QueryCoord_GetShardLeaders_Handler,
		},
		{
			MethodName: "CheckHealth",
			Handler:    _QueryCoord_CheckHealth_Handler,
		},
		{
			MethodName: "CreateResourceGroup",
			Handler:    _QueryCoord_CreateResourceGroup_Handler,
		},
		{
			MethodName: "UpdateResourceGroups",
			Handler:    _QueryCoord_UpdateResourceGroups_Handler,
		},
		{
			MethodName: "DropResourceGroup",
			Handler:    _QueryCoord_DropResourceGroup_Handler,
		},
		{
			MethodName: "TransferNode",
			Handler:    _QueryCoord_TransferNode_Handler,
		},
		{
			MethodName: "TransferReplica",
			Handler:    _QueryCoord_TransferReplica_Handler,
		},
		{
			MethodName: "ListResourceGroups",
			Handler:    _QueryCoord_ListResourceGroups_Handler,
		},
		{
			MethodName: "DescribeResourceGroup",
			Handler:    _QueryCoord_DescribeResourceGroup_Handler,
		},
		{
			MethodName: "ListCheckers",
			Handler:    _QueryCoord_ListCheckers_Handler,
		},
		{
			MethodName: "ActivateChecker",
			Handler:    _QueryCoord_ActivateChecker_Handler,
		},
		{
			MethodName: "DeactivateChecker",
			Handler:    _QueryCoord_DeactivateChecker_Handler,
		},
		{
			MethodName: "ListQueryNode",
			Handler:    _QueryCoord_ListQueryNode_Handler,
		},
		{
			MethodName: "GetQueryNodeDistribution",
			Handler:    _QueryCoord_GetQueryNodeDistribution_Handler,
		},
		{
			MethodName: "SuspendBalance",
			Handler:    _QueryCoord_SuspendBalance_Handler,
		},
		{
			MethodName: "ResumeBalance",
			Handler:    _QueryCoord_ResumeBalance_Handler,
		},
		{
			MethodName: "SuspendNode",
			Handler:    _QueryCoord_SuspendNode_Handler,
		},
		{
			MethodName: "ResumeNode",
			Handler:    _QueryCoord_ResumeNode_Handler,
		},
		{
			MethodName: "TransferSegment",
			Handler:    _QueryCoord_TransferSegment_Handler,
		},
		{
			MethodName: "TransferChannel",
			Handler:    _QueryCoord_TransferChannel_Handler,
		},
		{
			MethodName: "CheckQueryNodeDistribution",
			Handler:    _QueryCoord_CheckQueryNodeDistribution_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "query_coord.proto",
}

// QueryNodeClient is the client API for QueryNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryNodeClient interface {
	GetComponentStates(ctx context.Context, in *milvuspb.GetComponentStatesRequest, opts ...grpc.CallOption) (*milvuspb.ComponentStates, error)
	GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	WatchDmChannels(ctx context.Context, in *WatchDmChannelsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	UnsubDmChannel(ctx context.Context, in *UnsubDmChannelRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	LoadSegments(ctx context.Context, in *LoadSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ReleaseCollection(ctx context.Context, in *ReleaseCollectionRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	LoadPartitions(ctx context.Context, in *LoadPartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ReleasePartitions(ctx context.Context, in *ReleasePartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ReleaseSegments(ctx context.Context, in *ReleaseSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	GetSegmentInfo(ctx context.Context, in *GetSegmentInfoRequest, opts ...grpc.CallOption) (*GetSegmentInfoResponse, error)
	SyncReplicaSegments(ctx context.Context, in *SyncReplicaSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	GetStatistics(ctx context.Context, in *GetStatisticsRequest, opts ...grpc.CallOption) (*internalpb.GetStatisticsResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*internalpb.SearchResults, error)
	SearchSegments(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*internalpb.SearchResults, error)
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*internalpb.RetrieveResults, error)
	QueryStream(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (QueryNode_QueryStreamClient, error)
	QuerySegments(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*internalpb.RetrieveResults, error)
	QueryStreamSegments(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (QueryNode_QueryStreamSegmentsClient, error)
	ShowConfigurations(ctx context.Context, in *internalpb.ShowConfigurationsRequest, opts ...grpc.CallOption) (*internalpb.ShowConfigurationsResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
	GetMetrics(ctx context.Context, in *milvuspb.GetMetricsRequest, opts ...grpc.CallOption) (*milvuspb.GetMetricsResponse, error)
	GetDataDistribution(ctx context.Context, in *GetDataDistributionRequest, opts ...grpc.CallOption) (*GetDataDistributionResponse, error)
	SyncDistribution(ctx context.Context, in *SyncDistributionRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
}

type queryNodeClient struct {
	cc *grpc.ClientConn
}

func NewQueryNodeClient(cc *grpc.ClientConn) QueryNodeClient {
	return &queryNodeClient{cc}
}

func (c *queryNodeClient) GetComponentStates(ctx context.Context, in *milvuspb.GetComponentStatesRequest, opts ...grpc.CallOption) (*milvuspb.ComponentStates, error) {
	out := new(milvuspb.ComponentStates)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/GetComponentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/GetTimeTickChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/GetStatisticsChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) WatchDmChannels(ctx context.Context, in *WatchDmChannelsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/WatchDmChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) UnsubDmChannel(ctx context.Context, in *UnsubDmChannelRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/UnsubDmChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) LoadSegments(ctx context.Context, in *LoadSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/LoadSegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) ReleaseCollection(ctx context.Context, in *ReleaseCollectionRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/ReleaseCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) LoadPartitions(ctx context.Context, in *LoadPartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/LoadPartitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) ReleasePartitions(ctx context.Context, in *ReleasePartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/ReleasePartitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) ReleaseSegments(ctx context.Context, in *ReleaseSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/ReleaseSegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) GetSegmentInfo(ctx context.Context, in *GetSegmentInfoRequest, opts ...grpc.CallOption) (*GetSegmentInfoResponse, error) {
	out := new(GetSegmentInfoResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/GetSegmentInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) SyncReplicaSegments(ctx context.Context, in *SyncReplicaSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/SyncReplicaSegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) GetStatistics(ctx context.Context, in *GetStatisticsRequest, opts ...grpc.CallOption) (*internalpb.GetStatisticsResponse, error) {
	out := new(internalpb.GetStatisticsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/GetStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*internalpb.SearchResults, error) {
	out := new(internalpb.SearchResults)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) SearchSegments(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*internalpb.SearchResults, error) {
	out := new(internalpb.SearchResults)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/SearchSegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*internalpb.RetrieveResults, error) {
	out := new(internalpb.RetrieveResults)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) QueryStream(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (QueryNode_QueryStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QueryNode_serviceDesc.Streams[0], "/milvus.proto.query.QueryNode/QueryStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &queryNodeQueryStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type QueryNode_QueryStreamClient interface {
	Recv() (*internalpb.RetrieveResults, error)
	grpc.ClientStream
}

type queryNodeQueryStreamClient struct {
	grpc.ClientStream
}

func (x *queryNodeQueryStreamClient) Recv() (*internalpb.RetrieveResults, error) {
	m := new(internalpb.RetrieveResults)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *queryNodeClient) QuerySegments(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*internalpb.RetrieveResults, error) {
	out := new(internalpb.RetrieveResults)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/QuerySegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) QueryStreamSegments(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (QueryNode_QueryStreamSegmentsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QueryNode_serviceDesc.Streams[1], "/milvus.proto.query.QueryNode/QueryStreamSegments", opts...)
	if err != nil {
		return nil, err
	}
	x := &queryNodeQueryStreamSegmentsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type QueryNode_QueryStreamSegmentsClient interface {
	Recv() (*internalpb.RetrieveResults, error)
	grpc.ClientStream
}

type queryNodeQueryStreamSegmentsClient struct {
	grpc.ClientStream
}

func (x *queryNodeQueryStreamSegmentsClient) Recv() (*internalpb.RetrieveResults, error) {
	m := new(internalpb.RetrieveResults)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *queryNodeClient) ShowConfigurations(ctx context.Context, in *internalpb.ShowConfigurationsRequest, opts ...grpc.CallOption) (*internalpb.ShowConfigurationsResponse, error) {
	out := new(internalpb.ShowConfigurationsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/ShowConfigurations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) GetMetrics(ctx context.Context, in *milvuspb.GetMetricsRequest, opts ...grpc.CallOption) (*milvuspb.GetMetricsResponse, error) {
	out := new(milvuspb.GetMetricsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/GetMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) GetDataDistribution(ctx context.Context, in *GetDataDistributionRequest, opts ...grpc.CallOption) (*GetDataDistributionResponse, error) {
	out := new(GetDataDistributionResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/GetDataDistribution", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) SyncDistribution(ctx context.Context, in *SyncDistributionRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/SyncDistribution", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryNodeServer is the server API for QueryNode service.
type QueryNodeServer interface {
	GetComponentStates(context.Context, *milvuspb.GetComponentStatesRequest) (*milvuspb.ComponentStates, error)
	GetTimeTickChannel(context.Context, *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(context.Context, *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error)
	WatchDmChannels(context.Context, *WatchDmChannelsRequest) (*commonpb.Status, error)
	UnsubDmChannel(context.Context, *UnsubDmChannelRequest) (*commonpb.Status, error)
	LoadSegments(context.Context, *LoadSegmentsRequest) (*commonpb.Status, error)
	ReleaseCollection(context.Context, *ReleaseCollectionRequest) (*commonpb.Status, error)
	LoadPartitions(context.Context, *LoadPartitionsRequest) (*commonpb.Status, error)
	ReleasePartitions(context.Context, *ReleasePartitionsRequest) (*commonpb.Status, error)
	ReleaseSegments(context.Context, *ReleaseSegmentsRequest) (*commonpb.Status, error)
	GetSegmentInfo(context.Context, *GetSegmentInfoRequest) (*GetSegmentInfoResponse, error)
	SyncReplicaSegments(context.Context, *SyncReplicaSegmentsRequest) (*commonpb.Status, error)
	GetStatistics(context.Context, *GetStatisticsRequest) (*internalpb.GetStatisticsResponse, error)
	Search(context.Context, *SearchRequest) (*internalpb.SearchResults, error)
	SearchSegments(context.Context, *SearchRequest) (*internalpb.SearchResults, error)
	Query(context.Context, *QueryRequest) (*internalpb.RetrieveResults, error)
	QueryStream(*QueryRequest, QueryNode_QueryStreamServer) error
	QuerySegments(context.Context, *QueryRequest) (*internalpb.RetrieveResults, error)
	QueryStreamSegments(*QueryRequest, QueryNode_QueryStreamSegmentsServer) error
	ShowConfigurations(context.Context, *internalpb.ShowConfigurationsRequest) (*internalpb.ShowConfigurationsResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
	GetMetrics(context.Context, *milvuspb.GetMetricsRequest) (*milvuspb.GetMetricsResponse, error)
	GetDataDistribution(context.Context, *GetDataDistributionRequest) (*GetDataDistributionResponse, error)
	SyncDistribution(context.Context, *SyncDistributionRequest) (*commonpb.Status, error)
	Delete(context.Context, *DeleteRequest) (*commonpb.Status, error)
}

// UnimplementedQueryNodeServer can be embedded to have forward compatible implementations.
type UnimplementedQueryNodeServer struct {
}

func (*UnimplementedQueryNodeServer) GetComponentStates(ctx context.Context, req *milvuspb.GetComponentStatesRequest) (*milvuspb.ComponentStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComponentStates not implemented")
}
func (*UnimplementedQueryNodeServer) GetTimeTickChannel(ctx context.Context, req *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeTickChannel not implemented")
}
func (*UnimplementedQueryNodeServer) GetStatisticsChannel(ctx context.Context, req *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatisticsChannel not implemented")
}
func (*UnimplementedQueryNodeServer) WatchDmChannels(ctx context.Context, req *WatchDmChannelsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WatchDmChannels not implemented")
}
func (*UnimplementedQueryNodeServer) UnsubDmChannel(ctx context.Context, req *UnsubDmChannelRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnsubDmChannel not implemented")
}
func (*UnimplementedQueryNodeServer) LoadSegments(ctx context.Context, req *LoadSegmentsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadSegments not implemented")
}
func (*UnimplementedQueryNodeServer) ReleaseCollection(ctx context.Context, req *ReleaseCollectionRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseCollection not implemented")
}
func (*UnimplementedQueryNodeServer) LoadPartitions(ctx context.Context, req *LoadPartitionsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadPartitions not implemented")
}
func (*UnimplementedQueryNodeServer) ReleasePartitions(ctx context.Context, req *ReleasePartitionsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleasePartitions not implemented")
}
func (*UnimplementedQueryNodeServer) ReleaseSegments(ctx context.Context, req *ReleaseSegmentsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseSegments not implemented")
}
func (*UnimplementedQueryNodeServer) GetSegmentInfo(ctx context.Context, req *GetSegmentInfoRequest) (*GetSegmentInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSegmentInfo not implemented")
}
func (*UnimplementedQueryNodeServer) SyncReplicaSegments(ctx context.Context, req *SyncReplicaSegmentsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncReplicaSegments not implemented")
}
func (*UnimplementedQueryNodeServer) GetStatistics(ctx context.Context, req *GetStatisticsRequest) (*internalpb.GetStatisticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatistics not implemented")
}
func (*UnimplementedQueryNodeServer) Search(ctx context.Context, req *SearchRequest) (*internalpb.SearchResults, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedQueryNodeServer) SearchSegments(ctx context.Context, req *SearchRequest) (*internalpb.SearchResults, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchSegments not implemented")
}
func (*UnimplementedQueryNodeServer) Query(ctx context.Context, req *QueryRequest) (*internalpb.RetrieveResults, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}
func (*UnimplementedQueryNodeServer) QueryStream(req *QueryRequest, srv QueryNode_QueryStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method QueryStream not implemented")
}
func (*UnimplementedQueryNodeServer) QuerySegments(ctx context.Context, req *QueryRequest) (*internalpb.RetrieveResults, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuerySegments not implemented")
}
func (*UnimplementedQueryNodeServer) QueryStreamSegments(req *QueryRequest, srv QueryNode_QueryStreamSegmentsServer) error {
	return status.Errorf(codes.Unimplemented, "method QueryStreamSegments not implemented")
}
func (*UnimplementedQueryNodeServer) ShowConfigurations(ctx context.Context, req *internalpb.ShowConfigurationsRequest) (*internalpb.ShowConfigurationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowConfigurations not implemented")
}
func (*UnimplementedQueryNodeServer) GetMetrics(ctx context.Context, req *milvuspb.GetMetricsRequest) (*milvuspb.GetMetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetrics not implemented")
}
func (*UnimplementedQueryNodeServer) GetDataDistribution(ctx context.Context, req *GetDataDistributionRequest) (*GetDataDistributionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDataDistribution not implemented")
}
func (*UnimplementedQueryNodeServer) SyncDistribution(ctx context.Context, req *SyncDistributionRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncDistribution not implemented")
}
func (*UnimplementedQueryNodeServer) Delete(ctx context.Context, req *DeleteRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterQueryNodeServer(s *grpc.Server, srv QueryNodeServer) {
	s.RegisterService(&_QueryNode_serviceDesc, srv)
}

func _QueryNode_GetComponentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.GetComponentStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).GetComponentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/GetComponentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).GetComponentStates(ctx, req.(*milvuspb.GetComponentStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_GetTimeTickChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetTimeTickChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).GetTimeTickChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/GetTimeTickChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).GetTimeTickChannel(ctx, req.(*internalpb.GetTimeTickChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_GetStatisticsChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetStatisticsChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).GetStatisticsChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/GetStatisticsChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).GetStatisticsChannel(ctx, req.(*internalpb.GetStatisticsChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_WatchDmChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchDmChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).WatchDmChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/WatchDmChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).WatchDmChannels(ctx, req.(*WatchDmChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_UnsubDmChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubDmChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).UnsubDmChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/UnsubDmChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).UnsubDmChannel(ctx, req.(*UnsubDmChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_LoadSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadSegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).LoadSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/LoadSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).LoadSegments(ctx, req.(*LoadSegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_ReleaseCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).ReleaseCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/ReleaseCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).ReleaseCollection(ctx, req.(*ReleaseCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_LoadPartitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadPartitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).LoadPartitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/LoadPartitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).LoadPartitions(ctx, req.(*LoadPartitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_ReleasePartitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleasePartitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).ReleasePartitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/ReleasePartitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).ReleasePartitions(ctx, req.(*ReleasePartitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_ReleaseSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseSegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).ReleaseSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/ReleaseSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).ReleaseSegments(ctx, req.(*ReleaseSegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_GetSegmentInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSegmentInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).GetSegmentInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/GetSegmentInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).GetSegmentInfo(ctx, req.(*GetSegmentInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_SyncReplicaSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncReplicaSegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).SyncReplicaSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/SyncReplicaSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).SyncReplicaSegments(ctx, req.(*SyncReplicaSegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_GetStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).GetStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/GetStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).GetStatistics(ctx, req.(*GetStatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_SearchSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).SearchSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/SearchSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).SearchSegments(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_QueryStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(QueryRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QueryNodeServer).QueryStream(m, &queryNodeQueryStreamServer{stream})
}

type QueryNode_QueryStreamServer interface {
	Send(*internalpb.RetrieveResults) error
	grpc.ServerStream
}

type queryNodeQueryStreamServer struct {
	grpc.ServerStream
}

func (x *queryNodeQueryStreamServer) Send(m *internalpb.RetrieveResults) error {
	return x.ServerStream.SendMsg(m)
}

func _QueryNode_QuerySegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).QuerySegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/QuerySegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).QuerySegments(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_QueryStreamSegments_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(QueryRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QueryNodeServer).QueryStreamSegments(m, &queryNodeQueryStreamSegmentsServer{stream})
}

type QueryNode_QueryStreamSegmentsServer interface {
	Send(*internalpb.RetrieveResults) error
	grpc.ServerStream
}

type queryNodeQueryStreamSegmentsServer struct {
	grpc.ServerStream
}

func (x *queryNodeQueryStreamSegmentsServer) Send(m *internalpb.RetrieveResults) error {
	return x.ServerStream.SendMsg(m)
}

func _QueryNode_ShowConfigurations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.ShowConfigurationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).ShowConfigurations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/ShowConfigurations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).ShowConfigurations(ctx, req.(*internalpb.ShowConfigurationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_GetMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.GetMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).GetMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/GetMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).GetMetrics(ctx, req.(*milvuspb.GetMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_GetDataDistribution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDataDistributionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).GetDataDistribution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/GetDataDistribution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).GetDataDistribution(ctx, req.(*GetDataDistributionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_SyncDistribution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncDistributionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).SyncDistribution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/SyncDistribution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).SyncDistribution(ctx, req.(*SyncDistributionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueryNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milvus.protov2.query.QueryNode",
	HandlerType: (*QueryNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetComponentStates",
			Handler:    _QueryNode_GetComponentStates_Handler,
		},
		{
			MethodName: "GetTimeTickChannel",
			Handler:    _QueryNode_GetTimeTickChannel_Handler,
		},
		{
			MethodName: "GetStatisticsChannel",
			Handler:    _QueryNode_GetStatisticsChannel_Handler,
		},
		{
			MethodName: "WatchDmChannels",
			Handler:    _QueryNode_WatchDmChannels_Handler,
		},
		{
			MethodName: "UnsubDmChannel",
			Handler:    _QueryNode_UnsubDmChannel_Handler,
		},
		{
			MethodName: "LoadSegments",
			Handler:    _QueryNode_LoadSegments_Handler,
		},
		{
			MethodName: "ReleaseCollection",
			Handler:    _QueryNode_ReleaseCollection_Handler,
		},
		{
			MethodName: "LoadPartitions",
			Handler:    _QueryNode_LoadPartitions_Handler,
		},
		{
			MethodName: "ReleasePartitions",
			Handler:    _QueryNode_ReleasePartitions_Handler,
		},
		{
			MethodName: "ReleaseSegments",
			Handler:    _QueryNode_ReleaseSegments_Handler,
		},
		{
			MethodName: "GetSegmentInfo",
			Handler:    _QueryNode_GetSegmentInfo_Handler,
		},
		{
			MethodName: "SyncReplicaSegments",
			Handler:    _QueryNode_SyncReplicaSegments_Handler,
		},
		{
			MethodName: "GetStatistics",
			Handler:    _QueryNode_GetStatistics_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _QueryNode_Search_Handler,
		},
		{
			MethodName: "SearchSegments",
			Handler:    _QueryNode_SearchSegments_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _QueryNode_Query_Handler,
		},
		{
			MethodName: "QuerySegments",
			Handler:    _QueryNode_QuerySegments_Handler,
		},
		{
			MethodName: "ShowConfigurations",
			Handler:    _QueryNode_ShowConfigurations_Handler,
		},
		{
			MethodName: "GetMetrics",
			Handler:    _QueryNode_GetMetrics_Handler,
		},
		{
			MethodName: "GetDataDistribution",
			Handler:    _QueryNode_GetDataDistribution_Handler,
		},
		{
			MethodName: "SyncDistribution",
			Handler:    _QueryNode_SyncDistribution_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _QueryNode_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "QueryStream",
			Handler:       _QueryNode_QueryStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "QueryStreamSegments",
			Handler:       _QueryNode_QueryStreamSegments_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "query_coord.proto",
}
