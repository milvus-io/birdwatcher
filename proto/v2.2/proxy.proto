syntax = "proto3";
package milvus.protov2.proxy;

option go_package = "github.com/milvus-io/milvus/internal/proto/proxypb";

import "common.proto";
import "internal.proto";
import "milvus.proto";

service Proxy {
  rpc GetComponentStates(milvus.GetComponentStatesRequest) returns (milvus.ComponentStates) {}
  rpc GetStatisticsChannel(internal.GetStatisticsChannelRequest) returns(milvus.StringResponse){}

  rpc InvalidateCollectionMetaCache(InvalidateCollMetaCacheRequest) returns (common.Status) {}
  rpc GetDdChannel(internal.GetDdChannelRequest) returns (milvus.StringResponse) {}

  rpc InvalidateCredentialCache(InvalidateCredCacheRequest) returns (common.Status) {}
  rpc UpdateCredentialCache(UpdateCredCacheRequest) returns (common.Status) {}

  rpc RefreshPolicyInfoCache(RefreshPolicyInfoCacheRequest) returns (common.Status) {}
  rpc GetProxyMetrics(milvus.GetMetricsRequest) returns (milvus.GetMetricsResponse) {}
  rpc SetRates(SetRatesRequest) returns (common.Status) {}
}

message InvalidateCollMetaCacheRequest {
  // MsgType:
  //  DropCollection    ->  {meta cache, dml channels}
  //  Other             ->  {meta cache}
  common.MsgBase base = 1;
  string db_name = 2;
  string collection_name = 3;
  int64 collectionID = 4;
}

message InvalidateCredCacheRequest {
  common.MsgBase base = 1;
  string username = 2;
}

message UpdateCredCacheRequest {
  common.MsgBase base = 1;
  string username = 2;
  // password stored in cache
  string password = 3;
}

message RefreshPolicyInfoCacheRequest {
  common.MsgBase base = 1;
  int32 opType = 2;
  string opKey = 3;
}

message SetRatesRequest {
  common.MsgBase base = 1;
  repeated internal.Rate rates = 2;
}
