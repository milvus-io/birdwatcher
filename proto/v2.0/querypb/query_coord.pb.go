// Code generated by protoc-gen-go. DO NOT EDIT.
// source: query_coord.proto

package querypb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	commonpb "github.com/milvus-io/birdwatcher/proto/v2.0/commonpb"
	datapb "github.com/milvus-io/birdwatcher/proto/v2.0/datapb"
	internalpb "github.com/milvus-io/birdwatcher/proto/v2.0/internalpb"
	milvuspb "github.com/milvus-io/birdwatcher/proto/v2.0/milvuspb"
	schemapb "github.com/milvus-io/birdwatcher/proto/v2.0/schemapb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DataScope int32

const (
	DataScope_UnKnown    DataScope = 0
	DataScope_All        DataScope = 1
	DataScope_Streaming  DataScope = 2
	DataScope_Historical DataScope = 3
)

var DataScope_name = map[int32]string{
	0: "UnKnown",
	1: "All",
	2: "Streaming",
	3: "Historical",
}

var DataScope_value = map[string]int32{
	"UnKnown":    0,
	"All":        1,
	"Streaming":  2,
	"Historical": 3,
}

func (x DataScope) String() string {
	return proto.EnumName(DataScope_name, int32(x))
}

func (DataScope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{0}
}

type PartitionState int32

const (
	PartitionState_NotExist        PartitionState = 0
	PartitionState_NotPresent      PartitionState = 1
	PartitionState_OnDisk          PartitionState = 2
	PartitionState_PartialInMemory PartitionState = 3
	PartitionState_InMemory        PartitionState = 4
	PartitionState_PartialInGPU    PartitionState = 5
	PartitionState_InGPU           PartitionState = 6
)

var PartitionState_name = map[int32]string{
	0: "NotExist",
	1: "NotPresent",
	2: "OnDisk",
	3: "PartialInMemory",
	4: "InMemory",
	5: "PartialInGPU",
	6: "InGPU",
}

var PartitionState_value = map[string]int32{
	"NotExist":        0,
	"NotPresent":      1,
	"OnDisk":          2,
	"PartialInMemory": 3,
	"InMemory":        4,
	"PartialInGPU":    5,
	"InGPU":           6,
}

func (x PartitionState) String() string {
	return proto.EnumName(PartitionState_name, int32(x))
}

func (PartitionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{1}
}

type TriggerCondition int32

const (
	TriggerCondition_UnKnowCondition TriggerCondition = 0
	TriggerCondition_Handoff         TriggerCondition = 1
	TriggerCondition_LoadBalance     TriggerCondition = 2
	TriggerCondition_GrpcRequest     TriggerCondition = 3
	TriggerCondition_NodeDown        TriggerCondition = 4
)

var TriggerCondition_name = map[int32]string{
	0: "UnKnowCondition",
	1: "Handoff",
	2: "LoadBalance",
	3: "GrpcRequest",
	4: "NodeDown",
}

var TriggerCondition_value = map[string]int32{
	"UnKnowCondition": 0,
	"Handoff":         1,
	"LoadBalance":     2,
	"GrpcRequest":     3,
	"NodeDown":        4,
}

func (x TriggerCondition) String() string {
	return proto.EnumName(TriggerCondition_name, int32(x))
}

func (TriggerCondition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{2}
}

type LoadType int32

const (
	LoadType_UnKnownType    LoadType = 0
	LoadType_LoadPartition  LoadType = 1
	LoadType_LoadCollection LoadType = 2
)

var LoadType_name = map[int32]string{
	0: "UnKnownType",
	1: "LoadPartition",
	2: "LoadCollection",
}

var LoadType_value = map[string]int32{
	"UnKnownType":    0,
	"LoadPartition":  1,
	"LoadCollection": 2,
}

func (x LoadType) String() string {
	return proto.EnumName(LoadType_name, int32(x))
}

func (LoadType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{3}
}

//--------------------QueryCoord grpc request and response proto------------------
type ShowCollectionsRequest struct {
	Base *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// Not useful for now
	DbID                 int64    `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionIDs        []int64  `protobuf:"varint,3,rep,packed,name=collectionIDs,proto3" json:"collectionIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowCollectionsRequest) Reset()         { *m = ShowCollectionsRequest{} }
func (m *ShowCollectionsRequest) String() string { return proto.CompactTextString(m) }
func (*ShowCollectionsRequest) ProtoMessage()    {}
func (*ShowCollectionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{0}
}

func (m *ShowCollectionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowCollectionsRequest.Unmarshal(m, b)
}
func (m *ShowCollectionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowCollectionsRequest.Marshal(b, m, deterministic)
}
func (m *ShowCollectionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowCollectionsRequest.Merge(m, src)
}
func (m *ShowCollectionsRequest) XXX_Size() int {
	return xxx_messageInfo_ShowCollectionsRequest.Size(m)
}
func (m *ShowCollectionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowCollectionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShowCollectionsRequest proto.InternalMessageInfo

func (m *ShowCollectionsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ShowCollectionsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *ShowCollectionsRequest) GetCollectionIDs() []int64 {
	if m != nil {
		return m.CollectionIDs
	}
	return nil
}

type ShowCollectionsResponse struct {
	Status                *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	CollectionIDs         []int64          `protobuf:"varint,2,rep,packed,name=collectionIDs,proto3" json:"collectionIDs,omitempty"`
	InMemoryPercentages   []int64          `protobuf:"varint,3,rep,packed,name=inMemory_percentages,json=inMemoryPercentages,proto3" json:"inMemory_percentages,omitempty"`
	QueryServiceAvailable []bool           `protobuf:"varint,4,rep,packed,name=query_service_available,json=queryServiceAvailable,proto3" json:"query_service_available,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}         `json:"-"`
	XXX_unrecognized      []byte           `json:"-"`
	XXX_sizecache         int32            `json:"-"`
}

func (m *ShowCollectionsResponse) Reset()         { *m = ShowCollectionsResponse{} }
func (m *ShowCollectionsResponse) String() string { return proto.CompactTextString(m) }
func (*ShowCollectionsResponse) ProtoMessage()    {}
func (*ShowCollectionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{1}
}

func (m *ShowCollectionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowCollectionsResponse.Unmarshal(m, b)
}
func (m *ShowCollectionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowCollectionsResponse.Marshal(b, m, deterministic)
}
func (m *ShowCollectionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowCollectionsResponse.Merge(m, src)
}
func (m *ShowCollectionsResponse) XXX_Size() int {
	return xxx_messageInfo_ShowCollectionsResponse.Size(m)
}
func (m *ShowCollectionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowCollectionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShowCollectionsResponse proto.InternalMessageInfo

func (m *ShowCollectionsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ShowCollectionsResponse) GetCollectionIDs() []int64 {
	if m != nil {
		return m.CollectionIDs
	}
	return nil
}

func (m *ShowCollectionsResponse) GetInMemoryPercentages() []int64 {
	if m != nil {
		return m.InMemoryPercentages
	}
	return nil
}

func (m *ShowCollectionsResponse) GetQueryServiceAvailable() []bool {
	if m != nil {
		return m.QueryServiceAvailable
	}
	return nil
}

type ShowPartitionsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64           `protobuf:"varint,4,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ShowPartitionsRequest) Reset()         { *m = ShowPartitionsRequest{} }
func (m *ShowPartitionsRequest) String() string { return proto.CompactTextString(m) }
func (*ShowPartitionsRequest) ProtoMessage()    {}
func (*ShowPartitionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{2}
}

func (m *ShowPartitionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowPartitionsRequest.Unmarshal(m, b)
}
func (m *ShowPartitionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowPartitionsRequest.Marshal(b, m, deterministic)
}
func (m *ShowPartitionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowPartitionsRequest.Merge(m, src)
}
func (m *ShowPartitionsRequest) XXX_Size() int {
	return xxx_messageInfo_ShowPartitionsRequest.Size(m)
}
func (m *ShowPartitionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowPartitionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShowPartitionsRequest proto.InternalMessageInfo

func (m *ShowPartitionsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ShowPartitionsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *ShowPartitionsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *ShowPartitionsRequest) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

type ShowPartitionsResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	PartitionIDs         []int64          `protobuf:"varint,2,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	InMemoryPercentages  []int64          `protobuf:"varint,3,rep,packed,name=inMemory_percentages,json=inMemoryPercentages,proto3" json:"inMemory_percentages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ShowPartitionsResponse) Reset()         { *m = ShowPartitionsResponse{} }
func (m *ShowPartitionsResponse) String() string { return proto.CompactTextString(m) }
func (*ShowPartitionsResponse) ProtoMessage()    {}
func (*ShowPartitionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{3}
}

func (m *ShowPartitionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowPartitionsResponse.Unmarshal(m, b)
}
func (m *ShowPartitionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowPartitionsResponse.Marshal(b, m, deterministic)
}
func (m *ShowPartitionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowPartitionsResponse.Merge(m, src)
}
func (m *ShowPartitionsResponse) XXX_Size() int {
	return xxx_messageInfo_ShowPartitionsResponse.Size(m)
}
func (m *ShowPartitionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowPartitionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShowPartitionsResponse proto.InternalMessageInfo

func (m *ShowPartitionsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ShowPartitionsResponse) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func (m *ShowPartitionsResponse) GetInMemoryPercentages() []int64 {
	if m != nil {
		return m.InMemoryPercentages
	}
	return nil
}

type LoadCollectionRequest struct {
	Base                 *commonpb.MsgBase          `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64                      `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64                      `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	Schema               *schemapb.CollectionSchema `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	ReplicaNumber        int32                      `protobuf:"varint,5,opt,name=replica_number,json=replicaNumber,proto3" json:"replica_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *LoadCollectionRequest) Reset()         { *m = LoadCollectionRequest{} }
func (m *LoadCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*LoadCollectionRequest) ProtoMessage()    {}
func (*LoadCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{4}
}

func (m *LoadCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadCollectionRequest.Unmarshal(m, b)
}
func (m *LoadCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadCollectionRequest.Marshal(b, m, deterministic)
}
func (m *LoadCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadCollectionRequest.Merge(m, src)
}
func (m *LoadCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_LoadCollectionRequest.Size(m)
}
func (m *LoadCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadCollectionRequest proto.InternalMessageInfo

func (m *LoadCollectionRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *LoadCollectionRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *LoadCollectionRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *LoadCollectionRequest) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *LoadCollectionRequest) GetReplicaNumber() int32 {
	if m != nil {
		return m.ReplicaNumber
	}
	return 0
}

type ReleaseCollectionRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	NodeID               int64             `protobuf:"varint,4,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReleaseCollectionRequest) Reset()         { *m = ReleaseCollectionRequest{} }
func (m *ReleaseCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseCollectionRequest) ProtoMessage()    {}
func (*ReleaseCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{5}
}

func (m *ReleaseCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseCollectionRequest.Unmarshal(m, b)
}
func (m *ReleaseCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseCollectionRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseCollectionRequest.Merge(m, src)
}
func (m *ReleaseCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseCollectionRequest.Size(m)
}
func (m *ReleaseCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseCollectionRequest proto.InternalMessageInfo

func (m *ReleaseCollectionRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ReleaseCollectionRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *ReleaseCollectionRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *ReleaseCollectionRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

type LoadPartitionsRequest struct {
	Base                 *commonpb.MsgBase          `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64                      `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64                      `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64                    `protobuf:"varint,4,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	Schema               *schemapb.CollectionSchema `protobuf:"bytes,5,opt,name=schema,proto3" json:"schema,omitempty"`
	ReplicaNumber        int32                      `protobuf:"varint,6,opt,name=replica_number,json=replicaNumber,proto3" json:"replica_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *LoadPartitionsRequest) Reset()         { *m = LoadPartitionsRequest{} }
func (m *LoadPartitionsRequest) String() string { return proto.CompactTextString(m) }
func (*LoadPartitionsRequest) ProtoMessage()    {}
func (*LoadPartitionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{6}
}

func (m *LoadPartitionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadPartitionsRequest.Unmarshal(m, b)
}
func (m *LoadPartitionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadPartitionsRequest.Marshal(b, m, deterministic)
}
func (m *LoadPartitionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadPartitionsRequest.Merge(m, src)
}
func (m *LoadPartitionsRequest) XXX_Size() int {
	return xxx_messageInfo_LoadPartitionsRequest.Size(m)
}
func (m *LoadPartitionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadPartitionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadPartitionsRequest proto.InternalMessageInfo

func (m *LoadPartitionsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *LoadPartitionsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *LoadPartitionsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *LoadPartitionsRequest) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func (m *LoadPartitionsRequest) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *LoadPartitionsRequest) GetReplicaNumber() int32 {
	if m != nil {
		return m.ReplicaNumber
	}
	return 0
}

type ReleasePartitionsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64           `protobuf:"varint,4,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	NodeID               int64             `protobuf:"varint,5,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReleasePartitionsRequest) Reset()         { *m = ReleasePartitionsRequest{} }
func (m *ReleasePartitionsRequest) String() string { return proto.CompactTextString(m) }
func (*ReleasePartitionsRequest) ProtoMessage()    {}
func (*ReleasePartitionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{7}
}

func (m *ReleasePartitionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleasePartitionsRequest.Unmarshal(m, b)
}
func (m *ReleasePartitionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleasePartitionsRequest.Marshal(b, m, deterministic)
}
func (m *ReleasePartitionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleasePartitionsRequest.Merge(m, src)
}
func (m *ReleasePartitionsRequest) XXX_Size() int {
	return xxx_messageInfo_ReleasePartitionsRequest.Size(m)
}
func (m *ReleasePartitionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleasePartitionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleasePartitionsRequest proto.InternalMessageInfo

func (m *ReleasePartitionsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ReleasePartitionsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *ReleasePartitionsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *ReleasePartitionsRequest) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func (m *ReleasePartitionsRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

type GetPartitionStatesRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64           `protobuf:"varint,4,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetPartitionStatesRequest) Reset()         { *m = GetPartitionStatesRequest{} }
func (m *GetPartitionStatesRequest) String() string { return proto.CompactTextString(m) }
func (*GetPartitionStatesRequest) ProtoMessage()    {}
func (*GetPartitionStatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{8}
}

func (m *GetPartitionStatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPartitionStatesRequest.Unmarshal(m, b)
}
func (m *GetPartitionStatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPartitionStatesRequest.Marshal(b, m, deterministic)
}
func (m *GetPartitionStatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPartitionStatesRequest.Merge(m, src)
}
func (m *GetPartitionStatesRequest) XXX_Size() int {
	return xxx_messageInfo_GetPartitionStatesRequest.Size(m)
}
func (m *GetPartitionStatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPartitionStatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPartitionStatesRequest proto.InternalMessageInfo

func (m *GetPartitionStatesRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetPartitionStatesRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *GetPartitionStatesRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *GetPartitionStatesRequest) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

type GetPartitionStatesResponse struct {
	Status                *commonpb.Status   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	PartitionDescriptions []*PartitionStates `protobuf:"bytes,2,rep,name=partition_descriptions,json=partitionDescriptions,proto3" json:"partition_descriptions,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}           `json:"-"`
	XXX_unrecognized      []byte             `json:"-"`
	XXX_sizecache         int32              `json:"-"`
}

func (m *GetPartitionStatesResponse) Reset()         { *m = GetPartitionStatesResponse{} }
func (m *GetPartitionStatesResponse) String() string { return proto.CompactTextString(m) }
func (*GetPartitionStatesResponse) ProtoMessage()    {}
func (*GetPartitionStatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{9}
}

func (m *GetPartitionStatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPartitionStatesResponse.Unmarshal(m, b)
}
func (m *GetPartitionStatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPartitionStatesResponse.Marshal(b, m, deterministic)
}
func (m *GetPartitionStatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPartitionStatesResponse.Merge(m, src)
}
func (m *GetPartitionStatesResponse) XXX_Size() int {
	return xxx_messageInfo_GetPartitionStatesResponse.Size(m)
}
func (m *GetPartitionStatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPartitionStatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPartitionStatesResponse proto.InternalMessageInfo

func (m *GetPartitionStatesResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetPartitionStatesResponse) GetPartitionDescriptions() []*PartitionStates {
	if m != nil {
		return m.PartitionDescriptions
	}
	return nil
}

type GetSegmentInfoRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentIDs           []int64           `protobuf:"varint,2,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetSegmentInfoRequest) Reset()         { *m = GetSegmentInfoRequest{} }
func (m *GetSegmentInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetSegmentInfoRequest) ProtoMessage()    {}
func (*GetSegmentInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{10}
}

func (m *GetSegmentInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentInfoRequest.Unmarshal(m, b)
}
func (m *GetSegmentInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetSegmentInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentInfoRequest.Merge(m, src)
}
func (m *GetSegmentInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetSegmentInfoRequest.Size(m)
}
func (m *GetSegmentInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentInfoRequest proto.InternalMessageInfo

func (m *GetSegmentInfoRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetSegmentInfoRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *GetSegmentInfoRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

type GetSegmentInfoResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Infos                []*SegmentInfo   `protobuf:"bytes,2,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetSegmentInfoResponse) Reset()         { *m = GetSegmentInfoResponse{} }
func (m *GetSegmentInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetSegmentInfoResponse) ProtoMessage()    {}
func (*GetSegmentInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{11}
}

func (m *GetSegmentInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentInfoResponse.Unmarshal(m, b)
}
func (m *GetSegmentInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetSegmentInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentInfoResponse.Merge(m, src)
}
func (m *GetSegmentInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetSegmentInfoResponse.Size(m)
}
func (m *GetSegmentInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentInfoResponse proto.InternalMessageInfo

func (m *GetSegmentInfoResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetSegmentInfoResponse) GetInfos() []*SegmentInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

type GetShardLeadersRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CollectionID         int64             `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetShardLeadersRequest) Reset()         { *m = GetShardLeadersRequest{} }
func (m *GetShardLeadersRequest) String() string { return proto.CompactTextString(m) }
func (*GetShardLeadersRequest) ProtoMessage()    {}
func (*GetShardLeadersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{12}
}

func (m *GetShardLeadersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShardLeadersRequest.Unmarshal(m, b)
}
func (m *GetShardLeadersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShardLeadersRequest.Marshal(b, m, deterministic)
}
func (m *GetShardLeadersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShardLeadersRequest.Merge(m, src)
}
func (m *GetShardLeadersRequest) XXX_Size() int {
	return xxx_messageInfo_GetShardLeadersRequest.Size(m)
}
func (m *GetShardLeadersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShardLeadersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetShardLeadersRequest proto.InternalMessageInfo

func (m *GetShardLeadersRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetShardLeadersRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

type GetShardLeadersResponse struct {
	Status               *commonpb.Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Shards               []*ShardLeadersList `protobuf:"bytes,2,rep,name=shards,proto3" json:"shards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetShardLeadersResponse) Reset()         { *m = GetShardLeadersResponse{} }
func (m *GetShardLeadersResponse) String() string { return proto.CompactTextString(m) }
func (*GetShardLeadersResponse) ProtoMessage()    {}
func (*GetShardLeadersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{13}
}

func (m *GetShardLeadersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShardLeadersResponse.Unmarshal(m, b)
}
func (m *GetShardLeadersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShardLeadersResponse.Marshal(b, m, deterministic)
}
func (m *GetShardLeadersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShardLeadersResponse.Merge(m, src)
}
func (m *GetShardLeadersResponse) XXX_Size() int {
	return xxx_messageInfo_GetShardLeadersResponse.Size(m)
}
func (m *GetShardLeadersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShardLeadersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetShardLeadersResponse proto.InternalMessageInfo

func (m *GetShardLeadersResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetShardLeadersResponse) GetShards() []*ShardLeadersList {
	if m != nil {
		return m.Shards
	}
	return nil
}

type ShardLeadersList struct {
	ChannelName          string   `protobuf:"bytes,1,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	NodeIds              []int64  `protobuf:"varint,2,rep,packed,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	NodeAddrs            []string `protobuf:"bytes,3,rep,name=node_addrs,json=nodeAddrs,proto3" json:"node_addrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardLeadersList) Reset()         { *m = ShardLeadersList{} }
func (m *ShardLeadersList) String() string { return proto.CompactTextString(m) }
func (*ShardLeadersList) ProtoMessage()    {}
func (*ShardLeadersList) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{14}
}

func (m *ShardLeadersList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardLeadersList.Unmarshal(m, b)
}
func (m *ShardLeadersList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardLeadersList.Marshal(b, m, deterministic)
}
func (m *ShardLeadersList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardLeadersList.Merge(m, src)
}
func (m *ShardLeadersList) XXX_Size() int {
	return xxx_messageInfo_ShardLeadersList.Size(m)
}
func (m *ShardLeadersList) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardLeadersList.DiscardUnknown(m)
}

var xxx_messageInfo_ShardLeadersList proto.InternalMessageInfo

func (m *ShardLeadersList) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *ShardLeadersList) GetNodeIds() []int64 {
	if m != nil {
		return m.NodeIds
	}
	return nil
}

func (m *ShardLeadersList) GetNodeAddrs() []string {
	if m != nil {
		return m.NodeAddrs
	}
	return nil
}

//-----------------query node grpc request and response proto----------------
type LoadMetaInfo struct {
	LoadType             LoadType `protobuf:"varint,1,opt,name=load_type,json=loadType,proto3,enum=milvus.proto.query.LoadType" json:"load_type,omitempty"`
	CollectionID         int64    `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64  `protobuf:"varint,3,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadMetaInfo) Reset()         { *m = LoadMetaInfo{} }
func (m *LoadMetaInfo) String() string { return proto.CompactTextString(m) }
func (*LoadMetaInfo) ProtoMessage()    {}
func (*LoadMetaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{15}
}

func (m *LoadMetaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadMetaInfo.Unmarshal(m, b)
}
func (m *LoadMetaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadMetaInfo.Marshal(b, m, deterministic)
}
func (m *LoadMetaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadMetaInfo.Merge(m, src)
}
func (m *LoadMetaInfo) XXX_Size() int {
	return xxx_messageInfo_LoadMetaInfo.Size(m)
}
func (m *LoadMetaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadMetaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LoadMetaInfo proto.InternalMessageInfo

func (m *LoadMetaInfo) GetLoadType() LoadType {
	if m != nil {
		return m.LoadType
	}
	return LoadType_UnKnownType
}

func (m *LoadMetaInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *LoadMetaInfo) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

type WatchDmChannelsRequest struct {
	Base                 *commonpb.MsgBase             `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	NodeID               int64                         `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	CollectionID         int64                         `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64                       `protobuf:"varint,4,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	Infos                []*datapb.VchannelInfo        `protobuf:"bytes,5,rep,name=infos,proto3" json:"infos,omitempty"`
	Schema               *schemapb.CollectionSchema    `protobuf:"bytes,6,opt,name=schema,proto3" json:"schema,omitempty"`
	ExcludeInfos         []*datapb.SegmentInfo         `protobuf:"bytes,7,rep,name=exclude_infos,json=excludeInfos,proto3" json:"exclude_infos,omitempty"`
	LoadMeta             *LoadMetaInfo                 `protobuf:"bytes,8,opt,name=load_meta,json=loadMeta,proto3" json:"load_meta,omitempty"`
	ReplicaID            int64                         `protobuf:"varint,9,opt,name=replicaID,proto3" json:"replicaID,omitempty"`
	SegmentInfos         map[int64]*datapb.SegmentInfo `protobuf:"bytes,10,rep,name=segment_infos,json=segmentInfos,proto3" json:"segment_infos,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *WatchDmChannelsRequest) Reset()         { *m = WatchDmChannelsRequest{} }
func (m *WatchDmChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*WatchDmChannelsRequest) ProtoMessage()    {}
func (*WatchDmChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{16}
}

func (m *WatchDmChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchDmChannelsRequest.Unmarshal(m, b)
}
func (m *WatchDmChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchDmChannelsRequest.Marshal(b, m, deterministic)
}
func (m *WatchDmChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchDmChannelsRequest.Merge(m, src)
}
func (m *WatchDmChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_WatchDmChannelsRequest.Size(m)
}
func (m *WatchDmChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchDmChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchDmChannelsRequest proto.InternalMessageInfo

func (m *WatchDmChannelsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *WatchDmChannelsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *WatchDmChannelsRequest) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetInfos() []*datapb.VchannelInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetExcludeInfos() []*datapb.SegmentInfo {
	if m != nil {
		return m.ExcludeInfos
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetLoadMeta() *LoadMetaInfo {
	if m != nil {
		return m.LoadMeta
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetReplicaID() int64 {
	if m != nil {
		return m.ReplicaID
	}
	return 0
}

func (m *WatchDmChannelsRequest) GetSegmentInfos() map[int64]*datapb.SegmentInfo {
	if m != nil {
		return m.SegmentInfos
	}
	return nil
}

type WatchDeltaChannelsRequest struct {
	Base                 *commonpb.MsgBase      `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	NodeID               int64                  `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	CollectionID         int64                  `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	Infos                []*datapb.VchannelInfo `protobuf:"bytes,4,rep,name=infos,proto3" json:"infos,omitempty"`
	ReplicaId            int64                  `protobuf:"varint,5,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	LoadMeta             *LoadMetaInfo          `protobuf:"bytes,9,opt,name=load_meta,json=loadMeta,proto3" json:"load_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WatchDeltaChannelsRequest) Reset()         { *m = WatchDeltaChannelsRequest{} }
func (m *WatchDeltaChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*WatchDeltaChannelsRequest) ProtoMessage()    {}
func (*WatchDeltaChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{17}
}

func (m *WatchDeltaChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchDeltaChannelsRequest.Unmarshal(m, b)
}
func (m *WatchDeltaChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchDeltaChannelsRequest.Marshal(b, m, deterministic)
}
func (m *WatchDeltaChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchDeltaChannelsRequest.Merge(m, src)
}
func (m *WatchDeltaChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_WatchDeltaChannelsRequest.Size(m)
}
func (m *WatchDeltaChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchDeltaChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchDeltaChannelsRequest proto.InternalMessageInfo

func (m *WatchDeltaChannelsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *WatchDeltaChannelsRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *WatchDeltaChannelsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *WatchDeltaChannelsRequest) GetInfos() []*datapb.VchannelInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *WatchDeltaChannelsRequest) GetReplicaId() int64 {
	if m != nil {
		return m.ReplicaId
	}
	return 0
}

func (m *WatchDeltaChannelsRequest) GetLoadMeta() *LoadMetaInfo {
	if m != nil {
		return m.LoadMeta
	}
	return nil
}

type SegmentLoadInfo struct {
	SegmentID            int64                 `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	PartitionID          int64                 `protobuf:"varint,2,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	CollectionID         int64                 `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	DbID                 int64                 `protobuf:"varint,4,opt,name=dbID,proto3" json:"dbID,omitempty"`
	FlushTime            int64                 `protobuf:"varint,5,opt,name=flush_time,json=flushTime,proto3" json:"flush_time,omitempty"`
	BinlogPaths          []*datapb.FieldBinlog `protobuf:"bytes,6,rep,name=binlog_paths,json=binlogPaths,proto3" json:"binlog_paths,omitempty"`
	NumOfRows            int64                 `protobuf:"varint,7,opt,name=num_of_rows,json=numOfRows,proto3" json:"num_of_rows,omitempty"`
	Statslogs            []*datapb.FieldBinlog `protobuf:"bytes,8,rep,name=statslogs,proto3" json:"statslogs,omitempty"`
	Deltalogs            []*datapb.FieldBinlog `protobuf:"bytes,9,rep,name=deltalogs,proto3" json:"deltalogs,omitempty"`
	CompactionFrom       []int64               `protobuf:"varint,10,rep,packed,name=compactionFrom,proto3" json:"compactionFrom,omitempty"`
	IndexInfos           []*FieldIndexInfo     `protobuf:"bytes,11,rep,name=index_infos,json=indexInfos,proto3" json:"index_infos,omitempty"`
	SegmentSize          int64                 `protobuf:"varint,12,opt,name=segment_size,json=segmentSize,proto3" json:"segment_size,omitempty"`
	InsertChannel        string                `protobuf:"bytes,13,opt,name=insert_channel,json=insertChannel,proto3" json:"insert_channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SegmentLoadInfo) Reset()         { *m = SegmentLoadInfo{} }
func (m *SegmentLoadInfo) String() string { return proto.CompactTextString(m) }
func (*SegmentLoadInfo) ProtoMessage()    {}
func (*SegmentLoadInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{18}
}

func (m *SegmentLoadInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentLoadInfo.Unmarshal(m, b)
}
func (m *SegmentLoadInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentLoadInfo.Marshal(b, m, deterministic)
}
func (m *SegmentLoadInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentLoadInfo.Merge(m, src)
}
func (m *SegmentLoadInfo) XXX_Size() int {
	return xxx_messageInfo_SegmentLoadInfo.Size(m)
}
func (m *SegmentLoadInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentLoadInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentLoadInfo proto.InternalMessageInfo

func (m *SegmentLoadInfo) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SegmentLoadInfo) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *SegmentLoadInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SegmentLoadInfo) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *SegmentLoadInfo) GetFlushTime() int64 {
	if m != nil {
		return m.FlushTime
	}
	return 0
}

func (m *SegmentLoadInfo) GetBinlogPaths() []*datapb.FieldBinlog {
	if m != nil {
		return m.BinlogPaths
	}
	return nil
}

func (m *SegmentLoadInfo) GetNumOfRows() int64 {
	if m != nil {
		return m.NumOfRows
	}
	return 0
}

func (m *SegmentLoadInfo) GetStatslogs() []*datapb.FieldBinlog {
	if m != nil {
		return m.Statslogs
	}
	return nil
}

func (m *SegmentLoadInfo) GetDeltalogs() []*datapb.FieldBinlog {
	if m != nil {
		return m.Deltalogs
	}
	return nil
}

func (m *SegmentLoadInfo) GetCompactionFrom() []int64 {
	if m != nil {
		return m.CompactionFrom
	}
	return nil
}

func (m *SegmentLoadInfo) GetIndexInfos() []*FieldIndexInfo {
	if m != nil {
		return m.IndexInfos
	}
	return nil
}

func (m *SegmentLoadInfo) GetSegmentSize() int64 {
	if m != nil {
		return m.SegmentSize
	}
	return 0
}

func (m *SegmentLoadInfo) GetInsertChannel() string {
	if m != nil {
		return m.InsertChannel
	}
	return ""
}

type FieldIndexInfo struct {
	FieldID              int64                    `protobuf:"varint,1,opt,name=fieldID,proto3" json:"fieldID,omitempty"`
	EnableIndex          bool                     `protobuf:"varint,2,opt,name=enable_index,json=enableIndex,proto3" json:"enable_index,omitempty"`
	IndexName            string                   `protobuf:"bytes,3,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	IndexID              int64                    `protobuf:"varint,4,opt,name=indexID,proto3" json:"indexID,omitempty"`
	BuildID              int64                    `protobuf:"varint,5,opt,name=buildID,proto3" json:"buildID,omitempty"`
	IndexParams          []*commonpb.KeyValuePair `protobuf:"bytes,6,rep,name=index_params,json=indexParams,proto3" json:"index_params,omitempty"`
	IndexFilePaths       []string                 `protobuf:"bytes,7,rep,name=index_file_paths,json=indexFilePaths,proto3" json:"index_file_paths,omitempty"`
	IndexSize            int64                    `protobuf:"varint,8,opt,name=index_size,json=indexSize,proto3" json:"index_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FieldIndexInfo) Reset()         { *m = FieldIndexInfo{} }
func (m *FieldIndexInfo) String() string { return proto.CompactTextString(m) }
func (*FieldIndexInfo) ProtoMessage()    {}
func (*FieldIndexInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{19}
}

func (m *FieldIndexInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldIndexInfo.Unmarshal(m, b)
}
func (m *FieldIndexInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldIndexInfo.Marshal(b, m, deterministic)
}
func (m *FieldIndexInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldIndexInfo.Merge(m, src)
}
func (m *FieldIndexInfo) XXX_Size() int {
	return xxx_messageInfo_FieldIndexInfo.Size(m)
}
func (m *FieldIndexInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldIndexInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FieldIndexInfo proto.InternalMessageInfo

func (m *FieldIndexInfo) GetFieldID() int64 {
	if m != nil {
		return m.FieldID
	}
	return 0
}

func (m *FieldIndexInfo) GetEnableIndex() bool {
	if m != nil {
		return m.EnableIndex
	}
	return false
}

func (m *FieldIndexInfo) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *FieldIndexInfo) GetIndexID() int64 {
	if m != nil {
		return m.IndexID
	}
	return 0
}

func (m *FieldIndexInfo) GetBuildID() int64 {
	if m != nil {
		return m.BuildID
	}
	return 0
}

func (m *FieldIndexInfo) GetIndexParams() []*commonpb.KeyValuePair {
	if m != nil {
		return m.IndexParams
	}
	return nil
}

func (m *FieldIndexInfo) GetIndexFilePaths() []string {
	if m != nil {
		return m.IndexFilePaths
	}
	return nil
}

func (m *FieldIndexInfo) GetIndexSize() int64 {
	if m != nil {
		return m.IndexSize
	}
	return 0
}

type LoadSegmentsRequest struct {
	Base                 *commonpb.MsgBase          `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DstNodeID            int64                      `protobuf:"varint,2,opt,name=dst_nodeID,json=dstNodeID,proto3" json:"dst_nodeID,omitempty"`
	Infos                []*SegmentLoadInfo         `protobuf:"bytes,3,rep,name=infos,proto3" json:"infos,omitempty"`
	Schema               *schemapb.CollectionSchema `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	SourceNodeID         int64                      `protobuf:"varint,5,opt,name=source_nodeID,json=sourceNodeID,proto3" json:"source_nodeID,omitempty"`
	CollectionID         int64                      `protobuf:"varint,6,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	LoadMeta             *LoadMetaInfo              `protobuf:"bytes,7,opt,name=load_meta,json=loadMeta,proto3" json:"load_meta,omitempty"`
	ReplicaID            int64                      `protobuf:"varint,8,opt,name=replicaID,proto3" json:"replicaID,omitempty"`
	DeltaPositions       []*internalpb.MsgPosition  `protobuf:"bytes,9,rep,name=delta_positions,json=deltaPositions,proto3" json:"delta_positions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *LoadSegmentsRequest) Reset()         { *m = LoadSegmentsRequest{} }
func (m *LoadSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*LoadSegmentsRequest) ProtoMessage()    {}
func (*LoadSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{20}
}

func (m *LoadSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadSegmentsRequest.Unmarshal(m, b)
}
func (m *LoadSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *LoadSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadSegmentsRequest.Merge(m, src)
}
func (m *LoadSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_LoadSegmentsRequest.Size(m)
}
func (m *LoadSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadSegmentsRequest proto.InternalMessageInfo

func (m *LoadSegmentsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *LoadSegmentsRequest) GetDstNodeID() int64 {
	if m != nil {
		return m.DstNodeID
	}
	return 0
}

func (m *LoadSegmentsRequest) GetInfos() []*SegmentLoadInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *LoadSegmentsRequest) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *LoadSegmentsRequest) GetSourceNodeID() int64 {
	if m != nil {
		return m.SourceNodeID
	}
	return 0
}

func (m *LoadSegmentsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *LoadSegmentsRequest) GetLoadMeta() *LoadMetaInfo {
	if m != nil {
		return m.LoadMeta
	}
	return nil
}

func (m *LoadSegmentsRequest) GetReplicaID() int64 {
	if m != nil {
		return m.ReplicaID
	}
	return 0
}

func (m *LoadSegmentsRequest) GetDeltaPositions() []*internalpb.MsgPosition {
	if m != nil {
		return m.DeltaPositions
	}
	return nil
}

type ReleaseSegmentsRequest struct {
	Base   *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	NodeID int64             `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	// Not useful for now
	DbID                 int64     `protobuf:"varint,3,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64     `protobuf:"varint,4,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64   `protobuf:"varint,5,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	SegmentIDs           []int64   `protobuf:"varint,6,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	Scope                DataScope `protobuf:"varint,7,opt,name=scope,proto3,enum=milvus.proto.query.DataScope" json:"scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReleaseSegmentsRequest) Reset()         { *m = ReleaseSegmentsRequest{} }
func (m *ReleaseSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseSegmentsRequest) ProtoMessage()    {}
func (*ReleaseSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{21}
}

func (m *ReleaseSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseSegmentsRequest.Unmarshal(m, b)
}
func (m *ReleaseSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseSegmentsRequest.Merge(m, src)
}
func (m *ReleaseSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseSegmentsRequest.Size(m)
}
func (m *ReleaseSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseSegmentsRequest proto.InternalMessageInfo

func (m *ReleaseSegmentsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ReleaseSegmentsRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *ReleaseSegmentsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *ReleaseSegmentsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *ReleaseSegmentsRequest) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func (m *ReleaseSegmentsRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *ReleaseSegmentsRequest) GetScope() DataScope {
	if m != nil {
		return m.Scope
	}
	return DataScope_UnKnown
}

type SearchRequest struct {
	Req                  *internalpb.SearchRequest `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	DmlChannel           string                    `protobuf:"bytes,2,opt,name=dml_channel,json=dmlChannel,proto3" json:"dml_channel,omitempty"`
	SegmentIDs           []int64                   `protobuf:"varint,3,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	FromShardLeader      bool                      `protobuf:"varint,4,opt,name=from_shard_leader,json=fromShardLeader,proto3" json:"from_shard_leader,omitempty"`
	Scope                DataScope                 `protobuf:"varint,5,opt,name=scope,proto3,enum=milvus.proto.query.DataScope" json:"scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{22}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetReq() *internalpb.SearchRequest {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *SearchRequest) GetDmlChannel() string {
	if m != nil {
		return m.DmlChannel
	}
	return ""
}

func (m *SearchRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *SearchRequest) GetFromShardLeader() bool {
	if m != nil {
		return m.FromShardLeader
	}
	return false
}

func (m *SearchRequest) GetScope() DataScope {
	if m != nil {
		return m.Scope
	}
	return DataScope_UnKnown
}

type QueryRequest struct {
	Req                  *internalpb.RetrieveRequest `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	DmlChannel           string                      `protobuf:"bytes,2,opt,name=dml_channel,json=dmlChannel,proto3" json:"dml_channel,omitempty"`
	SegmentIDs           []int64                     `protobuf:"varint,3,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	FromShardLeader      bool                        `protobuf:"varint,4,opt,name=from_shard_leader,json=fromShardLeader,proto3" json:"from_shard_leader,omitempty"`
	Scope                DataScope                   `protobuf:"varint,5,opt,name=scope,proto3,enum=milvus.proto.query.DataScope" json:"scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{23}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetReq() *internalpb.RetrieveRequest {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *QueryRequest) GetDmlChannel() string {
	if m != nil {
		return m.DmlChannel
	}
	return ""
}

func (m *QueryRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *QueryRequest) GetFromShardLeader() bool {
	if m != nil {
		return m.FromShardLeader
	}
	return false
}

func (m *QueryRequest) GetScope() DataScope {
	if m != nil {
		return m.Scope
	}
	return DataScope_UnKnown
}

type SyncReplicaSegmentsRequest struct {
	Base                 *commonpb.MsgBase      `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	VchannelName         string                 `protobuf:"bytes,2,opt,name=vchannel_name,json=vchannelName,proto3" json:"vchannel_name,omitempty"`
	ReplicaSegments      []*ReplicaSegmentsInfo `protobuf:"bytes,3,rep,name=replica_segments,json=replicaSegments,proto3" json:"replica_segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SyncReplicaSegmentsRequest) Reset()         { *m = SyncReplicaSegmentsRequest{} }
func (m *SyncReplicaSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*SyncReplicaSegmentsRequest) ProtoMessage()    {}
func (*SyncReplicaSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{24}
}

func (m *SyncReplicaSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncReplicaSegmentsRequest.Unmarshal(m, b)
}
func (m *SyncReplicaSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncReplicaSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *SyncReplicaSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncReplicaSegmentsRequest.Merge(m, src)
}
func (m *SyncReplicaSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_SyncReplicaSegmentsRequest.Size(m)
}
func (m *SyncReplicaSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncReplicaSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncReplicaSegmentsRequest proto.InternalMessageInfo

func (m *SyncReplicaSegmentsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SyncReplicaSegmentsRequest) GetVchannelName() string {
	if m != nil {
		return m.VchannelName
	}
	return ""
}

func (m *SyncReplicaSegmentsRequest) GetReplicaSegments() []*ReplicaSegmentsInfo {
	if m != nil {
		return m.ReplicaSegments
	}
	return nil
}

type ReplicaSegmentsInfo struct {
	NodeId               int64    `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	PartitionId          int64    `protobuf:"varint,2,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	SegmentIds           []int64  `protobuf:"varint,3,rep,packed,name=segment_ids,json=segmentIds,proto3" json:"segment_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaSegmentsInfo) Reset()         { *m = ReplicaSegmentsInfo{} }
func (m *ReplicaSegmentsInfo) String() string { return proto.CompactTextString(m) }
func (*ReplicaSegmentsInfo) ProtoMessage()    {}
func (*ReplicaSegmentsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{25}
}

func (m *ReplicaSegmentsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaSegmentsInfo.Unmarshal(m, b)
}
func (m *ReplicaSegmentsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaSegmentsInfo.Marshal(b, m, deterministic)
}
func (m *ReplicaSegmentsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaSegmentsInfo.Merge(m, src)
}
func (m *ReplicaSegmentsInfo) XXX_Size() int {
	return xxx_messageInfo_ReplicaSegmentsInfo.Size(m)
}
func (m *ReplicaSegmentsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaSegmentsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaSegmentsInfo proto.InternalMessageInfo

func (m *ReplicaSegmentsInfo) GetNodeId() int64 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *ReplicaSegmentsInfo) GetPartitionId() int64 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *ReplicaSegmentsInfo) GetSegmentIds() []int64 {
	if m != nil {
		return m.SegmentIds
	}
	return nil
}

//----------------request auto triggered by QueryCoord-----------------
type HandoffSegmentsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentInfos         []*SegmentInfo    `protobuf:"bytes,2,rep,name=segmentInfos,proto3" json:"segmentInfos,omitempty"`
	ReleasedSegments     []int64           `protobuf:"varint,3,rep,packed,name=released_segments,json=releasedSegments,proto3" json:"released_segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HandoffSegmentsRequest) Reset()         { *m = HandoffSegmentsRequest{} }
func (m *HandoffSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*HandoffSegmentsRequest) ProtoMessage()    {}
func (*HandoffSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{26}
}

func (m *HandoffSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandoffSegmentsRequest.Unmarshal(m, b)
}
func (m *HandoffSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandoffSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *HandoffSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandoffSegmentsRequest.Merge(m, src)
}
func (m *HandoffSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_HandoffSegmentsRequest.Size(m)
}
func (m *HandoffSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandoffSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandoffSegmentsRequest proto.InternalMessageInfo

func (m *HandoffSegmentsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *HandoffSegmentsRequest) GetSegmentInfos() []*SegmentInfo {
	if m != nil {
		return m.SegmentInfos
	}
	return nil
}

func (m *HandoffSegmentsRequest) GetReleasedSegments() []int64 {
	if m != nil {
		return m.ReleasedSegments
	}
	return nil
}

type LoadBalanceRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SourceNodeIDs        []int64           `protobuf:"varint,2,rep,packed,name=source_nodeIDs,json=sourceNodeIDs,proto3" json:"source_nodeIDs,omitempty"`
	BalanceReason        TriggerCondition  `protobuf:"varint,3,opt,name=balance_reason,json=balanceReason,proto3,enum=milvus.proto.query.TriggerCondition" json:"balance_reason,omitempty"`
	DstNodeIDs           []int64           `protobuf:"varint,4,rep,packed,name=dst_nodeIDs,json=dstNodeIDs,proto3" json:"dst_nodeIDs,omitempty"`
	SealedSegmentIDs     []int64           `protobuf:"varint,5,rep,packed,name=sealed_segmentIDs,json=sealedSegmentIDs,proto3" json:"sealed_segmentIDs,omitempty"`
	CollectionID         int64             `protobuf:"varint,6,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LoadBalanceRequest) Reset()         { *m = LoadBalanceRequest{} }
func (m *LoadBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*LoadBalanceRequest) ProtoMessage()    {}
func (*LoadBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{27}
}

func (m *LoadBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadBalanceRequest.Unmarshal(m, b)
}
func (m *LoadBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadBalanceRequest.Marshal(b, m, deterministic)
}
func (m *LoadBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadBalanceRequest.Merge(m, src)
}
func (m *LoadBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_LoadBalanceRequest.Size(m)
}
func (m *LoadBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadBalanceRequest proto.InternalMessageInfo

func (m *LoadBalanceRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *LoadBalanceRequest) GetSourceNodeIDs() []int64 {
	if m != nil {
		return m.SourceNodeIDs
	}
	return nil
}

func (m *LoadBalanceRequest) GetBalanceReason() TriggerCondition {
	if m != nil {
		return m.BalanceReason
	}
	return TriggerCondition_UnKnowCondition
}

func (m *LoadBalanceRequest) GetDstNodeIDs() []int64 {
	if m != nil {
		return m.DstNodeIDs
	}
	return nil
}

func (m *LoadBalanceRequest) GetSealedSegmentIDs() []int64 {
	if m != nil {
		return m.SealedSegmentIDs
	}
	return nil
}

func (m *LoadBalanceRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

type DmChannelWatchInfo struct {
	CollectionID         int64    `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	DmChannel            string   `protobuf:"bytes,2,opt,name=dmChannel,proto3" json:"dmChannel,omitempty"`
	NodeIDLoaded         int64    `protobuf:"varint,3,opt,name=nodeID_loaded,json=nodeIDLoaded,proto3" json:"nodeID_loaded,omitempty"`
	ReplicaID            int64    `protobuf:"varint,4,opt,name=replicaID,proto3" json:"replicaID,omitempty"`
	NodeIds              []int64  `protobuf:"varint,5,rep,packed,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmChannelWatchInfo) Reset()         { *m = DmChannelWatchInfo{} }
func (m *DmChannelWatchInfo) String() string { return proto.CompactTextString(m) }
func (*DmChannelWatchInfo) ProtoMessage()    {}
func (*DmChannelWatchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{28}
}

func (m *DmChannelWatchInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmChannelWatchInfo.Unmarshal(m, b)
}
func (m *DmChannelWatchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmChannelWatchInfo.Marshal(b, m, deterministic)
}
func (m *DmChannelWatchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmChannelWatchInfo.Merge(m, src)
}
func (m *DmChannelWatchInfo) XXX_Size() int {
	return xxx_messageInfo_DmChannelWatchInfo.Size(m)
}
func (m *DmChannelWatchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DmChannelWatchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DmChannelWatchInfo proto.InternalMessageInfo

func (m *DmChannelWatchInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *DmChannelWatchInfo) GetDmChannel() string {
	if m != nil {
		return m.DmChannel
	}
	return ""
}

func (m *DmChannelWatchInfo) GetNodeIDLoaded() int64 {
	if m != nil {
		return m.NodeIDLoaded
	}
	return 0
}

func (m *DmChannelWatchInfo) GetReplicaID() int64 {
	if m != nil {
		return m.ReplicaID
	}
	return 0
}

func (m *DmChannelWatchInfo) GetNodeIds() []int64 {
	if m != nil {
		return m.NodeIds
	}
	return nil
}

type QueryChannelInfo struct {
	CollectionID         int64                   `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	QueryChannel         string                  `protobuf:"bytes,2,opt,name=query_channel,json=queryChannel,proto3" json:"query_channel,omitempty"`
	QueryResultChannel   string                  `protobuf:"bytes,3,opt,name=query_result_channel,json=queryResultChannel,proto3" json:"query_result_channel,omitempty"`
	GlobalSealedSegments []*SegmentInfo          `protobuf:"bytes,4,rep,name=global_sealed_segments,json=globalSealedSegments,proto3" json:"global_sealed_segments,omitempty"`
	SeekPosition         *internalpb.MsgPosition `protobuf:"bytes,5,opt,name=seek_position,json=seekPosition,proto3" json:"seek_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *QueryChannelInfo) Reset()         { *m = QueryChannelInfo{} }
func (m *QueryChannelInfo) String() string { return proto.CompactTextString(m) }
func (*QueryChannelInfo) ProtoMessage()    {}
func (*QueryChannelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{29}
}

func (m *QueryChannelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryChannelInfo.Unmarshal(m, b)
}
func (m *QueryChannelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryChannelInfo.Marshal(b, m, deterministic)
}
func (m *QueryChannelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryChannelInfo.Merge(m, src)
}
func (m *QueryChannelInfo) XXX_Size() int {
	return xxx_messageInfo_QueryChannelInfo.Size(m)
}
func (m *QueryChannelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryChannelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_QueryChannelInfo proto.InternalMessageInfo

func (m *QueryChannelInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *QueryChannelInfo) GetQueryChannel() string {
	if m != nil {
		return m.QueryChannel
	}
	return ""
}

func (m *QueryChannelInfo) GetQueryResultChannel() string {
	if m != nil {
		return m.QueryResultChannel
	}
	return ""
}

func (m *QueryChannelInfo) GetGlobalSealedSegments() []*SegmentInfo {
	if m != nil {
		return m.GlobalSealedSegments
	}
	return nil
}

func (m *QueryChannelInfo) GetSeekPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.SeekPosition
	}
	return nil
}

type PartitionStates struct {
	PartitionID          int64          `protobuf:"varint,1,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	State                PartitionState `protobuf:"varint,2,opt,name=state,proto3,enum=milvus.proto.query.PartitionState" json:"state,omitempty"`
	InMemoryPercentage   int64          `protobuf:"varint,3,opt,name=inMemory_percentage,json=inMemoryPercentage,proto3" json:"inMemory_percentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PartitionStates) Reset()         { *m = PartitionStates{} }
func (m *PartitionStates) String() string { return proto.CompactTextString(m) }
func (*PartitionStates) ProtoMessage()    {}
func (*PartitionStates) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{30}
}

func (m *PartitionStates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionStates.Unmarshal(m, b)
}
func (m *PartitionStates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionStates.Marshal(b, m, deterministic)
}
func (m *PartitionStates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionStates.Merge(m, src)
}
func (m *PartitionStates) XXX_Size() int {
	return xxx_messageInfo_PartitionStates.Size(m)
}
func (m *PartitionStates) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionStates.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionStates proto.InternalMessageInfo

func (m *PartitionStates) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *PartitionStates) GetState() PartitionState {
	if m != nil {
		return m.State
	}
	return PartitionState_NotExist
}

func (m *PartitionStates) GetInMemoryPercentage() int64 {
	if m != nil {
		return m.InMemoryPercentage
	}
	return 0
}

type SegmentInfo struct {
	SegmentID    int64 `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	CollectionID int64 `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID  int64 `protobuf:"varint,3,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	// deprecated, check node_ids(NodeIds) field
	NodeID               int64                 `protobuf:"varint,4,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	MemSize              int64                 `protobuf:"varint,5,opt,name=mem_size,json=memSize,proto3" json:"mem_size,omitempty"`
	NumRows              int64                 `protobuf:"varint,6,opt,name=num_rows,json=numRows,proto3" json:"num_rows,omitempty"`
	IndexName            string                `protobuf:"bytes,7,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	IndexID              int64                 `protobuf:"varint,8,opt,name=indexID,proto3" json:"indexID,omitempty"`
	DmChannel            string                `protobuf:"bytes,9,opt,name=dmChannel,proto3" json:"dmChannel,omitempty"`
	CompactionFrom       []int64               `protobuf:"varint,10,rep,packed,name=compactionFrom,proto3" json:"compactionFrom,omitempty"`
	CreatedByCompaction  bool                  `protobuf:"varint,11,opt,name=createdByCompaction,proto3" json:"createdByCompaction,omitempty"`
	SegmentState         commonpb.SegmentState `protobuf:"varint,12,opt,name=segment_state,json=segmentState,proto3,enum=milvus.proto.common.SegmentState" json:"segment_state,omitempty"`
	IndexInfos           []*FieldIndexInfo     `protobuf:"bytes,13,rep,name=index_infos,json=indexInfos,proto3" json:"index_infos,omitempty"`
	ReplicaIds           []int64               `protobuf:"varint,14,rep,packed,name=replica_ids,json=replicaIds,proto3" json:"replica_ids,omitempty"`
	NodeIds              []int64               `protobuf:"varint,15,rep,packed,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SegmentInfo) Reset()         { *m = SegmentInfo{} }
func (m *SegmentInfo) String() string { return proto.CompactTextString(m) }
func (*SegmentInfo) ProtoMessage()    {}
func (*SegmentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{31}
}

func (m *SegmentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentInfo.Unmarshal(m, b)
}
func (m *SegmentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentInfo.Marshal(b, m, deterministic)
}
func (m *SegmentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentInfo.Merge(m, src)
}
func (m *SegmentInfo) XXX_Size() int {
	return xxx_messageInfo_SegmentInfo.Size(m)
}
func (m *SegmentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentInfo proto.InternalMessageInfo

func (m *SegmentInfo) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SegmentInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SegmentInfo) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *SegmentInfo) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *SegmentInfo) GetMemSize() int64 {
	if m != nil {
		return m.MemSize
	}
	return 0
}

func (m *SegmentInfo) GetNumRows() int64 {
	if m != nil {
		return m.NumRows
	}
	return 0
}

func (m *SegmentInfo) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *SegmentInfo) GetIndexID() int64 {
	if m != nil {
		return m.IndexID
	}
	return 0
}

func (m *SegmentInfo) GetDmChannel() string {
	if m != nil {
		return m.DmChannel
	}
	return ""
}

func (m *SegmentInfo) GetCompactionFrom() []int64 {
	if m != nil {
		return m.CompactionFrom
	}
	return nil
}

func (m *SegmentInfo) GetCreatedByCompaction() bool {
	if m != nil {
		return m.CreatedByCompaction
	}
	return false
}

func (m *SegmentInfo) GetSegmentState() commonpb.SegmentState {
	if m != nil {
		return m.SegmentState
	}
	return commonpb.SegmentState_SegmentStateNone
}

func (m *SegmentInfo) GetIndexInfos() []*FieldIndexInfo {
	if m != nil {
		return m.IndexInfos
	}
	return nil
}

func (m *SegmentInfo) GetReplicaIds() []int64 {
	if m != nil {
		return m.ReplicaIds
	}
	return nil
}

func (m *SegmentInfo) GetNodeIds() []int64 {
	if m != nil {
		return m.NodeIds
	}
	return nil
}

type CollectionInfo struct {
	CollectionID         int64                      `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64                    `protobuf:"varint,2,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	PartitionStates      []*PartitionStates         `protobuf:"bytes,3,rep,name=partition_states,json=partitionStates,proto3" json:"partition_states,omitempty"`
	LoadType             LoadType                   `protobuf:"varint,4,opt,name=load_type,json=loadType,proto3,enum=milvus.proto.query.LoadType" json:"load_type,omitempty"`
	Schema               *schemapb.CollectionSchema `protobuf:"bytes,5,opt,name=schema,proto3" json:"schema,omitempty"`
	ReleasedPartitionIDs []int64                    `protobuf:"varint,6,rep,packed,name=released_partitionIDs,json=releasedPartitionIDs,proto3" json:"released_partitionIDs,omitempty"`
	InMemoryPercentage   int64                      `protobuf:"varint,7,opt,name=inMemory_percentage,json=inMemoryPercentage,proto3" json:"inMemory_percentage,omitempty"`
	ReplicaIds           []int64                    `protobuf:"varint,8,rep,packed,name=replica_ids,json=replicaIds,proto3" json:"replica_ids,omitempty"`
	ReplicaNumber        int32                      `protobuf:"varint,9,opt,name=replica_number,json=replicaNumber,proto3" json:"replica_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CollectionInfo) Reset()         { *m = CollectionInfo{} }
func (m *CollectionInfo) String() string { return proto.CompactTextString(m) }
func (*CollectionInfo) ProtoMessage()    {}
func (*CollectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{32}
}

func (m *CollectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionInfo.Unmarshal(m, b)
}
func (m *CollectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionInfo.Marshal(b, m, deterministic)
}
func (m *CollectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionInfo.Merge(m, src)
}
func (m *CollectionInfo) XXX_Size() int {
	return xxx_messageInfo_CollectionInfo.Size(m)
}
func (m *CollectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionInfo proto.InternalMessageInfo

func (m *CollectionInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *CollectionInfo) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func (m *CollectionInfo) GetPartitionStates() []*PartitionStates {
	if m != nil {
		return m.PartitionStates
	}
	return nil
}

func (m *CollectionInfo) GetLoadType() LoadType {
	if m != nil {
		return m.LoadType
	}
	return LoadType_UnKnownType
}

func (m *CollectionInfo) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *CollectionInfo) GetReleasedPartitionIDs() []int64 {
	if m != nil {
		return m.ReleasedPartitionIDs
	}
	return nil
}

func (m *CollectionInfo) GetInMemoryPercentage() int64 {
	if m != nil {
		return m.InMemoryPercentage
	}
	return 0
}

func (m *CollectionInfo) GetReplicaIds() []int64 {
	if m != nil {
		return m.ReplicaIds
	}
	return nil
}

func (m *CollectionInfo) GetReplicaNumber() int32 {
	if m != nil {
		return m.ReplicaNumber
	}
	return 0
}

type UnsubscribeChannels struct {
	CollectionID         int64    `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	Channels             []string `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsubscribeChannels) Reset()         { *m = UnsubscribeChannels{} }
func (m *UnsubscribeChannels) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeChannels) ProtoMessage()    {}
func (*UnsubscribeChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{33}
}

func (m *UnsubscribeChannels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeChannels.Unmarshal(m, b)
}
func (m *UnsubscribeChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeChannels.Marshal(b, m, deterministic)
}
func (m *UnsubscribeChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeChannels.Merge(m, src)
}
func (m *UnsubscribeChannels) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeChannels.Size(m)
}
func (m *UnsubscribeChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeChannels.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeChannels proto.InternalMessageInfo

func (m *UnsubscribeChannels) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *UnsubscribeChannels) GetChannels() []string {
	if m != nil {
		return m.Channels
	}
	return nil
}

type UnsubscribeChannelInfo struct {
	NodeID               int64                  `protobuf:"varint,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	CollectionChannels   []*UnsubscribeChannels `protobuf:"bytes,2,rep,name=collection_channels,json=collectionChannels,proto3" json:"collection_channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UnsubscribeChannelInfo) Reset()         { *m = UnsubscribeChannelInfo{} }
func (m *UnsubscribeChannelInfo) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeChannelInfo) ProtoMessage()    {}
func (*UnsubscribeChannelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{34}
}

func (m *UnsubscribeChannelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeChannelInfo.Unmarshal(m, b)
}
func (m *UnsubscribeChannelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeChannelInfo.Marshal(b, m, deterministic)
}
func (m *UnsubscribeChannelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeChannelInfo.Merge(m, src)
}
func (m *UnsubscribeChannelInfo) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeChannelInfo.Size(m)
}
func (m *UnsubscribeChannelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeChannelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeChannelInfo proto.InternalMessageInfo

func (m *UnsubscribeChannelInfo) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *UnsubscribeChannelInfo) GetCollectionChannels() []*UnsubscribeChannels {
	if m != nil {
		return m.CollectionChannels
	}
	return nil
}

//---- synchronize messages proto between QueryCoord and QueryNode -----
type SegmentChangeInfo struct {
	OnlineNodeID         int64          `protobuf:"varint,1,opt,name=online_nodeID,json=onlineNodeID,proto3" json:"online_nodeID,omitempty"`
	OnlineSegments       []*SegmentInfo `protobuf:"bytes,2,rep,name=online_segments,json=onlineSegments,proto3" json:"online_segments,omitempty"`
	OfflineNodeID        int64          `protobuf:"varint,3,opt,name=offline_nodeID,json=offlineNodeID,proto3" json:"offline_nodeID,omitempty"`
	OfflineSegments      []*SegmentInfo `protobuf:"bytes,4,rep,name=offline_segments,json=offlineSegments,proto3" json:"offline_segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SegmentChangeInfo) Reset()         { *m = SegmentChangeInfo{} }
func (m *SegmentChangeInfo) String() string { return proto.CompactTextString(m) }
func (*SegmentChangeInfo) ProtoMessage()    {}
func (*SegmentChangeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{35}
}

func (m *SegmentChangeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentChangeInfo.Unmarshal(m, b)
}
func (m *SegmentChangeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentChangeInfo.Marshal(b, m, deterministic)
}
func (m *SegmentChangeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentChangeInfo.Merge(m, src)
}
func (m *SegmentChangeInfo) XXX_Size() int {
	return xxx_messageInfo_SegmentChangeInfo.Size(m)
}
func (m *SegmentChangeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentChangeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentChangeInfo proto.InternalMessageInfo

func (m *SegmentChangeInfo) GetOnlineNodeID() int64 {
	if m != nil {
		return m.OnlineNodeID
	}
	return 0
}

func (m *SegmentChangeInfo) GetOnlineSegments() []*SegmentInfo {
	if m != nil {
		return m.OnlineSegments
	}
	return nil
}

func (m *SegmentChangeInfo) GetOfflineNodeID() int64 {
	if m != nil {
		return m.OfflineNodeID
	}
	return 0
}

func (m *SegmentChangeInfo) GetOfflineSegments() []*SegmentInfo {
	if m != nil {
		return m.OfflineSegments
	}
	return nil
}

type SealedSegmentsChangeInfo struct {
	Base                 *commonpb.MsgBase    `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Infos                []*SegmentChangeInfo `protobuf:"bytes,2,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SealedSegmentsChangeInfo) Reset()         { *m = SealedSegmentsChangeInfo{} }
func (m *SealedSegmentsChangeInfo) String() string { return proto.CompactTextString(m) }
func (*SealedSegmentsChangeInfo) ProtoMessage()    {}
func (*SealedSegmentsChangeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aab7cc9a69ed26e8, []int{36}
}

func (m *SealedSegmentsChangeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SealedSegmentsChangeInfo.Unmarshal(m, b)
}
func (m *SealedSegmentsChangeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SealedSegmentsChangeInfo.Marshal(b, m, deterministic)
}
func (m *SealedSegmentsChangeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SealedSegmentsChangeInfo.Merge(m, src)
}
func (m *SealedSegmentsChangeInfo) XXX_Size() int {
	return xxx_messageInfo_SealedSegmentsChangeInfo.Size(m)
}
func (m *SealedSegmentsChangeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SealedSegmentsChangeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SealedSegmentsChangeInfo proto.InternalMessageInfo

func (m *SealedSegmentsChangeInfo) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SealedSegmentsChangeInfo) GetInfos() []*SegmentChangeInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

func init() {
	proto.RegisterEnum("milvus.proto.query.DataScope", DataScope_name, DataScope_value)
	proto.RegisterEnum("milvus.proto.query.PartitionState", PartitionState_name, PartitionState_value)
	proto.RegisterEnum("milvus.proto.query.TriggerCondition", TriggerCondition_name, TriggerCondition_value)
	proto.RegisterEnum("milvus.proto.query.LoadType", LoadType_name, LoadType_value)
	proto.RegisterType((*ShowCollectionsRequest)(nil), "milvus.proto.query.ShowCollectionsRequest")
	proto.RegisterType((*ShowCollectionsResponse)(nil), "milvus.proto.query.ShowCollectionsResponse")
	proto.RegisterType((*ShowPartitionsRequest)(nil), "milvus.proto.query.ShowPartitionsRequest")
	proto.RegisterType((*ShowPartitionsResponse)(nil), "milvus.proto.query.ShowPartitionsResponse")
	proto.RegisterType((*LoadCollectionRequest)(nil), "milvus.proto.query.LoadCollectionRequest")
	proto.RegisterType((*ReleaseCollectionRequest)(nil), "milvus.proto.query.ReleaseCollectionRequest")
	proto.RegisterType((*LoadPartitionsRequest)(nil), "milvus.proto.query.LoadPartitionsRequest")
	proto.RegisterType((*ReleasePartitionsRequest)(nil), "milvus.proto.query.ReleasePartitionsRequest")
	proto.RegisterType((*GetPartitionStatesRequest)(nil), "milvus.proto.query.GetPartitionStatesRequest")
	proto.RegisterType((*GetPartitionStatesResponse)(nil), "milvus.proto.query.GetPartitionStatesResponse")
	proto.RegisterType((*GetSegmentInfoRequest)(nil), "milvus.proto.query.GetSegmentInfoRequest")
	proto.RegisterType((*GetSegmentInfoResponse)(nil), "milvus.proto.query.GetSegmentInfoResponse")
	proto.RegisterType((*GetShardLeadersRequest)(nil), "milvus.proto.query.GetShardLeadersRequest")
	proto.RegisterType((*GetShardLeadersResponse)(nil), "milvus.proto.query.GetShardLeadersResponse")
	proto.RegisterType((*ShardLeadersList)(nil), "milvus.proto.query.ShardLeadersList")
	proto.RegisterType((*LoadMetaInfo)(nil), "milvus.proto.query.LoadMetaInfo")
	proto.RegisterType((*WatchDmChannelsRequest)(nil), "milvus.proto.query.WatchDmChannelsRequest")
	proto.RegisterMapType((map[int64]*datapb.SegmentInfo)(nil), "milvus.proto.query.WatchDmChannelsRequest.SegmentInfosEntry")
	proto.RegisterType((*WatchDeltaChannelsRequest)(nil), "milvus.proto.query.WatchDeltaChannelsRequest")
	proto.RegisterType((*SegmentLoadInfo)(nil), "milvus.proto.query.SegmentLoadInfo")
	proto.RegisterType((*FieldIndexInfo)(nil), "milvus.proto.query.FieldIndexInfo")
	proto.RegisterType((*LoadSegmentsRequest)(nil), "milvus.proto.query.LoadSegmentsRequest")
	proto.RegisterType((*ReleaseSegmentsRequest)(nil), "milvus.proto.query.ReleaseSegmentsRequest")
	proto.RegisterType((*SearchRequest)(nil), "milvus.proto.query.SearchRequest")
	proto.RegisterType((*QueryRequest)(nil), "milvus.proto.query.QueryRequest")
	proto.RegisterType((*SyncReplicaSegmentsRequest)(nil), "milvus.proto.query.SyncReplicaSegmentsRequest")
	proto.RegisterType((*ReplicaSegmentsInfo)(nil), "milvus.proto.query.ReplicaSegmentsInfo")
	proto.RegisterType((*HandoffSegmentsRequest)(nil), "milvus.proto.query.HandoffSegmentsRequest")
	proto.RegisterType((*LoadBalanceRequest)(nil), "milvus.proto.query.LoadBalanceRequest")
	proto.RegisterType((*DmChannelWatchInfo)(nil), "milvus.proto.query.DmChannelWatchInfo")
	proto.RegisterType((*QueryChannelInfo)(nil), "milvus.proto.query.QueryChannelInfo")
	proto.RegisterType((*PartitionStates)(nil), "milvus.proto.query.PartitionStates")
	proto.RegisterType((*SegmentInfo)(nil), "milvus.proto.query.SegmentInfo")
	proto.RegisterType((*CollectionInfo)(nil), "milvus.proto.query.CollectionInfo")
	proto.RegisterType((*UnsubscribeChannels)(nil), "milvus.proto.query.UnsubscribeChannels")
	proto.RegisterType((*UnsubscribeChannelInfo)(nil), "milvus.proto.query.UnsubscribeChannelInfo")
	proto.RegisterType((*SegmentChangeInfo)(nil), "milvus.proto.query.SegmentChangeInfo")
	proto.RegisterType((*SealedSegmentsChangeInfo)(nil), "milvus.proto.query.SealedSegmentsChangeInfo")
}

func init() { proto.RegisterFile("query_coord.proto", fileDescriptor_aab7cc9a69ed26e8) }

var fileDescriptor_aab7cc9a69ed26e8 = []byte{
	// 2929 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x3a, 0xc9, 0x8f, 0x1c, 0x57,
	0xf9, 0x53, 0xbd, 0x4d, 0xf7, 0xd7, 0x5b, 0xf9, 0x8d, 0x3d, 0xee, 0xf4, 0xcf, 0x4e, 0x9c, 0x72,
	0x9c, 0xcc, 0x6f, 0x42, 0xc6, 0x66, 0x1c, 0xa2, 0x04, 0x82, 0x84, 0x3d, 0x13, 0x4f, 0x06, 0xdb,
	0x93, 0xa1, 0xda, 0x0e, 0xc8, 0x8a, 0x54, 0x54, 0x57, 0xbd, 0xe9, 0x29, 0xb9, 0x96, 0x76, 0xbd,
	0xea, 0x71, 0x26, 0x67, 0x84, 0xc4, 0x76, 0x40, 0x5c, 0x51, 0xc4, 0x01, 0x0e, 0x48, 0x44, 0x5c,
	0xb8, 0x20, 0x21, 0xc4, 0x8d, 0x2b, 0x12, 0x7f, 0x00, 0x47, 0x04, 0x77, 0xc4, 0x15, 0xbd, 0xa5,
	0xf6, 0x2a, 0x77, 0x8f, 0x27, 0x4e, 0x82, 0xc4, 0xad, 0xea, 0x7b, 0xcb, 0xb7, 0x6f, 0xef, 0x3d,
	0x38, 0xf3, 0x68, 0x86, 0xfd, 0x63, 0xcd, 0xf0, 0x3c, 0xdf, 0xdc, 0x98, 0xfa, 0x5e, 0xe0, 0x21,
	0xe4, 0x58, 0xf6, 0xd1, 0x8c, 0xf0, 0xbf, 0x0d, 0x36, 0x3e, 0xec, 0x18, 0x9e, 0xe3, 0x78, 0x2e,
	0x87, 0x0d, 0x3b, 0xc9, 0x19, 0xc3, 0x9e, 0xe5, 0x06, 0xd8, 0x77, 0x75, 0x3b, 0x1c, 0x25, 0xc6,
	0x21, 0x76, 0x74, 0xf1, 0x27, 0x9b, 0x7a, 0xa0, 0x27, 0xf7, 0x57, 0xbe, 0x27, 0xc1, 0xea, 0xe8,
	0xd0, 0x7b, 0xbc, 0xe5, 0xd9, 0x36, 0x36, 0x02, 0xcb, 0x73, 0x89, 0x8a, 0x1f, 0xcd, 0x30, 0x09,
	0xd0, 0x35, 0xa8, 0x8d, 0x75, 0x82, 0x07, 0xd2, 0x25, 0x69, 0xad, 0xbd, 0x79, 0x61, 0x23, 0x45,
	0x89, 0x20, 0xe1, 0x2e, 0x99, 0xdc, 0xd4, 0x09, 0x56, 0xd9, 0x4c, 0x84, 0xa0, 0x66, 0x8e, 0x77,
	0xb7, 0x07, 0x95, 0x4b, 0xd2, 0x5a, 0x55, 0x65, 0xdf, 0xe8, 0x25, 0xe8, 0x1a, 0xd1, 0xde, 0xbb,
	0xdb, 0x64, 0x50, 0xbd, 0x54, 0x5d, 0xab, 0xaa, 0x69, 0xa0, 0xf2, 0x37, 0x09, 0xce, 0xe7, 0xc8,
	0x20, 0x53, 0xcf, 0x25, 0x18, 0x5d, 0x87, 0x06, 0x09, 0xf4, 0x60, 0x46, 0x04, 0x25, 0xff, 0x57,
	0x48, 0xc9, 0x88, 0x4d, 0x51, 0xc5, 0xd4, 0x3c, 0xda, 0x4a, 0x01, 0x5a, 0xf4, 0x65, 0x38, 0x6b,
	0xb9, 0x77, 0xb1, 0xe3, 0xf9, 0xc7, 0xda, 0x14, 0xfb, 0x06, 0x76, 0x03, 0x7d, 0x82, 0x43, 0x1a,
	0x57, 0xc2, 0xb1, 0xfd, 0x78, 0x08, 0xbd, 0x01, 0xe7, 0xb9, 0x96, 0x08, 0xf6, 0x8f, 0x2c, 0x03,
	0x6b, 0xfa, 0x91, 0x6e, 0xd9, 0xfa, 0xd8, 0xc6, 0x83, 0xda, 0xa5, 0xea, 0x5a, 0x53, 0x3d, 0xc7,
	0x86, 0x47, 0x7c, 0xf4, 0x46, 0x38, 0xa8, 0xfc, 0x4a, 0x82, 0x73, 0x94, 0xc3, 0x7d, 0xdd, 0x0f,
	0xac, 0x67, 0x20, 0x67, 0x05, 0x3a, 0x49, 0xde, 0x06, 0x55, 0x36, 0x96, 0x82, 0xd1, 0x39, 0xd3,
	0x10, 0x3d, 0x95, 0x49, 0x8d, 0xb1, 0x99, 0x82, 0x29, 0xbf, 0x14, 0x06, 0x91, 0xa4, 0xf3, 0x34,
	0x8a, 0xc8, 0xe2, 0xac, 0xe4, 0x71, 0x3e, 0x85, 0x1a, 0x94, 0xbf, 0x4b, 0x70, 0xee, 0x8e, 0xa7,
	0x9b, 0xb1, 0xc1, 0x7c, 0xf6, 0xe2, 0xfc, 0x3a, 0x34, 0xb8, 0x77, 0x0d, 0x6a, 0x0c, 0xd7, 0x95,
	0x34, 0x2e, 0xe1, 0x79, 0x31, 0x85, 0x23, 0x06, 0x50, 0xc5, 0x22, 0x74, 0x05, 0x7a, 0x3e, 0x9e,
	0xda, 0x96, 0xa1, 0x6b, 0xee, 0xcc, 0x19, 0x63, 0x7f, 0x50, 0xbf, 0x24, 0xad, 0xd5, 0xd5, 0xae,
	0x80, 0xee, 0x31, 0xa0, 0xf2, 0x73, 0x09, 0x06, 0x2a, 0xb6, 0xb1, 0x4e, 0xf0, 0xe7, 0xc9, 0xec,
	0x2a, 0x34, 0x5c, 0xcf, 0xc4, 0xbb, 0xdb, 0x8c, 0xd9, 0xaa, 0x2a, 0xfe, 0x94, 0x1f, 0x55, 0xb8,
	0x22, 0xbe, 0xe0, 0x76, 0x9d, 0x50, 0x56, 0xfd, 0xd3, 0x51, 0x56, 0xa3, 0x48, 0x59, 0x7f, 0x8a,
	0x95, 0xf5, 0x45, 0x17, 0x48, 0xac, 0xd0, 0x7a, 0x4a, 0xa1, 0xbf, 0x96, 0xe0, 0xb9, 0x1d, 0x1c,
	0x44, 0xe4, 0x53, 0x7f, 0xc6, 0x5f, 0xd0, 0x60, 0xf5, 0x89, 0x04, 0xc3, 0x22, 0x5a, 0x4f, 0x13,
	0xb0, 0x1e, 0xc0, 0x6a, 0x84, 0x43, 0x33, 0x31, 0x31, 0x7c, 0x6b, 0xca, 0xd4, 0xc8, 0x42, 0x57,
	0x7b, 0xf3, 0xf2, 0x46, 0x3e, 0x25, 0x6f, 0x64, 0x29, 0x38, 0x17, 0x6d, 0xb1, 0x9d, 0xd8, 0x41,
	0xf9, 0x89, 0x04, 0xe7, 0x76, 0x70, 0x30, 0xc2, 0x13, 0x07, 0xbb, 0xc1, 0xae, 0x7b, 0xe0, 0x3d,
	0xbd, 0x5c, 0x9f, 0x07, 0x20, 0x62, 0x9f, 0x28, 0xac, 0x26, 0x20, 0x8b, 0xc8, 0x98, 0x65, 0xff,
	0x2c, 0x3d, 0xa7, 0x91, 0xdd, 0x57, 0xa0, 0x6e, 0xb9, 0x07, 0x5e, 0x28, 0xaa, 0x17, 0x8a, 0x44,
	0x95, 0x44, 0xc6, 0x67, 0x2b, 0x2e, 0xa7, 0xe2, 0x50, 0xf7, 0xcd, 0x3b, 0x58, 0x37, 0xb1, 0x7f,
	0x0a, 0x73, 0xcb, 0xb2, 0x5d, 0x29, 0x60, 0xfb, 0xc7, 0x12, 0x9c, 0xcf, 0x21, 0x3c, 0x0d, 0xdf,
	0x6f, 0x43, 0x83, 0xd0, 0xcd, 0x42, 0xc6, 0x5f, 0x2a, 0x64, 0x3c, 0x81, 0xee, 0x8e, 0x45, 0x02,
	0x55, 0xac, 0x51, 0x3c, 0x90, 0xb3, 0x63, 0xe8, 0x45, 0xe8, 0x18, 0x87, 0xba, 0xeb, 0x62, 0x5b,
	0x73, 0x75, 0x87, 0x0b, 0xa0, 0xa5, 0xb6, 0x05, 0x6c, 0x4f, 0x77, 0x30, 0x7a, 0x0e, 0x9a, 0xd4,
	0x65, 0x35, 0xcb, 0x0c, 0xd5, 0xbf, 0xcc, 0x5c, 0xd8, 0x24, 0xe8, 0x22, 0x00, 0x1b, 0xd2, 0x4d,
	0xd3, 0xe7, 0x69, 0xb4, 0xa5, 0xb6, 0x28, 0xe4, 0x06, 0x05, 0x28, 0x3f, 0x95, 0xa0, 0x43, 0x63,
	0xf6, 0x5d, 0x1c, 0xe8, 0x54, 0x0f, 0xe8, 0x2d, 0x68, 0xd9, 0x9e, 0x6e, 0x6a, 0xc1, 0xf1, 0x94,
	0xa3, 0xea, 0x65, 0x65, 0xcd, 0x59, 0xa0, 0x8b, 0xee, 0x1d, 0x4f, 0xb1, 0xda, 0xb4, 0xc5, 0xd7,
	0x22, 0xf2, 0xce, 0xb9, 0x72, 0xb5, 0xc0, 0x95, 0xbf, 0x5f, 0x87, 0xd5, 0x6f, 0xeb, 0x81, 0x71,
	0xb8, 0xed, 0x6c, 0x71, 0x26, 0x4f, 0x61, 0x04, 0x71, 0x6c, 0xab, 0x24, 0x63, 0xdb, 0xa7, 0x16,
	0x3b, 0x23, 0x3b, 0xaf, 0x17, 0xd9, 0x39, 0x2d, 0xb2, 0x37, 0xde, 0x17, 0xaa, 0x4a, 0xd8, 0x79,
	0x22, 0x07, 0x35, 0x9e, 0x26, 0x07, 0x6d, 0x41, 0x17, 0x7f, 0x68, 0xd8, 0x33, 0xaa, 0x73, 0x86,
	0x7d, 0x99, 0x61, 0x7f, 0xbe, 0x00, 0x7b, 0xd2, 0xc9, 0x3a, 0x62, 0xd1, 0xae, 0xa0, 0x81, 0xab,
	0xda, 0xc1, 0x81, 0x3e, 0x68, 0x32, 0x32, 0x2e, 0x95, 0xa9, 0x3a, 0xb4, 0x0f, 0xae, 0x6e, 0xfa,
	0x87, 0x2e, 0x40, 0x4b, 0x64, 0xbc, 0xdd, 0xed, 0x41, 0x8b, 0x89, 0x2f, 0x06, 0x20, 0x1d, 0xba,
	0x22, 0x02, 0x09, 0x0a, 0x81, 0x51, 0xf8, 0x76, 0x11, 0x82, 0x62, 0x65, 0x27, 0x29, 0x27, 0xef,
	0xb8, 0x81, 0x7f, 0xac, 0x76, 0x48, 0x02, 0x34, 0xd4, 0xe0, 0x4c, 0x6e, 0x0a, 0x92, 0xa1, 0xfa,
	0x10, 0x1f, 0x33, 0x03, 0xa9, 0xaa, 0xf4, 0x13, 0xbd, 0x0e, 0xf5, 0x23, 0xdd, 0x9e, 0x61, 0x66,
	0x00, 0xf3, 0x65, 0xc4, 0x27, 0x7f, 0xb5, 0xf2, 0xa6, 0xa4, 0x7c, 0x5c, 0x81, 0xe7, 0x38, 0x6d,
	0xd8, 0x0e, 0xf4, 0xcf, 0xd7, 0x16, 0x23, 0x3b, 0xab, 0x9d, 0xc8, 0xce, 0x2e, 0x02, 0x84, 0xc5,
	0x8a, 0x65, 0x8a, 0xf4, 0x1e, 0x69, 0xc9, 0x4c, 0x9b, 0x40, 0xeb, 0xa4, 0x26, 0xa0, 0xfc, 0xb1,
	0x06, 0x7d, 0x21, 0x3b, 0x3a, 0x83, 0x05, 0x90, 0x0b, 0xd0, 0x8a, 0x52, 0x8f, 0x50, 0x43, 0x0c,
	0x40, 0x97, 0xa0, 0x9d, 0x70, 0x1f, 0x21, 0x87, 0x24, 0x68, 0x21, 0x61, 0x84, 0x85, 0x44, 0x2d,
	0x51, 0x48, 0x5c, 0x04, 0x38, 0xb0, 0x67, 0xe4, 0x50, 0x0b, 0x2c, 0x07, 0x87, 0x9c, 0x32, 0xc8,
	0x3d, 0xcb, 0xc1, 0xe8, 0x06, 0x74, 0xc6, 0x96, 0x6b, 0x7b, 0x13, 0x6d, 0xaa, 0x07, 0x87, 0x64,
	0xd0, 0x28, 0x75, 0x98, 0x5b, 0x16, 0xb6, 0xcd, 0x9b, 0x6c, 0xae, 0xda, 0xe6, 0x6b, 0xf6, 0xe9,
	0x12, 0xf4, 0x3c, 0xb4, 0xdd, 0x99, 0xa3, 0x79, 0x07, 0x9a, 0xef, 0x3d, 0xa6, 0x2e, 0xc7, 0x50,
	0xb8, 0x33, 0xe7, 0xbd, 0x03, 0xd5, 0x7b, 0x4c, 0x43, 0x7f, 0x8b, 0x26, 0x01, 0x62, 0x7b, 0x13,
	0x32, 0x68, 0x2e, 0xb4, 0x7f, 0xbc, 0x80, 0xae, 0x36, 0xa9, 0x99, 0xb1, 0xd5, 0xad, 0xc5, 0x56,
	0x47, 0x0b, 0xd0, 0xcb, 0xd0, 0x33, 0x3c, 0x67, 0xaa, 0x33, 0x09, 0xdd, 0xf2, 0x3d, 0x87, 0xf9,
	0x5b, 0x55, 0xcd, 0x40, 0xd1, 0x16, 0xb4, 0x2d, 0xd7, 0xc4, 0x1f, 0x0a, 0xa7, 0x6c, 0x33, 0x3c,
	0x4a, 0x91, 0xca, 0x19, 0xa2, 0x5d, 0x3a, 0x97, 0x29, 0x1d, 0xac, 0xf0, 0x93, 0xd0, 0x8c, 0x14,
	0xfa, 0x36, 0xb1, 0x3e, 0xc2, 0x83, 0x0e, 0xd7, 0xa2, 0x80, 0x8d, 0xac, 0x8f, 0x30, 0x2d, 0x92,
	0x2d, 0x97, 0x60, 0x3f, 0xd0, 0x84, 0x51, 0x0e, 0xba, 0x2c, 0x6d, 0x75, 0x39, 0x54, 0xf8, 0x92,
	0xf2, 0xdb, 0x0a, 0xf4, 0xd2, 0x88, 0xd0, 0x00, 0x96, 0x0f, 0x18, 0x24, 0xb4, 0x9e, 0xf0, 0x97,
	0xa2, 0xc5, 0x2e, 0xed, 0xa0, 0x35, 0x46, 0x0b, 0x33, 0x9e, 0xa6, 0xda, 0xe6, 0x30, 0xb6, 0x01,
	0x35, 0x02, 0xce, 0x1e, 0xcb, 0x94, 0x55, 0x86, 0xb2, 0xc5, 0x20, 0x2c, 0x4f, 0x0e, 0x60, 0x99,
	0xb3, 0x11, 0x9a, 0x4e, 0xf8, 0x4b, 0x47, 0xc6, 0x33, 0x8b, 0x61, 0xe5, 0xa6, 0x13, 0xfe, 0xa2,
	0x6d, 0xe8, 0xf0, 0x2d, 0xa7, 0xba, 0xaf, 0x3b, 0xa1, 0xe1, 0xbc, 0x58, 0xe8, 0xee, 0xb7, 0xf1,
	0xf1, 0xfb, 0x34, 0x7a, 0xec, 0xeb, 0x96, 0xaf, 0x72, 0x41, 0xef, 0xb3, 0x55, 0x68, 0x0d, 0x64,
	0xbe, 0xcb, 0x81, 0x65, 0x63, 0x61, 0x82, 0xcb, 0x2c, 0x19, 0xf7, 0x18, 0xfc, 0x96, 0x65, 0x63,
	0x6e, 0x65, 0x11, 0x0b, 0x4c, 0xb4, 0x4d, 0x6e, 0x64, 0x0c, 0x42, 0x05, 0xab, 0xfc, 0xb5, 0x0a,
	0x2b, 0xd4, 0xd7, 0x84, 0xdb, 0x9d, 0x22, 0x1a, 0x5d, 0x04, 0x30, 0x49, 0xa0, 0xa5, 0x22, 0x52,
	0xcb, 0x24, 0xc1, 0x1e, 0x0f, 0x4a, 0x6f, 0x85, 0x01, 0xa7, 0x5a, 0x5e, 0xeb, 0x66, 0x7c, 0x3f,
	0x9f, 0xdc, 0x9e, 0xaa, 0x1b, 0xbe, 0x0c, 0x5d, 0xe2, 0xcd, 0x7c, 0x03, 0x6b, 0xa9, 0xae, 0xa4,
	0xc3, 0x81, 0x7b, 0xc5, 0x31, 0xb3, 0x51, 0xd8, 0x95, 0x27, 0xa2, 0xdb, 0xf2, 0xe9, 0x12, 0x5c,
	0x33, 0x9b, 0xe0, 0x6e, 0x43, 0x9f, 0xb9, 0x9f, 0x36, 0xf5, 0x08, 0x6f, 0xee, 0x84, 0xd7, 0x66,
	0xbc, 0x29, 0x3a, 0x85, 0xbb, 0x4b, 0x26, 0xfb, 0x62, 0xaa, 0xda, 0x63, 0x4b, 0xc3, 0x5f, 0xa2,
	0xfc, 0xac, 0x02, 0xab, 0xa2, 0x59, 0x3c, 0xbd, 0x62, 0xcb, 0xd2, 0x4c, 0x18, 0x35, 0xab, 0x4f,
	0x68, 0xbf, 0x6a, 0x0b, 0x94, 0x41, 0xf5, 0x82, 0x32, 0x28, 0xdd, 0x82, 0x34, 0x72, 0x2d, 0xc8,
	0x75, 0xa8, 0x13, 0xc3, 0x9b, 0x62, 0xa6, 0x86, 0xde, 0xe6, 0xc5, 0x22, 0x35, 0x6c, 0xeb, 0x81,
	0x3e, 0xa2, 0x93, 0x54, 0x3e, 0x57, 0xf9, 0x87, 0x04, 0xdd, 0x11, 0xd6, 0x7d, 0xe3, 0x30, 0x14,
	0xc6, 0x1b, 0x50, 0xf5, 0xf1, 0x23, 0x21, 0x8b, 0x97, 0x4a, 0x04, 0x9d, 0x5a, 0xa2, 0xd2, 0x05,
	0xe8, 0x05, 0x68, 0x9b, 0x8e, 0x1d, 0xc5, 0xa2, 0x0a, 0x0b, 0x0c, 0x60, 0x3a, 0xb6, 0x08, 0x44,
	0x19, 0xfa, 0xab, 0x39, 0xfa, 0xd7, 0xe1, 0xcc, 0x81, 0xef, 0x39, 0x1a, 0xab, 0xd3, 0x35, 0x9b,
	0x95, 0xe7, 0x4c, 0x58, 0x4d, 0xb5, 0x4f, 0x07, 0x12, 0x55, 0x7b, 0xcc, 0x6b, 0xfd, 0x04, 0xbc,
	0xfe, 0x53, 0x82, 0xce, 0xb7, 0xe8, 0x50, 0xc8, 0xea, 0x9b, 0x49, 0x56, 0x5f, 0x2e, 0x61, 0x55,
	0xc5, 0x81, 0x6f, 0xe1, 0x23, 0xfc, 0x5f, 0xc6, 0xec, 0x9f, 0x25, 0x18, 0x8e, 0x8e, 0x5d, 0x43,
	0xe5, 0xde, 0x74, 0x7a, 0x93, 0xbf, 0x0c, 0xdd, 0xa3, 0x54, 0x93, 0xc4, 0x99, 0xee, 0x1c, 0x25,
	0xbb, 0x24, 0x15, 0xe4, 0xb0, 0x16, 0x12, 0xcc, 0x86, 0xc1, 0xed, 0x95, 0x22, 0xaa, 0x33, 0xc4,
	0xb1, 0xe0, 0xd0, 0xf7, 0xd3, 0x40, 0xc5, 0x87, 0x95, 0x82, 0x79, 0xe8, 0x3c, 0x2c, 0x8b, 0x86,
	0x4c, 0x24, 0x31, 0xee, 0x83, 0x26, 0xcd, 0x61, 0xf1, 0x91, 0x82, 0x65, 0xe6, 0x0b, 0x20, 0x93,
	0xaa, 0x2f, 0xaa, 0x9c, 0xcd, 0x9c, 0x7a, 0x4c, 0xa2, 0xfc, 0x41, 0x82, 0xd5, 0x77, 0x75, 0xd7,
	0xf4, 0x0e, 0x0e, 0x4e, 0x2f, 0xb9, 0x2d, 0x48, 0x15, 0xd5, 0x8b, 0xb6, 0xeb, 0xa9, 0x45, 0xe8,
	0x55, 0x38, 0xe3, 0xf3, 0xe8, 0x65, 0xa6, 0x45, 0x5b, 0x55, 0xe5, 0x70, 0x20, 0x12, 0xd9, 0x6f,
	0x2a, 0x80, 0x68, 0xc4, 0xbd, 0xa9, 0xdb, 0xba, 0x6b, 0xe0, 0xa7, 0x27, 0xfd, 0x0a, 0xf4, 0x52,
	0x79, 0x22, 0x3a, 0xd9, 0x4f, 0x26, 0x0a, 0x82, 0x6e, 0x43, 0x6f, 0xcc, 0x51, 0x69, 0x3e, 0xd6,
	0x89, 0xe7, 0xb2, 0x00, 0xd8, 0x2b, 0xee, 0xcc, 0xef, 0xf9, 0xd6, 0x64, 0x82, 0xfd, 0x2d, 0xcf,
	0x35, 0x79, 0xa4, 0xee, 0x8e, 0x43, 0x32, 0xe9, 0x52, 0xe6, 0x5b, 0x51, 0xd2, 0x0c, 0x3b, 0x42,
	0x88, 0xb2, 0x26, 0x13, 0x05, 0xc1, 0xba, 0x1d, 0x0b, 0x22, 0x8e, 0x98, 0x32, 0x1f, 0x18, 0x95,
	0x1f, 0xcc, 0x14, 0x24, 0x31, 0xe5, 0x77, 0x12, 0xa0, 0xa8, 0x37, 0x62, 0xdd, 0x08, 0xb3, 0xb0,
	0xec, 0x52, 0xa9, 0x20, 0x70, 0x5f, 0x80, 0x96, 0x19, 0xae, 0x14, 0x1e, 0x11, 0x03, 0xa8, 0xcf,
	0x70, 0x36, 0x34, 0x9a, 0xf1, 0xb0, 0x19, 0x56, 0xda, 0x1c, 0x78, 0x87, 0xc1, 0xd2, 0x39, 0xb0,
	0x96, 0xcd, 0x81, 0xc9, 0x73, 0x87, 0x7a, 0xea, 0xdc, 0x41, 0xf9, 0xa4, 0x02, 0x32, 0x8b, 0x67,
	0x5b, 0x71, 0x53, 0xb2, 0x10, 0xd1, 0x97, 0xa1, 0x2b, 0xee, 0xbe, 0x52, 0x84, 0x77, 0x1e, 0x25,
	0x36, 0x43, 0xd7, 0xe0, 0x2c, 0x9f, 0xe4, 0x63, 0x32, 0xb3, 0xe3, 0x22, 0x93, 0x57, 0x7c, 0xe8,
	0x11, 0x0f, 0xa4, 0x74, 0x28, 0x5c, 0x71, 0x1f, 0x56, 0x27, 0xb6, 0x37, 0xd6, 0x6d, 0x2d, 0xad,
	0x9e, 0x92, 0x86, 0x2a, 0x6f, 0xf1, 0x67, 0xf9, 0xf2, 0x51, 0x52, 0x87, 0x04, 0xed, 0xd0, 0x36,
	0x17, 0x3f, 0x8c, 0x8a, 0x00, 0x71, 0xa4, 0xbc, 0x48, 0x0d, 0xd0, 0xa1, 0x0b, 0xc3, 0x3f, 0xe5,
	0x63, 0x09, 0xfa, 0x99, 0xa3, 0xc3, 0x6c, 0xb3, 0x24, 0xe5, 0x9b, 0xa5, 0x37, 0xa1, 0x4e, 0x3b,
	0x08, 0x1e, 0xef, 0x7a, 0xc5, 0x85, 0x7c, 0x7a, 0x57, 0x95, 0x2f, 0x40, 0x57, 0x61, 0xa5, 0xe0,
	0xa2, 0x45, 0xd8, 0x00, 0xca, 0xdf, 0xb3, 0x28, 0xbf, 0xaf, 0x41, 0x3b, 0x21, 0x8f, 0x39, 0x7d,
	0xde, 0x22, 0x67, 0x41, 0x19, 0xf6, 0xaa, 0x79, 0xf6, 0x4a, 0x6e, 0x1a, 0xa8, 0xdd, 0x39, 0xd8,
	0xe1, 0x15, 0xb2, 0x28, 0xd7, 0x1d, 0xec, 0xb0, 0xc6, 0x83, 0x9a, 0xe4, 0xcc, 0xe1, 0x1d, 0x1a,
	0x77, 0xa7, 0x65, 0x77, 0xe6, 0xb0, 0xfe, 0x2c, 0xdd, 0x1c, 0x2c, 0x3f, 0xa1, 0x39, 0x68, 0xa6,
	0x9b, 0x83, 0x94, 0x1f, 0xb5, 0xb2, 0x7e, 0xb4, 0x68, 0xeb, 0x75, 0x0d, 0x56, 0x0c, 0x1f, 0xeb,
	0x01, 0x36, 0x6f, 0x1e, 0x6f, 0x45, 0x43, 0x83, 0x36, 0xcb, 0xab, 0x45, 0x43, 0xe8, 0x56, 0x7c,
	0x86, 0xc2, 0xb5, 0xdc, 0x61, 0x5a, 0x2e, 0xee, 0x3d, 0x84, 0x6e, 0xb8, 0x92, 0xc3, 0xf0, 0xcc,
	0xfe, 0xb2, 0x4d, 0x5f, 0xf7, 0xa9, 0x9a, 0xbe, 0x17, 0xa0, 0x1d, 0x9f, 0x24, 0x90, 0x41, 0x8f,
	0x47, 0xbe, 0xe8, 0x28, 0x81, 0xa4, 0x82, 0x41, 0x3f, 0x1d, 0x0c, 0xfe, 0x52, 0x85, 0x5e, 0x5c,
	0xee, 0x2f, 0x1c, 0x0a, 0x16, 0xb9, 0x30, 0xdc, 0x03, 0x39, 0x4e, 0xa8, 0x4c, 0x4a, 0x4f, 0xec,
	0x58, 0xb2, 0xa7, 0xf3, 0xfd, 0x69, 0xc6, 0xe7, 0x52, 0xe7, 0x9f, 0xb5, 0x13, 0x9d, 0x7f, 0x9e,
	0xf2, 0x5e, 0xe9, 0x3a, 0x9c, 0x8b, 0x92, 0x68, 0x8a, 0x6d, 0x5e, 0x4d, 0x9f, 0x0d, 0x07, 0xf7,
	0x93, 0xec, 0x97, 0xb8, 0xf1, 0x72, 0x99, 0x1b, 0x67, 0xd5, 0xd8, 0xcc, 0xa9, 0x31, 0x7f, 0xbd,
	0xd5, 0x2a, 0xba, 0xde, 0xba, 0x0f, 0x2b, 0xf7, 0x5d, 0x32, 0x1b, 0x13, 0xc3, 0xb7, 0xc6, 0x38,
	0x3c, 0x1b, 0x5b, 0x48, 0xad, 0x43, 0x68, 0x8a, 0x78, 0xcd, 0x55, 0xda, 0x52, 0xa3, 0x7f, 0xe5,
	0x87, 0x12, 0xac, 0xe6, 0xf7, 0x65, 0x16, 0x13, 0x07, 0x03, 0x29, 0x15, 0x0c, 0xbe, 0x03, 0x2b,
	0xf1, 0xf6, 0x5a, 0x6a, 0xe7, 0x92, 0xca, 0xae, 0x80, 0x70, 0x15, 0xc5, 0x7b, 0x84, 0x30, 0xe5,
	0x5f, 0x52, 0x74, 0xc2, 0x48, 0x61, 0x13, 0x76, 0x6e, 0x4a, 0x13, 0x94, 0xe7, 0xda, 0x96, 0x1b,
	0xb5, 0xa7, 0x82, 0x47, 0x0e, 0x14, 0xed, 0xe9, 0xbb, 0xd0, 0x17, 0x93, 0xa2, 0x3c, 0xb3, 0x60,
	0x65, 0xd5, 0xe3, 0xeb, 0xa2, 0x0c, 0x73, 0x05, 0x7a, 0xde, 0xc1, 0x41, 0x12, 0x1f, 0x0f, 0x94,
	0x5d, 0x01, 0x15, 0x08, 0xbf, 0x09, 0x72, 0x38, 0xed, 0xa4, 0x99, 0xad, 0x2f, 0x16, 0x46, 0x15,
	0xda, 0x0f, 0x24, 0x18, 0xa4, 0xf3, 0x5c, 0x82, 0xfd, 0x93, 0xd7, 0x69, 0x5f, 0x4b, 0x5f, 0x05,
	0x5d, 0x79, 0x02, 0x3d, 0x31, 0x1e, 0x71, 0x96, 0xb0, 0xfe, 0x0d, 0x68, 0x45, 0xed, 0x03, 0x6a,
	0xc3, 0xf2, 0x7d, 0xf7, 0xb6, 0xeb, 0x3d, 0x76, 0xe5, 0x25, 0xb4, 0x0c, 0xd5, 0x1b, 0xb6, 0x2d,
	0x4b, 0xa8, 0x0b, 0xad, 0x51, 0xe0, 0x63, 0xdd, 0xb1, 0xdc, 0x89, 0x5c, 0x41, 0x3d, 0x80, 0x77,
	0x2d, 0x12, 0x78, 0xbe, 0x65, 0xe8, 0xb6, 0x5c, 0x5d, 0xff, 0x08, 0x7a, 0x69, 0xaf, 0x47, 0x1d,
	0x68, 0xee, 0x79, 0xc1, 0x3b, 0x1f, 0x5a, 0x24, 0x90, 0x97, 0xe8, 0xfc, 0x3d, 0x2f, 0xd8, 0xf7,
	0x31, 0xc1, 0x6e, 0x20, 0x4b, 0x08, 0xa0, 0xf1, 0x9e, 0xbb, 0x6d, 0x91, 0x87, 0x72, 0x05, 0xad,
	0x88, 0xa4, 0xac, 0xdb, 0xbb, 0xc2, 0x95, 0xe4, 0x2a, 0x5d, 0x1e, 0xfd, 0xd5, 0x90, 0x0c, 0x9d,
	0x68, 0xca, 0xce, 0xfe, 0x7d, 0xb9, 0x8e, 0x5a, 0x50, 0xe7, 0x9f, 0x8d, 0x75, 0x13, 0xe4, 0x6c,
	0x45, 0x49, 0xf7, 0xe4, 0x4c, 0x44, 0x20, 0x79, 0x89, 0x72, 0x26, 0x4a, 0x7a, 0x59, 0x42, 0x7d,
	0x68, 0x27, 0x0a, 0x64, 0xb9, 0x42, 0x01, 0x3b, 0xfe, 0xd4, 0x10, 0xa5, 0x32, 0x27, 0x81, 0xea,
	0x7d, 0x9b, 0x4a, 0xa2, 0xb6, 0x7e, 0x13, 0x9a, 0x61, 0x38, 0xa2, 0x53, 0x85, 0x88, 0xe8, 0xaf,
	0xbc, 0x84, 0xce, 0x40, 0x37, 0x75, 0x29, 0x2f, 0x4b, 0x08, 0x41, 0x2f, 0xfd, 0x60, 0x42, 0xae,
	0x6c, 0xfe, 0xa2, 0x03, 0xc0, 0xeb, 0x35, 0xcf, 0xf3, 0x4d, 0x34, 0x05, 0xb4, 0x83, 0x03, 0x9a,
	0x8b, 0x3c, 0x37, 0xcc, 0x23, 0x04, 0x5d, 0x2b, 0x29, 0x6b, 0xf2, 0x53, 0x05, 0xa9, 0xc3, 0xb2,
	0xc6, 0x35, 0x33, 0x5d, 0x59, 0x42, 0x0e, 0xc3, 0x78, 0xcf, 0x72, 0xf0, 0x3d, 0xcb, 0x78, 0x18,
	0x15, 0x7a, 0xe5, 0x18, 0x33, 0x53, 0x43, 0x8c, 0x99, 0xb0, 0x2f, 0x7e, 0x46, 0x81, 0x6f, 0xb9,
	0x93, 0xf0, 0x6a, 0x4f, 0x59, 0x42, 0x8f, 0xe0, 0xec, 0x0e, 0x66, 0xd8, 0x2d, 0x12, 0x58, 0x06,
	0x09, 0x11, 0x6e, 0x96, 0x23, 0xcc, 0x4d, 0x3e, 0x21, 0x4a, 0x1b, 0xfa, 0x99, 0x87, 0x4d, 0x68,
	0xbd, 0xf8, 0x76, 0xb0, 0xe8, 0x11, 0xd6, 0xf0, 0xd5, 0x85, 0xe6, 0x46, 0xd8, 0x2c, 0xe8, 0xa5,
	0x1f, 0xef, 0xa0, 0xff, 0x2f, 0xdb, 0x20, 0xf7, 0x3e, 0x61, 0xb8, 0xbe, 0xc8, 0xd4, 0x08, 0xd5,
	0x03, 0x6e, 0x4f, 0xf3, 0x50, 0x15, 0xbe, 0x0d, 0x19, 0x3e, 0xe9, 0x56, 0x55, 0x59, 0x42, 0xdf,
	0x85, 0x33, 0xb9, 0x57, 0x14, 0xe8, 0x4b, 0xc5, 0xfd, 0x7a, 0xf1, 0x63, 0x8b, 0x79, 0x18, 0x1e,
	0x64, 0xbd, 0xa1, 0x9c, 0xfa, 0xdc, 0xab, 0x9b, 0xc5, 0xa9, 0x4f, 0x6c, 0xff, 0x24, 0xea, 0x4f,
	0x8c, 0x61, 0xc6, 0xdc, 0x26, 0xdb, 0x39, 0xbc, 0x56, 0x84, 0xa2, 0xf4, 0x29, 0xc7, 0x70, 0x63,
	0xd1, 0xe9, 0x49, 0xeb, 0x4a, 0xbf, 0x16, 0x28, 0x16, 0x5a, 0xe1, 0x0b, 0x87, 0x62, 0xeb, 0x2a,
	0x7e, 0x7c, 0xa0, 0x2c, 0xa1, 0x7b, 0xa9, 0x68, 0x88, 0x5e, 0x2e, 0x53, 0x4e, 0xfa, 0x3c, 0x61,
	0x9e, 0xdc, 0x34, 0x80, 0x1d, 0x1c, 0xdc, 0xc5, 0x81, 0x6f, 0x19, 0x24, 0xbb, 0xa9, 0xf8, 0x89,
	0x27, 0x84, 0x9b, 0xbe, 0x32, 0x77, 0x5e, 0x44, 0xf6, 0x18, 0xda, 0x3b, 0x38, 0x10, 0x87, 0x43,
	0x04, 0x95, 0xae, 0x0c, 0x67, 0x84, 0x28, 0xd6, 0xe6, 0x4f, 0x4c, 0x46, 0x94, 0xcc, 0xe3, 0x05,
	0x54, 0x2a, 0xdb, 0xfc, 0x93, 0x8a, 0xe2, 0x88, 0x52, 0xf2, 0x1a, 0x42, 0x59, 0xda, 0xfc, 0x37,
	0x40, 0x8b, 0xa5, 0x08, 0x9a, 0x7a, 0xfe, 0x97, 0x21, 0x9e, 0x41, 0x86, 0xf8, 0x00, 0xfa, 0x99,
	0xbb, 0xf0, 0x62, 0x7d, 0x16, 0x5f, 0x98, 0xcf, 0x33, 0xf9, 0x31, 0xa0, 0xfc, 0x6d, 0x76, 0x71,
	0xa8, 0x28, 0xbd, 0xf5, 0x9e, 0x87, 0xe3, 0x7d, 0xfe, 0x9c, 0x24, 0xaa, 0x5e, 0x5f, 0x29, 0xf3,
	0xd6, 0xcc, 0xc9, 0xe5, 0xe7, 0x1f, 0x48, 0x9f, 0x7d, 0xa2, 0xf9, 0x00, 0xfa, 0x99, 0x3b, 0x9e,
	0x62, 0xed, 0x16, 0x5f, 0x04, 0xcd, 0xdb, 0xfd, 0x33, 0x8c, 0xc8, 0x26, 0xac, 0x14, 0x9c, 0xde,
	0xa3, 0xc2, 0x2c, 0x52, 0x7e, 0xcc, 0x3f, 0x8f, 0xa1, 0x11, 0x34, 0xf8, 0x4d, 0x0e, 0x7a, 0xb1,
	0xb8, 0x63, 0x48, 0xdc, 0xf2, 0x0c, 0xe7, 0xdd, 0x05, 0x91, 0x99, 0x1d, 0xf0, 0x4d, 0xeb, 0x2c,
	0x84, 0xa1, 0xc2, 0x8b, 0xc0, 0xe4, 0x05, 0xcc, 0x70, 0xfe, 0x9d, 0x4b, 0xb8, 0xe9, 0xb3, 0xce,
	0x25, 0x37, 0x5f, 0x7f, 0xb0, 0x39, 0xb1, 0x82, 0xc3, 0xd9, 0x98, 0x0a, 0xe9, 0x2a, 0x9f, 0xf9,
	0x9a, 0xe5, 0x89, 0xaf, 0xab, 0x21, 0x69, 0x57, 0xd9, 0x4e, 0x57, 0x19, 0x2f, 0xd3, 0xf1, 0xb8,
	0xc1, 0x7e, 0xaf, 0xff, 0x27, 0x00, 0x00, 0xff, 0xff, 0x98, 0x70, 0x46, 0x0e, 0x4c, 0x30, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryCoordClient is the client API for QueryCoord service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryCoordClient interface {
	GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error)
	GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	ShowCollections(ctx context.Context, in *ShowCollectionsRequest, opts ...grpc.CallOption) (*ShowCollectionsResponse, error)
	ShowPartitions(ctx context.Context, in *ShowPartitionsRequest, opts ...grpc.CallOption) (*ShowPartitionsResponse, error)
	LoadPartitions(ctx context.Context, in *LoadPartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ReleasePartitions(ctx context.Context, in *ReleasePartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	LoadCollection(ctx context.Context, in *LoadCollectionRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ReleaseCollection(ctx context.Context, in *ReleaseCollectionRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	GetPartitionStates(ctx context.Context, in *GetPartitionStatesRequest, opts ...grpc.CallOption) (*GetPartitionStatesResponse, error)
	GetSegmentInfo(ctx context.Context, in *GetSegmentInfoRequest, opts ...grpc.CallOption) (*GetSegmentInfoResponse, error)
	LoadBalance(ctx context.Context, in *LoadBalanceRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
	GetMetrics(ctx context.Context, in *milvuspb.GetMetricsRequest, opts ...grpc.CallOption) (*milvuspb.GetMetricsResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+23+--+Multiple+memory+replication+design
	GetReplicas(ctx context.Context, in *milvuspb.GetReplicasRequest, opts ...grpc.CallOption) (*milvuspb.GetReplicasResponse, error)
	GetShardLeaders(ctx context.Context, in *GetShardLeadersRequest, opts ...grpc.CallOption) (*GetShardLeadersResponse, error)
}

type queryCoordClient struct {
	cc *grpc.ClientConn
}

func NewQueryCoordClient(cc *grpc.ClientConn) QueryCoordClient {
	return &queryCoordClient{cc}
}

func (c *queryCoordClient) GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error) {
	out := new(internalpb.ComponentStates)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetComponentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetTimeTickChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetStatisticsChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ShowCollections(ctx context.Context, in *ShowCollectionsRequest, opts ...grpc.CallOption) (*ShowCollectionsResponse, error) {
	out := new(ShowCollectionsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ShowCollections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ShowPartitions(ctx context.Context, in *ShowPartitionsRequest, opts ...grpc.CallOption) (*ShowPartitionsResponse, error) {
	out := new(ShowPartitionsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ShowPartitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) LoadPartitions(ctx context.Context, in *LoadPartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/LoadPartitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ReleasePartitions(ctx context.Context, in *ReleasePartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ReleasePartitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) LoadCollection(ctx context.Context, in *LoadCollectionRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/LoadCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) ReleaseCollection(ctx context.Context, in *ReleaseCollectionRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/ReleaseCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetPartitionStates(ctx context.Context, in *GetPartitionStatesRequest, opts ...grpc.CallOption) (*GetPartitionStatesResponse, error) {
	out := new(GetPartitionStatesResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetPartitionStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetSegmentInfo(ctx context.Context, in *GetSegmentInfoRequest, opts ...grpc.CallOption) (*GetSegmentInfoResponse, error) {
	out := new(GetSegmentInfoResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetSegmentInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) LoadBalance(ctx context.Context, in *LoadBalanceRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/LoadBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetMetrics(ctx context.Context, in *milvuspb.GetMetricsRequest, opts ...grpc.CallOption) (*milvuspb.GetMetricsResponse, error) {
	out := new(milvuspb.GetMetricsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetReplicas(ctx context.Context, in *milvuspb.GetReplicasRequest, opts ...grpc.CallOption) (*milvuspb.GetReplicasResponse, error) {
	out := new(milvuspb.GetReplicasResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetReplicas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryCoordClient) GetShardLeaders(ctx context.Context, in *GetShardLeadersRequest, opts ...grpc.CallOption) (*GetShardLeadersResponse, error) {
	out := new(GetShardLeadersResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryCoord/GetShardLeaders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryCoordServer is the server API for QueryCoord service.
type QueryCoordServer interface {
	GetComponentStates(context.Context, *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error)
	GetTimeTickChannel(context.Context, *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(context.Context, *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error)
	ShowCollections(context.Context, *ShowCollectionsRequest) (*ShowCollectionsResponse, error)
	ShowPartitions(context.Context, *ShowPartitionsRequest) (*ShowPartitionsResponse, error)
	LoadPartitions(context.Context, *LoadPartitionsRequest) (*commonpb.Status, error)
	ReleasePartitions(context.Context, *ReleasePartitionsRequest) (*commonpb.Status, error)
	LoadCollection(context.Context, *LoadCollectionRequest) (*commonpb.Status, error)
	ReleaseCollection(context.Context, *ReleaseCollectionRequest) (*commonpb.Status, error)
	GetPartitionStates(context.Context, *GetPartitionStatesRequest) (*GetPartitionStatesResponse, error)
	GetSegmentInfo(context.Context, *GetSegmentInfoRequest) (*GetSegmentInfoResponse, error)
	LoadBalance(context.Context, *LoadBalanceRequest) (*commonpb.Status, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
	GetMetrics(context.Context, *milvuspb.GetMetricsRequest) (*milvuspb.GetMetricsResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+23+--+Multiple+memory+replication+design
	GetReplicas(context.Context, *milvuspb.GetReplicasRequest) (*milvuspb.GetReplicasResponse, error)
	GetShardLeaders(context.Context, *GetShardLeadersRequest) (*GetShardLeadersResponse, error)
}

// UnimplementedQueryCoordServer can be embedded to have forward compatible implementations.
type UnimplementedQueryCoordServer struct {
}

func (*UnimplementedQueryCoordServer) GetComponentStates(ctx context.Context, req *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComponentStates not implemented")
}
func (*UnimplementedQueryCoordServer) GetTimeTickChannel(ctx context.Context, req *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeTickChannel not implemented")
}
func (*UnimplementedQueryCoordServer) GetStatisticsChannel(ctx context.Context, req *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatisticsChannel not implemented")
}
func (*UnimplementedQueryCoordServer) ShowCollections(ctx context.Context, req *ShowCollectionsRequest) (*ShowCollectionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowCollections not implemented")
}
func (*UnimplementedQueryCoordServer) ShowPartitions(ctx context.Context, req *ShowPartitionsRequest) (*ShowPartitionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowPartitions not implemented")
}
func (*UnimplementedQueryCoordServer) LoadPartitions(ctx context.Context, req *LoadPartitionsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadPartitions not implemented")
}
func (*UnimplementedQueryCoordServer) ReleasePartitions(ctx context.Context, req *ReleasePartitionsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleasePartitions not implemented")
}
func (*UnimplementedQueryCoordServer) LoadCollection(ctx context.Context, req *LoadCollectionRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadCollection not implemented")
}
func (*UnimplementedQueryCoordServer) ReleaseCollection(ctx context.Context, req *ReleaseCollectionRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseCollection not implemented")
}
func (*UnimplementedQueryCoordServer) GetPartitionStates(ctx context.Context, req *GetPartitionStatesRequest) (*GetPartitionStatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPartitionStates not implemented")
}
func (*UnimplementedQueryCoordServer) GetSegmentInfo(ctx context.Context, req *GetSegmentInfoRequest) (*GetSegmentInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSegmentInfo not implemented")
}
func (*UnimplementedQueryCoordServer) LoadBalance(ctx context.Context, req *LoadBalanceRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadBalance not implemented")
}
func (*UnimplementedQueryCoordServer) GetMetrics(ctx context.Context, req *milvuspb.GetMetricsRequest) (*milvuspb.GetMetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetrics not implemented")
}
func (*UnimplementedQueryCoordServer) GetReplicas(ctx context.Context, req *milvuspb.GetReplicasRequest) (*milvuspb.GetReplicasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReplicas not implemented")
}
func (*UnimplementedQueryCoordServer) GetShardLeaders(ctx context.Context, req *GetShardLeadersRequest) (*GetShardLeadersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShardLeaders not implemented")
}

func RegisterQueryCoordServer(s *grpc.Server, srv QueryCoordServer) {
	s.RegisterService(&_QueryCoord_serviceDesc, srv)
}

func _QueryCoord_GetComponentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetComponentStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetComponentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetComponentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetComponentStates(ctx, req.(*internalpb.GetComponentStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetTimeTickChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetTimeTickChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetTimeTickChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetTimeTickChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetTimeTickChannel(ctx, req.(*internalpb.GetTimeTickChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetStatisticsChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetStatisticsChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetStatisticsChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetStatisticsChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetStatisticsChannel(ctx, req.(*internalpb.GetStatisticsChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ShowCollections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowCollectionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ShowCollections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ShowCollections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ShowCollections(ctx, req.(*ShowCollectionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ShowPartitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowPartitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ShowPartitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ShowPartitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ShowPartitions(ctx, req.(*ShowPartitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_LoadPartitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadPartitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).LoadPartitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/LoadPartitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).LoadPartitions(ctx, req.(*LoadPartitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ReleasePartitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleasePartitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ReleasePartitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ReleasePartitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ReleasePartitions(ctx, req.(*ReleasePartitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_LoadCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).LoadCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/LoadCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).LoadCollection(ctx, req.(*LoadCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_ReleaseCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).ReleaseCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/ReleaseCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).ReleaseCollection(ctx, req.(*ReleaseCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetPartitionStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPartitionStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetPartitionStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetPartitionStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetPartitionStates(ctx, req.(*GetPartitionStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetSegmentInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSegmentInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetSegmentInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetSegmentInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetSegmentInfo(ctx, req.(*GetSegmentInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_LoadBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).LoadBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/LoadBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).LoadBalance(ctx, req.(*LoadBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.GetMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetMetrics(ctx, req.(*milvuspb.GetMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetReplicas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.GetReplicasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetReplicas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetReplicas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetReplicas(ctx, req.(*milvuspb.GetReplicasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryCoord_GetShardLeaders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShardLeadersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryCoordServer).GetShardLeaders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryCoord/GetShardLeaders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryCoordServer).GetShardLeaders(ctx, req.(*GetShardLeadersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueryCoord_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milvus.proto.query.QueryCoord",
	HandlerType: (*QueryCoordServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetComponentStates",
			Handler:    _QueryCoord_GetComponentStates_Handler,
		},
		{
			MethodName: "GetTimeTickChannel",
			Handler:    _QueryCoord_GetTimeTickChannel_Handler,
		},
		{
			MethodName: "GetStatisticsChannel",
			Handler:    _QueryCoord_GetStatisticsChannel_Handler,
		},
		{
			MethodName: "ShowCollections",
			Handler:    _QueryCoord_ShowCollections_Handler,
		},
		{
			MethodName: "ShowPartitions",
			Handler:    _QueryCoord_ShowPartitions_Handler,
		},
		{
			MethodName: "LoadPartitions",
			Handler:    _QueryCoord_LoadPartitions_Handler,
		},
		{
			MethodName: "ReleasePartitions",
			Handler:    _QueryCoord_ReleasePartitions_Handler,
		},
		{
			MethodName: "LoadCollection",
			Handler:    _QueryCoord_LoadCollection_Handler,
		},
		{
			MethodName: "ReleaseCollection",
			Handler:    _QueryCoord_ReleaseCollection_Handler,
		},
		{
			MethodName: "GetPartitionStates",
			Handler:    _QueryCoord_GetPartitionStates_Handler,
		},
		{
			MethodName: "GetSegmentInfo",
			Handler:    _QueryCoord_GetSegmentInfo_Handler,
		},
		{
			MethodName: "LoadBalance",
			Handler:    _QueryCoord_LoadBalance_Handler,
		},
		{
			MethodName: "GetMetrics",
			Handler:    _QueryCoord_GetMetrics_Handler,
		},
		{
			MethodName: "GetReplicas",
			Handler:    _QueryCoord_GetReplicas_Handler,
		},
		{
			MethodName: "GetShardLeaders",
			Handler:    _QueryCoord_GetShardLeaders_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "query_coord.proto",
}

// QueryNodeClient is the client API for QueryNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryNodeClient interface {
	GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error)
	GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	WatchDmChannels(ctx context.Context, in *WatchDmChannelsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	WatchDeltaChannels(ctx context.Context, in *WatchDeltaChannelsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	LoadSegments(ctx context.Context, in *LoadSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ReleaseCollection(ctx context.Context, in *ReleaseCollectionRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ReleasePartitions(ctx context.Context, in *ReleasePartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ReleaseSegments(ctx context.Context, in *ReleaseSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	GetSegmentInfo(ctx context.Context, in *GetSegmentInfoRequest, opts ...grpc.CallOption) (*GetSegmentInfoResponse, error)
	SyncReplicaSegments(ctx context.Context, in *SyncReplicaSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*internalpb.SearchResults, error)
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*internalpb.RetrieveResults, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
	GetMetrics(ctx context.Context, in *milvuspb.GetMetricsRequest, opts ...grpc.CallOption) (*milvuspb.GetMetricsResponse, error)
}

type queryNodeClient struct {
	cc *grpc.ClientConn
}

func NewQueryNodeClient(cc *grpc.ClientConn) QueryNodeClient {
	return &queryNodeClient{cc}
}

func (c *queryNodeClient) GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error) {
	out := new(internalpb.ComponentStates)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/GetComponentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/GetTimeTickChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/GetStatisticsChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) WatchDmChannels(ctx context.Context, in *WatchDmChannelsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/WatchDmChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) WatchDeltaChannels(ctx context.Context, in *WatchDeltaChannelsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/WatchDeltaChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) LoadSegments(ctx context.Context, in *LoadSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/LoadSegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) ReleaseCollection(ctx context.Context, in *ReleaseCollectionRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/ReleaseCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) ReleasePartitions(ctx context.Context, in *ReleasePartitionsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/ReleasePartitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) ReleaseSegments(ctx context.Context, in *ReleaseSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/ReleaseSegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) GetSegmentInfo(ctx context.Context, in *GetSegmentInfoRequest, opts ...grpc.CallOption) (*GetSegmentInfoResponse, error) {
	out := new(GetSegmentInfoResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/GetSegmentInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) SyncReplicaSegments(ctx context.Context, in *SyncReplicaSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/SyncReplicaSegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*internalpb.SearchResults, error) {
	out := new(internalpb.SearchResults)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*internalpb.RetrieveResults, error) {
	out := new(internalpb.RetrieveResults)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryNodeClient) GetMetrics(ctx context.Context, in *milvuspb.GetMetricsRequest, opts ...grpc.CallOption) (*milvuspb.GetMetricsResponse, error) {
	out := new(milvuspb.GetMetricsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.query.QueryNode/GetMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryNodeServer is the server API for QueryNode service.
type QueryNodeServer interface {
	GetComponentStates(context.Context, *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error)
	GetTimeTickChannel(context.Context, *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(context.Context, *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error)
	WatchDmChannels(context.Context, *WatchDmChannelsRequest) (*commonpb.Status, error)
	WatchDeltaChannels(context.Context, *WatchDeltaChannelsRequest) (*commonpb.Status, error)
	LoadSegments(context.Context, *LoadSegmentsRequest) (*commonpb.Status, error)
	ReleaseCollection(context.Context, *ReleaseCollectionRequest) (*commonpb.Status, error)
	ReleasePartitions(context.Context, *ReleasePartitionsRequest) (*commonpb.Status, error)
	ReleaseSegments(context.Context, *ReleaseSegmentsRequest) (*commonpb.Status, error)
	GetSegmentInfo(context.Context, *GetSegmentInfoRequest) (*GetSegmentInfoResponse, error)
	SyncReplicaSegments(context.Context, *SyncReplicaSegmentsRequest) (*commonpb.Status, error)
	Search(context.Context, *SearchRequest) (*internalpb.SearchResults, error)
	Query(context.Context, *QueryRequest) (*internalpb.RetrieveResults, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
	GetMetrics(context.Context, *milvuspb.GetMetricsRequest) (*milvuspb.GetMetricsResponse, error)
}

// UnimplementedQueryNodeServer can be embedded to have forward compatible implementations.
type UnimplementedQueryNodeServer struct {
}

func (*UnimplementedQueryNodeServer) GetComponentStates(ctx context.Context, req *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComponentStates not implemented")
}
func (*UnimplementedQueryNodeServer) GetTimeTickChannel(ctx context.Context, req *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeTickChannel not implemented")
}
func (*UnimplementedQueryNodeServer) GetStatisticsChannel(ctx context.Context, req *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatisticsChannel not implemented")
}
func (*UnimplementedQueryNodeServer) WatchDmChannels(ctx context.Context, req *WatchDmChannelsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WatchDmChannels not implemented")
}
func (*UnimplementedQueryNodeServer) WatchDeltaChannels(ctx context.Context, req *WatchDeltaChannelsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WatchDeltaChannels not implemented")
}
func (*UnimplementedQueryNodeServer) LoadSegments(ctx context.Context, req *LoadSegmentsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadSegments not implemented")
}
func (*UnimplementedQueryNodeServer) ReleaseCollection(ctx context.Context, req *ReleaseCollectionRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseCollection not implemented")
}
func (*UnimplementedQueryNodeServer) ReleasePartitions(ctx context.Context, req *ReleasePartitionsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleasePartitions not implemented")
}
func (*UnimplementedQueryNodeServer) ReleaseSegments(ctx context.Context, req *ReleaseSegmentsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseSegments not implemented")
}
func (*UnimplementedQueryNodeServer) GetSegmentInfo(ctx context.Context, req *GetSegmentInfoRequest) (*GetSegmentInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSegmentInfo not implemented")
}
func (*UnimplementedQueryNodeServer) SyncReplicaSegments(ctx context.Context, req *SyncReplicaSegmentsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncReplicaSegments not implemented")
}
func (*UnimplementedQueryNodeServer) Search(ctx context.Context, req *SearchRequest) (*internalpb.SearchResults, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedQueryNodeServer) Query(ctx context.Context, req *QueryRequest) (*internalpb.RetrieveResults, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}
func (*UnimplementedQueryNodeServer) GetMetrics(ctx context.Context, req *milvuspb.GetMetricsRequest) (*milvuspb.GetMetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetrics not implemented")
}

func RegisterQueryNodeServer(s *grpc.Server, srv QueryNodeServer) {
	s.RegisterService(&_QueryNode_serviceDesc, srv)
}

func _QueryNode_GetComponentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetComponentStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).GetComponentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/GetComponentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).GetComponentStates(ctx, req.(*internalpb.GetComponentStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_GetTimeTickChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetTimeTickChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).GetTimeTickChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/GetTimeTickChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).GetTimeTickChannel(ctx, req.(*internalpb.GetTimeTickChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_GetStatisticsChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetStatisticsChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).GetStatisticsChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/GetStatisticsChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).GetStatisticsChannel(ctx, req.(*internalpb.GetStatisticsChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_WatchDmChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchDmChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).WatchDmChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/WatchDmChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).WatchDmChannels(ctx, req.(*WatchDmChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_WatchDeltaChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchDeltaChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).WatchDeltaChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/WatchDeltaChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).WatchDeltaChannels(ctx, req.(*WatchDeltaChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_LoadSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadSegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).LoadSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/LoadSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).LoadSegments(ctx, req.(*LoadSegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_ReleaseCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).ReleaseCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/ReleaseCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).ReleaseCollection(ctx, req.(*ReleaseCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_ReleasePartitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleasePartitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).ReleasePartitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/ReleasePartitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).ReleasePartitions(ctx, req.(*ReleasePartitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_ReleaseSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseSegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).ReleaseSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/ReleaseSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).ReleaseSegments(ctx, req.(*ReleaseSegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_GetSegmentInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSegmentInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).GetSegmentInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/GetSegmentInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).GetSegmentInfo(ctx, req.(*GetSegmentInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_SyncReplicaSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncReplicaSegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).SyncReplicaSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/SyncReplicaSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).SyncReplicaSegments(ctx, req.(*SyncReplicaSegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryNode_GetMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.GetMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryNodeServer).GetMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.query.QueryNode/GetMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryNodeServer).GetMetrics(ctx, req.(*milvuspb.GetMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueryNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milvus.proto.query.QueryNode",
	HandlerType: (*QueryNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetComponentStates",
			Handler:    _QueryNode_GetComponentStates_Handler,
		},
		{
			MethodName: "GetTimeTickChannel",
			Handler:    _QueryNode_GetTimeTickChannel_Handler,
		},
		{
			MethodName: "GetStatisticsChannel",
			Handler:    _QueryNode_GetStatisticsChannel_Handler,
		},
		{
			MethodName: "WatchDmChannels",
			Handler:    _QueryNode_WatchDmChannels_Handler,
		},
		{
			MethodName: "WatchDeltaChannels",
			Handler:    _QueryNode_WatchDeltaChannels_Handler,
		},
		{
			MethodName: "LoadSegments",
			Handler:    _QueryNode_LoadSegments_Handler,
		},
		{
			MethodName: "ReleaseCollection",
			Handler:    _QueryNode_ReleaseCollection_Handler,
		},
		{
			MethodName: "ReleasePartitions",
			Handler:    _QueryNode_ReleasePartitions_Handler,
		},
		{
			MethodName: "ReleaseSegments",
			Handler:    _QueryNode_ReleaseSegments_Handler,
		},
		{
			MethodName: "GetSegmentInfo",
			Handler:    _QueryNode_GetSegmentInfo_Handler,
		},
		{
			MethodName: "SyncReplicaSegments",
			Handler:    _QueryNode_SyncReplicaSegments_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _QueryNode_Search_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _QueryNode_Query_Handler,
		},
		{
			MethodName: "GetMetrics",
			Handler:    _QueryNode_GetMetrics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "query_coord.proto",
}
